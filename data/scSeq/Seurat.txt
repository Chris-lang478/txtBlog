Suerat包是大一统的scRNA分析包




========================================
Seurat对象的slot和处理流程： 从Suerat对象中找可用的数据
----------------------------------------
原始代码： https://github.com/satijalab/seurat/

扣数据 https://satijalab.org/seurat/seurat_clustering_tutorial_part2.html



> str(pbmc2) # Suerat 3.0.1
Formal class 'Seurat' [package "Seurat"] with 12 slots
  ..@ assays      :List of 1
  .. ..$ RNA:Formal class 'Assay' [package "Seurat"] with 7 slots
  .. .. .. ..@ counts       :Formal class 'dgCMatrix' [package "Matrix"] with 6 slots
  .. .. .. .. .. ..@ i       : int [1:5760282] 0 1 2 3 4 5 6 7 8 9 ...
  .. .. .. .. .. ..@ p       : int [1:226] 0 21406 44800 64936 90612 117543 134605 150609 173213 195146 ...
  .. .. .. .. .. ..@ Dim     : int [1:2] 478762 225
  .. .. .. .. .. ..@ Dimnames:List of 2
  .. .. .. .. .. .. ..$ : chr [1:478762] "chr19:50002945:+" "chr12:6647536:+" "chr5:180663951:-" "chr2:232577566:+" ...
  .. .. .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. .. .. ..@ x       : num [1:5760282] 1447 3375 1469 451 1161 ...
  .. .. .. .. .. ..@ factors : list()
  .. .. .. ..@ data         :Formal class 'dgCMatrix' [package "Matrix"] with 6 slots
  .. .. .. .. .. ..@ i       : int [1:5760282] 0 1 2 3 4 5 6 7 8 9 ...
  .. .. .. .. .. ..@ p       : int [1:226] 0 21406 44800 64936 90612 117543 134605 150609 173213 195146 ...
  .. .. .. .. .. ..@ Dim     : int [1:2] 478762 225
  .. .. .. .. .. ..@ Dimnames:List of 2
  .. .. .. .. .. .. ..$ : chr [1:478762] "chr19:50002945:+" "chr12:6647536:+" "chr5:180663951:-" "chr2:232577566:+" ...
  .. .. .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. .. .. ..@ x       : num [1:5760282] 2.83 3.64 2.84 1.78 2.62 ...
  .. .. .. .. .. ..@ factors : list()
  .. .. .. ..@ scale.data   : num [1:478762, 1:225] -2.115 0.311 -0.89 -1.78 -0.189 ...
  .. .. .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. .. .. ..$ : chr [1:478762] "chr19:50002945:+" "chr12:6647536:+" "chr5:180663951:-" "chr2:232577566:+" ...
  .. .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. ..@ key          : chr "rna_"
  .. .. .. ..@ var.features : chr [1:46386] "chr22:38075803:+" "chr1:218023600:-" "chr6:153986769:+" "chr3:165950340:-" ...
  .. .. .. ..@ meta.features:'data.frame':	478762 obs. of  5 variables:
  .. .. .. .. ..$ vst.mean                 : num [1:478762] 2956 2497 1841 1747 1100 ...
  .. .. .. .. ..$ vst.variance             : num [1:478762] 2894461 2351552 1304325 1759644 440198 ...
  .. .. .. .. ..$ vst.variance.expected    : num [1:478762] 2070517 1589088 991165 914030 454536 ...
  .. .. .. .. ..$ vst.variance.standardized: num [1:478762] 1.398 1.48 1.316 1.925 0.968 ...
  .. .. .. .. ..$ vst.variable             : logi [1:478762] TRUE TRUE TRUE TRUE FALSE TRUE ...
  .. .. .. ..@ misc         : NULL
  ..@ meta.data   :'data.frame':	225 obs. of  6 variables:
  .. ..$ orig.ident     : Factor w/ 1 level "BC_HeLa": 1 1 1 1 1 1 1 1 1 1 ...
  .. ..$ nCount_RNA     : num [1:225] 910697 991632 763838 1109857 1137588 ...
  .. ..$ nFeature_RNA   : int [1:225] 21406 23394 20136 25676 26931 17062 16004 22604 21933 14631 ...
  .. ..$ percent.mt     : num [1:225] 0 0 0 0 0 0 0 0 0 0 ...
  .. ..$ RNA_snn_res.0.5: Factor w/ 3 levels "0","1","2": 3 3 3 3 3 3 3 3 3 3 ...
  .. ..$ seurat_clusters: Factor w/ 3 levels "0","1","2": 3 3 3 3 3 3 3 3 3 3 ...
  ..@ active.assay: chr "RNA"
  ..@ active.ident: Factor w/ 3 levels "0","1","2": 3 3 3 3 3 3 3 3 3 3 ...
  .. ..- attr(*, "names")= chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  ..@ graphs      :List of 2
  .. ..$ RNA_nn :Formal class 'Graph' [package "Seurat"] with 6 slots
  .. .. .. ..@ i       : int [1:4500] 0 1 2 3 4 5 6 7 8 10 ...
  .. .. .. ..@ p       : int [1:226] 0 29 57 72 86 101 136 167 182 201 ...
  .. .. .. ..@ Dim     : int [1:2] 225 225
  .. .. .. ..@ Dimnames:List of 2
  .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. ..@ x       : num [1:4500] 1 1 1 1 1 1 1 1 1 1 ...
  .. .. .. ..@ factors : list()
  .. ..$ RNA_snn:Formal class 'Graph' [package "Seurat"] with 6 slots
  .. .. .. ..@ i       : int [1:13115] 0 1 2 3 4 5 6 7 8 9 ...
  .. .. .. ..@ p       : int [1:226] 0 46 92 122 152 182 233 286 320 355 ...
  .. .. .. ..@ Dim     : int [1:2] 225 225
  .. .. .. ..@ Dimnames:List of 2
  .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. ..@ x       : num [1:13115] 1 0.818 0.29 0.29 0.29 ...
  .. .. .. ..@ factors : list()
  ..@ neighbors   : list()
  ..@ reductions  :List of 2
  .. ..$ pca :Formal class 'DimReduc' [package "Seurat"] with 8 slots
  .. .. .. ..@ cell.embeddings           : num [1:225, 1:50] 36 34.5 63.2 72.8 58.3 ...
  .. .. .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. .. .. ..$ : chr [1:50] "PC_1" "PC_2" "PC_3" "PC_4" ...
  .. .. .. ..@ feature.loadings          : num [1:46386, 1:50] 0.0381 0.0379 0.0385 0.0378 0.0374 ...
  .. .. .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. .. .. ..$ : chr [1:46386] "chr22:38075803:+" "chr1:218023600:-" "chr6:153986769:+" "chr3:165950340:-" ...
  .. .. .. .. .. ..$ : chr [1:50] "PC_1" "PC_2" "PC_3" "PC_4" ...
  .. .. .. ..@ feature.loadings.projected: num[0 , 0 ] 
  .. .. .. ..@ assay.used                : chr "RNA"
  .. .. .. ..@ stdev                     : num [1:50] 20.5 19 18.3 17.7 17.3 ...
  .. .. .. ..@ key                       : chr "PC_"
  .. .. .. ..@ jackstraw                 :Formal class 'JackStrawData' [package "Seurat"] with 4 slots
  .. .. .. .. .. ..@ empirical.p.values     : num [1:46386, 1:20] 0 0 0 0 0 0 0 0 0 0 ...
  .. .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. .. .. .. .. ..$ : chr [1:46386] "chr22:38075803:+" "chr1:218023600:-" "chr6:153986769:+" "chr3:165950340:-" ...
  .. .. .. .. .. .. .. ..$ : chr [1:20] "PC1" "PC2" "PC3" "PC4" ...
  .. .. .. .. .. ..@ fake.reduction.scores  : num [1:46300, 1:20] -0.001198 -0.00154 -0.00143 0.000949 -0.004263 ...
  .. .. .. .. .. ..@ empirical.p.values.full: logi [1, 1] NA
  .. .. .. .. .. ..@ overall.p.values       : num [1:20, 1:2] 1 2 3 4 5 6 7 8 9 10 ...
  .. .. .. .. .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. .. .. .. .. ..$ : NULL
  .. .. .. .. .. .. .. ..$ : chr [1:2] "PC" "Score"
  .. .. .. ..@ misc                      :List of 1
  .. .. .. .. ..$ total.variance: num 37923
  .. ..$ umap:Formal class 'DimReduc' [package "Seurat"] with 8 slots
  .. .. .. ..@ cell.embeddings           : num [1:225, 1:2] -9.07 -9.37 -9.85 -10.11 -9.73 ...
  .. .. .. .. ..- attr(*, "dimnames")=List of 2
  .. .. .. .. .. ..$ : chr [1:225] "c01ROW07" "c01ROW12" "c01ROW24" "c01ROW31" ...
  .. .. .. .. .. ..$ : chr [1:2] "UMAP_1" "UMAP_2"
  .. .. .. ..@ feature.loadings          : num[0 , 0 ] 
  .. .. .. ..@ feature.loadings.projected: num[0 , 0 ] 
  .. .. .. ..@ assay.used                : chr "RNA"
  .. .. .. ..@ stdev                     : num(0) 
  .. .. .. ..@ key                       : chr "UMAP_"
  .. .. .. ..@ jackstraw                 :Formal class 'JackStrawData' [package "Seurat"] with 4 slots
  .. .. .. .. .. ..@ empirical.p.values     : num[0 , 0 ] 
  .. .. .. .. .. ..@ fake.reduction.scores  : num[0 , 0 ] 
  .. .. .. .. .. ..@ empirical.p.values.full: num[0 , 0 ] 
  .. .. .. .. .. ..@ overall.p.values       : num[0 , 0 ] 
  .. .. .. ..@ misc                      : list()
  ..@ project.name: chr "BC_HeLa"
  ..@ misc        : list()
  ..@ version     :Classes 'package_version', 'numeric_version'  hidden list of 1
  .. ..$ : int [1:3] 3 0 1
  ..@ commands    :List of 9
  .. ..$ NormalizeData.RNA       :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "NormalizeData.RNA"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-08-14 10:08:05"
  .. .. .. ..@ call.string: chr [1:2] "NormalizeData(pbmc, normalization.method = \"LogNormalize\", " "    scale.factor = 10000)"
  .. .. .. ..@ params     :List of 5
  .. .. .. .. ..$ assay               : chr "RNA"
  .. .. .. .. ..$ normalization.method: chr "LogNormalize"
  .. .. .. .. ..$ scale.factor        : num 10000
  .. .. .. .. ..$ margin              : num 1
  .. .. .. .. ..$ verbose             : logi TRUE
  .. ..$ FindVariableFeatures.RNA:Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "FindVariableFeatures.RNA"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 17:21:07"
  .. .. .. ..@ call.string: chr "FindVariableFeatures(pbmc, selection.method = \"vst\", nfeatures = 46386)"
  .. .. .. ..@ params     :List of 12
  .. .. .. .. ..$ assay              : chr "RNA"
  .. .. .. .. ..$ selection.method   : chr "vst"
  .. .. .. .. ..$ loess.span         : num 0.3
  .. .. .. .. ..$ clip.max           : chr "auto"
  .. .. .. .. ..$ mean.function      :function (mat, display_progress)  
  .. .. .. .. ..$ dispersion.function:function (mat, display_progress)  
  .. .. .. .. ..$ num.bin            : num 20
  .. .. .. .. ..$ binning.method     : chr "equal_width"
  .. .. .. .. ..$ nfeatures          : num 46386
  .. .. .. .. ..$ mean.cutoff        : num [1:2] 0.1 8
  .. .. .. .. ..$ dispersion.cutoff  : num [1:2] 1 Inf
  .. .. .. .. ..$ verbose            : logi TRUE
  .. ..$ ScaleData.RNA           :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "ScaleData.RNA"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 17:33:21"
  .. .. .. ..@ call.string: chr "ScaleData(pbmc, features = all.genes)"
  .. .. .. ..@ params     :List of 10
  .. .. .. .. ..$ features          : chr [1:478762] "chr19:50002945:+" "chr12:6647536:+" "chr5:180663951:-" "chr2:232577566:+" ...
  .. .. .. .. ..$ assay             : chr "RNA"
  .. .. .. .. ..$ model.use         : chr "linear"
  .. .. .. .. ..$ use.umi           : logi FALSE
  .. .. .. .. ..$ do.scale          : logi TRUE
  .. .. .. .. ..$ do.center         : logi TRUE
  .. .. .. .. ..$ scale.max         : num 10
  .. .. .. .. ..$ block.size        : num 1000
  .. .. .. .. ..$ min.cells.to.block: num 225
  .. .. .. .. ..$ verbose           : logi TRUE
  .. ..$ RunPCA.RNA              :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "RunPCA.RNA"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 17:33:33"
  .. .. .. ..@ call.string: chr "RunPCA(pbmc2, features = VariableFeatures(object = pbmc2))"
  .. .. .. ..@ params     :List of 11
  .. .. .. .. ..$ assay          : chr "RNA"
  .. .. .. .. ..$ features       : chr [1:46386] "chr22:38075803:+" "chr1:218023600:-" "chr6:153986769:+" "chr3:165950340:-" ...
  .. .. .. .. ..$ npcs           : num 50
  .. .. .. .. ..$ rev.pca        : logi FALSE
  .. .. .. .. ..$ weight.by.var  : logi TRUE
  .. .. .. .. ..$ verbose        : logi TRUE
  .. .. .. .. ..$ ndims.print    : int [1:5] 1 2 3 4 5
  .. .. .. .. ..$ nfeatures.print: num 30
  .. .. .. .. ..$ reduction.name : chr "pca"
  .. .. .. .. ..$ reduction.key  : chr "PC_"
  .. .. .. .. ..$ seed.use       : num 42
  .. ..$ JackStraw.RNA.pca       :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "JackStraw.RNA.pca"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 18:25:16"
  .. .. .. ..@ call.string: chr "JackStraw(pbmc2, num.replicate = 100)"
  .. .. .. ..@ params     :List of 7
  .. .. .. .. ..$ reduction    : chr "pca"
  .. .. .. .. ..$ assay        : chr "RNA"
  .. .. .. .. ..$ dims         : num 20
  .. .. .. .. ..$ num.replicate: num 100
  .. .. .. .. ..$ prop.freq    : num 0.01
  .. .. .. .. ..$ verbose      : logi TRUE
  .. .. .. .. ..$ maxit        : num 1000
  .. ..$ ScoreJackStraw          :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "ScoreJackStraw"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 18:27:05"
  .. .. .. ..@ call.string: chr "ScoreJackStraw(pbmc2, dims = 1:20)"
  .. .. .. ..@ params     :List of 4
  .. .. .. .. ..$ reduction   : chr "pca"
  .. .. .. .. ..$ dims        : int [1:20] 1 2 3 4 5 6 7 8 9 10 ...
  .. .. .. .. ..$ score.thresh: num 1e-05
  .. .. .. .. ..$ do.plot     : logi FALSE
  .. ..$ FindNeighbors.RNA.pca   :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "FindNeighbors.RNA.pca"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 18:34:31"
  .. .. .. ..@ call.string: chr "FindNeighbors(pbmc2, dims = 1:10)"
  .. .. .. ..@ params     :List of 11
  .. .. .. .. ..$ reduction   : chr "pca"
  .. .. .. .. ..$ dims        : int [1:10] 1 2 3 4 5 6 7 8 9 10
  .. .. .. .. ..$ assay       : chr "RNA"
  .. .. .. .. ..$ k.param     : num 20
  .. .. .. .. ..$ compute.SNN : logi TRUE
  .. .. .. .. ..$ prune.SNN   : num 0.0667
  .. .. .. .. ..$ nn.eps      : num 0
  .. .. .. .. ..$ verbose     : logi TRUE
  .. .. .. .. ..$ force.recalc: logi FALSE
  .. .. .. .. ..$ do.plot     : logi FALSE
  .. .. .. .. ..$ graph.name  : chr [1:2] "RNA_nn" "RNA_snn"
  .. ..$ FindClusters            :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "FindClusters"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 18:34:33"
  .. .. .. ..@ call.string: chr "FindClusters(pbmc2, resolution = 0.5)"
  .. .. .. ..@ params     :List of 8
  .. .. .. .. ..$ graph.name    : chr "RNA_snn"
  .. .. .. .. ..$ modularity.fxn: num 1
  .. .. .. .. ..$ resolution    : num 0.5
  .. .. .. .. ..$ algorithm     : num 1
  .. .. .. .. ..$ n.start       : num 10
  .. .. .. .. ..$ n.iter        : num 10
  .. .. .. .. ..$ random.seed   : num 0
  .. .. .. .. ..$ verbose       : logi TRUE
  .. ..$ RunUMAP.RNA.pca         :Formal class 'SeuratCommand' [package "Seurat"] with 4 slots
  .. .. .. ..@ name       : chr "RunUMAP.RNA.pca"
  .. .. .. ..@ time.stamp : POSIXct[1:1], format: "2019-09-11 18:38:08"
  .. .. .. ..@ call.string: chr "RunUMAP(pbmc2, dims = 1:8)"
  .. .. .. ..@ params     :List of 18
  .. .. .. .. ..$ dims                : int [1:8] 1 2 3 4 5 6 7 8
  .. .. .. .. ..$ reduction           : chr "pca"
  .. .. .. .. ..$ assay               : chr "RNA"
  .. .. .. .. ..$ n.neighbors         : int 30
  .. .. .. .. ..$ n.components        : int 2
  .. .. .. .. ..$ metric              : chr "correlation"
  .. .. .. .. ..$ learning.rate       : num 1
  .. .. .. .. ..$ min.dist            : num 0.3
  .. .. .. .. ..$ spread              : num 1
  .. .. .. .. ..$ set.op.mix.ratio    : num 1
  .. .. .. .. ..$ local.connectivity  : int 1
  .. .. .. .. ..$ repulsion.strength  : num 1
  .. .. .. .. ..$ negative.sample.rate: int 5
  .. .. .. .. ..$ seed.use            : int 42
  .. .. .. .. ..$ angular.rp.forest   : logi FALSE
  .. .. .. .. ..$ verbose             : logi TRUE
  .. .. .. .. ..$ reduction.name      : chr "umap"
  .. .. .. .. ..$ reduction.key       : chr "UMAP_"
  ..@ tools       : list()
#





1. Suerat 3.0.1
(1)#UMAP分类标签的位置
pbmc2@assays$RNA@scale.data
table(pbmc2@active.ident)

pbmc2@active.ident[pbmc2@active.ident==1]
c0=names(pbmc2@active.ident[pbmc2@active.ident==0]) #获取cluster0的cell ID

(2) 使用Idents函数
head(Idents(pbmc2), 5)
## c01ROW07 c01ROW12 c01ROW24 c01ROW31 c01ROW35 
##        2        2        2        2        2 
## Levels: 0 1 2



(3) 画dotplot，合并0和1为一个新的 cluster BC: 
# 合并0和1为BC，标记2为HeLa
pbmc11.2=pbmc11
pbmc11.2@meta.data$seurat_clusters=as.character(pbmc11.2@meta.data$seurat_clusters)
table(pbmc11.2@meta.data$seurat_clusters)
#0  1  2 
#87 82 56
pbmc11.2@meta.data$seurat_clusters[pbmc11.2@meta.data$seurat_clusters %in% c(0,1)]="BC"; # rep("BC", 87+82)
pbmc11.2@meta.data$seurat_clusters[pbmc11.2@meta.data$seurat_clusters %in% c(2)]="HeLa" #rep("HeLa", 56)
#
table(pbmc11.2@meta.data$seurat_clusters)
#BC HeLa 
#169   56
# 再覆盖一次active.ident，就可以继续画 dotplot 了
pbmc11.2@active.ident=pbmc11.2@meta.data$seurat_clusters

#
DotPlotPDF(BC_HeLa.scoreGenes,"13-BC_vs_HeLa---top5",width=10,height=4.5,pbmc=pbmc11.2) 





###### 2.0版本的
1. slot raw.data原始count数据

> br5@raw.data[1:4,1:4]
          nonSync.c19.r28 nonSync.c16.r10 nonSync.c14.r27 nonSync.c19.r34
5_8S_rRNA               1               0             180               0
7SK                     0               0               5               0
A1BG                    2               0               1               0
A1BG-AS1                0               5               0               0



2. slot data 保存的normalization后的数据，其实就是CPM。
就是除以cell内总count，再乘以一个系数（默认是10000）
> br5@data[1:4,1:4]
4 x 4 sparse Matrix of class "dgCMatrix"
          nonSync.c19.r28 nonSync.c16.r10 nonSync.c14.r27 nonSync.c19.r34
5_8S_rRNA     0.003348308      .              0.428460466               .
7SK           .                .              0.014748829               .
A1BG          0.006685442      .              0.002967219               .
A1BG-AS1      .                0.01511409     .                         .

> 1/sum(br5@raw.data[,1])*1e4
[1] 0.00335392

> 5/sum(br5@raw.data[,2])*1e4
[1] 0.01522888



3. slot scale.data 是做过标准化后的数据，此后的分析都是基于缩放过的数据。
ScaleData(): Scaling the data and removing unwanted sources of variation。

> br5@scale.data[1:2,1:4]
          nonSync.c19.r28 nonSync.c16.r10 nonSync.c14.r27 nonSync.c19.r34
5_8S_rRNA      -0.5576100      -0.6386333       1.6995682      -0.3316566
7SK            -0.3512039      -0.3441605       0.7499054      -0.3786910










========================================
|-- Seurat包：单细胞测序的各个方面
----------------------------------------
1.官方教程页 http://satijalab.org/seurat/get_started.html

http://hemberg-lab.github.io/scRNA.seq.course/seurat-chapter.html [作废 2019.12.24check]
https://scrnaseq-course.cog.sanger.ac.uk/website/index.html
功能包含QC, analysis, and exploration of scRNA-seq data。


========================================
|-- 安装Suerat包： [10xG官方推荐]
----------------------------------------
[10xG官方推荐]Seurat is an R package designed for QC, analysis, and exploration of single cell RNA-seq data. 
http://satijalab.org/seurat/
推荐页：https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/rkit



1.官网： https://satijalab.org/seurat/install.html


install.packages('devtools')
# Replace '2.3.0' with your desired version
devtools::install_version(package = 'Seurat', version = package_version('2.3.1'))
library(Seurat)

高版本的装不上：
configure: error: The version of hdf5 installed on your system is not sufficient. Please ensure that at least version 1.8.13 is installed







========================================
FindVariableGenes() plots dispersion是怎么算的？
----------------------------------------
1.
https://satijalab.org/seurat/faq

FindVariableGenes() plots dispersion (a normalized measure of to cell-to-cell variation) as a function of average expression for each gene. Our goal is to identify a set of high-variance genes, and we recommend setting the cutoff parameters in this function by visually evaluating this plot to define outliers.

2.





========================================
Cell-Cycle Scoring and Regression 细胞周期打分和回归
----------------------------------------
1. Cell-Cycle Scoring and Regression
#https://satijalab.org/seurat/cell_cycle_vignette.html

We demonstrate how to mitigate the effects of cell cycle heterogeneity in scRNA-seq data by calculating cell cycle phase scores based on canonical markers, and regressing these out of the data during pre-processing. 

两种策略，一种是完全regression，另一种是只针对 S和G2M 的差异回归。 



2.重点：周期相关基因list怎么找？https://www.biostars.org/p/364214/
List of Human Cell Cycle Stage Specific Genes() 
and this list from Qiagen.
(https://www.qiagen.com/it/resources/resourcedetail?id=0ee18e97-d445-4fd7-9aa4-0ef4bece124f&lang=en)


#########
paper提到的两篇重点参考文献http://science.sciencemag.org/content/352/6282/189
To characterize cycling cells more precisely, we used gene signatures that have previously been shown to denote G1/S or G2/M phases in both synchronization (20) and single-cell (16) experiments in cell lines. 

##[16]M. L. Whitfield, G. Sherlock, A. J. Saldanha, J. I. Murray, C. A. Ball, K. E. Alexander, J. C. Matese, C. M. Perou, M. M. Hurt, P. O. Brown, D. Botstein, Botstein, Identification of genes periodically expressed in the human cell cycle and their expression in tumors. Mol. Biol. Cell 13, 1977–2000 (2002). doi:10.1038/nrc1802 pmid:12058064 
高被引522次：https://www.ncbi.nlm.nih.gov/pubmed?linkname=pubmed_pubmed_citedin&from_uid=12058064
data: http://genome-www.stanford.edu/Human-CellCycle/Hela/

##[20]E. Z. Macosko, A. Basu, R. Satija, J. Nemesh, K. Shekhar, M. Goldman, I. Tirosh, A. R. Bialas, N. Kamitaki, E. M. Martersteck, J. J. Trombetta, D. A. Weitz, J. R. Sanes, A. K. Shalek, A. Regev, S. A. McCarroll, Highly parallel genome-wide expression profiling of individual cells using nanoliter droplets. Cell 161, 1202–1214 (2015). doi:10.1016/j.cell.2015.05.002 pmid:26000488 
#########
[20]的补充材料“Cell Cycle Analysis of HEK and 3T3 Cells”写fig4是怎么做的。
https://ars.els-cdn.com/content/image/1-s2.0-S0092867415005498-mmc1.pdf

Gene sets reflecting five phases of the HeLa cell cycle (G1/S, S, G2/M, M and M/G1) were taken from
Whitfield et al. (Whitfield et al., 2002) (Table S2)


(1)BrdU:https://baike.baidu.com/item/BrdU/8395857?fr=aladdin
PI:https://baike.baidu.com/item/pi/4004256




refer
讨论细胞周期基因： https://www.cnblogs.com/leezx/p/8648363.html
R包ccRemover： https://cran.r-project.org/web/packages/ccRemover/vignettes/ccRemover_tutorial.html




========================================
t-SNE算法
----------------------------------------

https://mp.weixin.qq.com/s?__biz=MzI5MTcwNjA4NQ==&mid=2247484978&idx=1&sn=07b7f734ad0ad44562186c1ef3663057&scene=21#wechat_redirect






========================================
Seurat包：画DotPlot图
----------------------------------------

####replot markergenes
# v2.0新增2个filter
# v2.1 新增可以设置 seurat 对象，方便从外部修改对象的ident后重新传入值
DotPlotPDF=function(genelist,prefix="",width=26,height=10, suerat_obj=br10){
  #filter1:保证基因唯一性
  genelist=unique(genelist)
  #filter2:保证基因在数据中存在
  gene.exist=rownames(suerat_obj@data)#有的基因名字
  #打印出不存在的基因
  gene.reserve=c()
  for(g in genelist){
    if(g %in% gene.exist){
      gene.reserve=c(gene.reserve, g)
    }else{
      print(g)
    }
  }
  #开始画图
  CairoPDF( paste0(prefix,"_DotPlot.pdf") , width = width, height = height)
  #控制x坐标循序，可以把x逆序，如rev(genelist)
  #怎么控制y坐标顺序？
  marker_dot_plot <- DotPlot(object = suerat_obj, genes.plot = gene.reserve, plot.legend = TRUE,
                             cols.use = c("black","red"), x.lab.rot = T,dot.scale = 10, do.return=T)
  marker_dot_plot <- marker_dot_plot + theme(axis.text.x = element_text(angle = 60, vjust = 1, hjust = 1))
  print(marker_dot_plot)
  dev.off()
}


# 查看几个level，也就是几个分类
levels(br10@ident)
table(br10@ident)

getwd()
DotPlotPDF(rev(tmp$gene),"adjP0.05",width=28,height=4.5) #75个
DotPlotPDF(top5$gene,"top5",width=5,height=4.5) #5*4=20个

markers=readLines("marker_list/8.txt") #读取每行，生成数组
DotPlotPDF(markers,"top5",width=5,height=4.5)
#





========================================
Seurat包：用tsne画不同批次的细胞的点图
----------------------------------------

#
mef=br10

#分离分类变量
cn=colnames(mef@data)
end=regexpr('\\.',cn)
#end=unlist(end[1:60])
end;table(end)
#pop= sapply(cn,substr,rep(1,60),end,USE.NAMES=F)
pop=c()
for(i in c(1:60)){
  pop=c(pop,substr(cn[i], 1, end[i]-1))
}
pop
table(pop)


#TSNE plot for batches
#pop<-rep(1,28)#bc
#pop<-c(pop,rep(2,32))#mef
#pop
length(pop);table(pop)
#pop<-rep(1,73)
#pop<-c(pop,rep(2,26))
#pop<-c(pop,rep(3,76))

coordx<-mef@dr$tsne@cell.embeddings[,1]  # 新版本又更新了v3.0.1 mef@reductions$umap@cell.embeddings[,1]
coordy<-mef@dr$tsne@cell.embeddings[,2]
df1<-data.frame(coordx=coordx,coordy=coordy,pop=pop)
df1$pop<-as.factor(df1$pop)
#pdf(paste(path_out,"5.pdf",sep=""))
par(mai=c(1,1,0.2,0.5));
pl<-ggplot(data=df1,aes(x=coordx,y=coordy,colour=factor(pop)))+
  geom_point(size=2,alpha=1)+
  #   guides(fill=guide_legend(title="test1"))+
  labs(x="tSNE 1",y="tSNE 2")+theme_bw()+
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    #    panel.border = element_blank(),
    panel.background = element_blank())
#pl+scale_colour_discrete(name="sample",labels=c("bc","mef"))

pl+scale_color_discrete(name="Sample")
#dev.off()
############################





========================================
Seurat包：multidimensional scaling (MDS)多维尺度分析分析
----------------------------------------
Seurat - Dimensional Reduction Vignette
https://satijalab.org/seurat/dim_reduction_vignette.html

MDS降维原理：
https://blog.csdn.net/yang_xian521/article/details/7301121
https://www.cnblogs.com/lochan/p/6627511.html


# Before running MDS, we first calculate a distance matrix between all pairs
# of cells.  Here we use a simple euclidean distance metric on all genes,
# using object@scale.data as input
pbmc=br10
d <- dist(x = t(x = pbmc@scale.data))
# Run the MDS procedure, k determines the number of dimensions
mds <- cmdscale(d = d, k = 2)
# cmdscale returns the cell embeddings, we first label the columns to ensure
# downstream consistency
colnames(x = mds) <- paste0("MDS", 1:2)
# We will now store this as a new dimensional reduction called 'mds'
pbmc <- SetDimReduction(object = pbmc, reduction.type = "mds", slot = "cell.embeddings", 
                        new.data = mds)
pbmc <- SetDimReduction(object = pbmc, reduction.type = "mds", slot = "key", 
                        new.data = "MDS")

# We can now use this as you would any other dimensional reduction in all
# downstream functions (similar to PCAPlot, but generalized for any
# reduction)
DimPlot(object = pbmc, reduction.use = "mds", pt.size = 2) #0.5
DimPlot(object = pbmc, pt.size = 2)

pop2=rep(0,28);pop2=c(pop2, rep(1,32));pop2
DimPlot(object = pbmc, reduction.use = "mds", pt.size = 2) + 
  geom_point(aes(colour=factor(pop2)) )
  
#



========================================
重绘 Seurat热图，标记细胞来源、Seurat分类
----------------------------------------

1. 原始代码： 

# 全部 find markers for every cluster compared to all remaining cells, report only the positive ones
pbmc.markers <- FindAllMarkers(pbmc2, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)


top10 <- pbmc.markers %>% group_by(cluster) %>% top_n(n = 10, wt = avg_logFC)
#DoHeatmap(pbmc2, features = top10$gene) + NoLegend()
DoHeatmap(pbmc2, features = top10$gene)





2. 自定义代码
########### 画heatmap，标记来源
library(pheatmap)
#来源标签
syncID=gsub("_","",readLines("/home/wangjl/data/apa/190530Mix/cluster2_syncHeLa.27L.cellID") ); head(syncID)
normalID=gsub("_","",readLines("/home/wangjl/data/apa/190530Mix/cluster2_HeLa_nonsyncHeLa.29R.cellID") ); head(normalID)
allID=colnames( pbmc2@assays$RNA ); head(allID) #没啥用
#

#添加UMAP分类标签
pbmc2@assays$RNA@scale.data
table(pbmc2@active.ident)
pbmc2@active.ident[pbmc2@active.ident==1]
c0=names(pbmc2@active.ident[pbmc2@active.ident==0])
c1=names(pbmc2@active.ident[pbmc2@active.ident==1])
c2=names(pbmc2@active.ident[pbmc2@active.ident==2])

#
pbmc2@assays$RNA[top10$gene,c("c01ROW24","c01ROW35")] #同步化 head
pbmc2@assays$RNA[top10$gene,c("c9ROW14","c9ROW15")] #同步化 tail
pbmc2@assays$RNA[top10$gene,c("c12ROW10","c12ROW16")] #normal head
#
pbmc2@assays$RNA[top10$gene[20:30], gsub("_","",syncID)]
pbmc2@assays$RNA[top10$gene[20:30], gsub("_","",normalID)]
#

# 构建列注释信息
annotation_col = data.frame(
  row.names = c(c0, c1, c2),
  cellType = rep("BC", length(allID)),
  UMAP_Cluster=rep(c(0,1,2),c(length(c0), length(c1), length(c2)))
)
annotation_col$cellType=as.character(annotation_col$cellType)
annotation_col$cellType[ rownames(annotation_col) %in% syncID]="syncHeLa"
annotation_col$cellType[ rownames(annotation_col) %in% normalID]='normalHeLa'
annotation_col
head(annotation_col)

# 自定义注释颜色
# 自定注释信息的颜色列表
ann_colors = list(
  #cellType = c("white", "firebrick"),
  cellType = c(BC="yellow", syncHeLa="#F8746B", normalHeLa="#00BDC2"),
  UMAP_Cluster = c('0' = "#F8766D", '1' = "#00BA38", '2' = "#619CFF" )
)
head(ann_colors)

# annotation_col参数添加列注释信息
#rna=pbmc2@assays$RNA
#matrix2=rna[top10$gene,allID]  #[1]  30 225
#class(matrix2)
matrix2=pbmc2@assays$RNA@scale.data[top10$gene,c(c0,c1,c2)] #[1] 478762    225
dim(matrix2) #[1]  30 225
pheatmap(matrix2, annotation_col = annotation_col, annotation_colors = ann_colors,
         cluster_cols=F,cluster_rows=F, #不聚类
         border=FALSE, # 去边框
         gaps_col = c(length(c0), length(c0)+length(c1),  length(c0)+length(c1)+length(c2)), #分组显示
         show_colnames = F) #不显示底下的名字
###########








========================================
Monocle 画涂抹heatmap的函数: plot_pseudotime_heatmap
----------------------------------------
url: https://github.com/cole-trapnell-lab/monocle-release
url: https://github.com/cole-trapnell-lab/monocle3


1. 下载、解压、进入文件夹
3.0版本没有这个函数。

$ find . | xargs grep "plot_pseudotime_heatmap" --color=auto 2>/dev/null


if(is.null(hmcols)) {
    bks <- seq(-3.1,3.1, by = 0.1)
    hmcols <- blue2green2red(length(bks) - 1)
  }
  else {
    bks <- seq(-3.1,3.1, length.out = length(hmcols))
  }
#



(2) 算了，还是安装吧，安装好，ctrl+单击函数名，
# fn1
table.ramp = function (n, mid = 0.5, sill = 0.5, base = 1, height = 1) {
  x <- seq(0, 1, length.out = n)
  y <- rep(0, length(x))
  sill.min <- max(c(1, round((n - 1) * (mid - sill/2)) + 1))
  sill.max <- min(c(n, round((n - 1) * (mid + sill/2)) + 1))
  y[sill.min:sill.max] <- 1
  base.min <- round((n - 1) * (mid - base/2)) + 1
  base.max <- round((n - 1) * (mid + base/2)) + 1
  xi <- base.min:sill.min
  yi <- seq(0, 1, length.out = length(xi))
  i <- which(xi > 0 & xi <= n)
  y[xi[i]] <- yi[i]
  xi <- sill.max:base.max
  yi <- seq(1, 0, length.out = length(xi))
  i <- which(xi > 0 & xi <= n)
  y[xi[i]] <- yi[i]
  height * y
}

# fn2
rgb.tables=function (n, red = c(0.75, 0.25, 1), green = c(0.5, 0.25, 1),  blue = c(0.25, 0.25, 1)) {
  rr <- do.call("table.ramp", as.list(c(n, red)))
  gr <- do.call("table.ramp", as.list(c(n, green)))
  br <- do.call("table.ramp", as.list(c(n, blue)))
  rgb(rr, gr, br)
}

# fn3
blue2green2red=function (n) {
	rgb.tables(n, red = c(0.8, 0.2, 1), green = c(0.5, 0.4, 0.8), blue = c(0.2, 0.2, 1))
}

bks <- seq(-3.1,3.1, by = 0.1)
hmcols <- blue2green2red(length(bks) - 1)

# view the effect
barplot(rep(1, length(hmcols)), col=hmcols, border = NA, space=0, axes=F)








2. 更多代码细节见: https://tool.biomooc.com/R_scripts/#t9






========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------

