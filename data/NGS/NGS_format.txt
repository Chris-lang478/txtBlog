测序中的文件格式

多种文件格式：
	https://genome.ucsc.edu/FAQ/FAQformat.html
	https://software.broadinstitute.org/software/igv/FileFormats


========================================
简并碱基
----------------------------------------

R:AG
Y:CT
M:AC
K:GT
S:GC
W:AT

H:ATC
B:GTC
V:GAC
D:GAT

N:ATGC

这些出现在密码子中的时候可能翻译成同一种氨基酸


RNA中的U，对应DNA中的T。






========================================
fastq - 首行意义、质量分数
----------------------------------------
1.fq文件第一行是标识符
https://en.wikipedia.org/wiki/FASTQ_format
http://blog.csdn.net/chen_amiao/article/details/52890481


Illmina有多种测序仪，从早期的GA、Hiseq2000、Hiseq2500以及即将推广的Hiseq X。 
Hiseq2000一个flowcell中包含8个lane，每个lane可以测一个文库或多样本的混合文库，多样本混合文库如果需要后期区分则每个文库需要一个独特的标签，即Index。其中一个lane包含3列(3个Swath)，每一列又包含8个tile，每一个tile又会种下不同的cluster，如图1所示为Hiseq2500的FlowCell的一个表面。


(1)例子：配对的Read1和Read2文件中的编号：
@E00300:165:H3CMMALXX:6:1101:1945:2047 1:N:0:GGACTCCT
@E00300:165:H3CMMALXX:6:1101:1945:2047 2:N:0:GGACTCCT

E00300	仪器编号the unique instrument name
165	the run id
H3CMMALXX	芯片编号 the flowcell id
6	芯片通道 flowcell lane
1101	芯片通道内的片号 tile number within the flowcell lane
1945	横坐标 'x'-coordinate of the cluster within the tile
2047	纵坐标 'y'-coordinate of the cluster within the tile
1	the member of a pair, 1 or 2 (paired-end or mate-pair reads only)
Y	Y if the read is filtered, N otherwise
0	0 when none of the control bits are on, otherwise it is an even number
GGACTCCT	index sequence

(2)注意：新版本的Illumina软件输出样品编号（来自样品表）而不是index序列。
For example, the following header might appear in the first sample of a batch:
@EAS139:136:FC706VJ:2:2104:15343:197393 1:N:18:1

而之前是：
@EAS139:136:FC706VJ:2:2104:15343:197393 1:Y:18:ATCACG




2.fq文件第四行是质量分数 

测得不好的R1(经过poly T后质量下降)：
@E00300:165:H3CMMALXX:6:1101:1945:2047 1:N:0:GGACTCCT
TCTAGCAGTCTATTATTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTCTTTTTCCTTTAAAAATTTCCGAGCCCACAGCACGAACTTCTATCTCATATTCCGCTTTTATTTTGAAAAAAAAAAAATAATGTAAAATAAAAAGTACAAA
+
AAFFFFFAAAF,77,7AFFF,F<,<FKKKKKKKKKKKKKKKA,,,7F7,,,,7,,,,,,7,,7,,,,,,,,,,(,,,(,,,,,,,7<,,,,,,,,7,,,,,,,A,,,,,,,,,,,,,,,,<<F7<,7,,,,,,,,,,,7,,,,,,,,7,,

测得好的R2：
@E00300:165:H3CMMALXX:6:1101:2575:2047 2:N:0:GGACTCCT
CACTTTAGAATTTGTATAAGAAACTGGTCCATGTAAGTACTTTCCATGTTTTCTCTTCAAATGTTTAAAGTGCTAGCTGATGTACGTACGATATCTCTTCTCAGATATTTGCCTGGCTGTTTACCCAAAGTTGCTTCTAAATCAATACAG
+
A<AFFKKKKKKKKAKKKFKKA7FKKFKFKKKFFKKKKKKFKFKKFAKKFKKKKK7<FKKKKKKKK,FFKKFFKAFFKKKKKFKKKKKKKF<FFAFAAFKAF<,,,FFKKKKKKFK(AAFFKFKKKKAAA,<AKKFKKK,,,<F<,<K,<<


Qillumina-prior to v.1.4 = -10log10(p/(1-p)) 【老版本v1.4以前】

Q(sanger)=-10*log10(p); 
p是base call不正确的概率，越小越好；而质量分数则越高越好。
p=0.05对应的质量得分为Q=约13


Phred quality scores are logarithmically linked to error probabilities
PHRED QUALITY SCORE/	PROBABILITY OF INCORRECT BASE CALL/	BASE CALL ACCURACY
10/	1 in 10/	90 %
20	1 in 100	99 %
30	1 in 1000	99.9 %
40	1 in 10000	99.99 %
50	1 in 100000	99.999 %

从Illumina 1.8开始，质量分数开始使用Sanger格式(Phred+33)。
S - Sanger  Phred+33,  raw reads typically (0, 40), Sanger(Phred+33, 33 to 73)
L - Illumina 1.8+ Phred+33,  raw reads typically (0, 41), 加33后是(33,74)


对应到到该仪器版本所采用过的phred标准，对应的ascall码范围求得整数质量分数值





(2)附录：质量分数Q和ascall码的转化

1)js版
求字符的ascii编号: 'K'.charCodeAt(0) //75
ascii码转字符: String.fromCharCode(33) //"!"

求质量分数Q对应的字符: String.fromCharCode(0+33) //"!"
		     String.fromCharCode(30+33) //"?"
求字符代表的质量分数Q： 'K'.charCodeAt(0) -33 //75-33=42

2)python版
c="K"
a=33
print( c + " 的ASCII 码为", ord(c)) #K 的ASCII 码为 75
print( a , " 对应的字符为", chr(a)) #33  对应的字符为 !

ord(',')-33 #11





3.fastq文件格式转换
格式转换：
Biopython version 1.51 onwards (interconverts Sanger, Solexa and Illumina 1.3+)
EMBOSS version 6.1.0 patch 1 onwards (interconverts Sanger, Solexa and Illumina 1.3+)
BioPerl version 1.6.1 onwards (interconverts Sanger, Solexa and Illumina 1.3+)
BioRuby version 1.4.0 onwards (interconverts Sanger, Solexa and Illumina 1.3+)
BioJava version 1.7.1 to 1.8.x (interconverts Sanger, Solexa and Illumina 1.3+)
MAQ can convert from Solexa to Sanger (use this patch to support Illumina 1.3+ files).
fastx_toolkit The included fastq_quality_converter program can convert Illumina to Sanger






========================================
.vcf file - Variant Call Format 多样性识别格式
----------------------------------------

1.VCF是用于描述SNP，INDEL和SV结果的文本文件。在GATK软件中得到最好的支持，当然SAMtools得到的结果也是VCF格式，和GATK的VCF格式有点差别。


https://en.wikipedia.org/wiki/Variant_Call_Format
The Variant Call Format (VCF) specifies the format of a text file used in bioinformatics for storing gene sequence variations.
vcf是生物信息中说明短基因序列多样性的文本文件格式。

The format has been developed with the advent of large-scale genotyping and DNA sequencing projects, such as the 1000 Genomes Project. 
这个格式是随着大规模基因分型，以及像1000基因组计划等DNA测序工程而产生的。

Existing formats for genetic data such as General feature format (GFF) stored all of the genetic data, much of which is redundant because it will be shared across the genomes. 
现有基因数据格式，比如基因特征格式gff保存了基因全部数据，多数信息是冗余的，因为基因组内共享这些序列。

By using the variant call format only the variations need to be stored along with a reference genome.









2.vcf格式简介：https://blog.csdn.net/VincentLuo91/article/details/72641934
VCF文件分为两部分内容：以“#”开头的注释部分；没有“#”开头的主体部分。


A PDF of the v4.1 spec is http://samtools.github.io/hts-specs/VCFv4.1.pdf
A PDF of the v4.2 spec is http://samtools.github.io/hts-specs/VCFv4.2.pdf


例子文件：
##fileformat=VCFv4.0
##fileDate=20110705
##reference=1000GenomesPilot-NCBI37
##phasing=partial
##INFO=<ID=NS,Number=1,Type=Integer,Description="Number of Samples With Data">
##INFO=<ID=DP,Number=1,Type=Integer,Description="Total Depth">
##INFO=<ID=AF,Number=.,Type=Float,Description="Allele Frequency">
##INFO=<ID=AA,Number=1,Type=String,Description="Ancestral Allele">
##INFO=<ID=DB,Number=0,Type=Flag,Description="dbSNP membership, build 129">
##INFO=<ID=H2,Number=0,Type=Flag,Description="HapMap2 membership">
##FILTER=<ID=q10,Description="Quality below 10">
##FILTER=<ID=s50,Description="Less than 50% of samples have data">
##FORMAT=<ID=GQ,Number=1,Type=Integer,Description="Genotype Quality">
##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">
##FORMAT=<ID=DP,Number=1,Type=Integer,Description="Read Depth">
##FORMAT=<ID=HQ,Number=2,Type=Integer,Description="Haplotype Quality">
#CHROM POS    ID        REF  ALT     QUAL FILTER INFO                              FORMAT      Sample1        Sample2        Sample3
2      4370   rs6057    G    A       29   .      NS=2;DP=13;AF=0.5;DB;H2           GT:GQ:DP:HQ 0|0:48:1:52,51 1|0:48:8:51,51 1/1:43:5:.,.
2      7330   .         T    A       3    q10    NS=5;DP=12;AF=0.017               GT:GQ:DP:HQ 0|0:46:3:58,50 0|1:3:5:65,3   0/0:41:3
2      110696 rs6055    A    G,T     67   PASS   NS=2;DP=10;AF=0.333,0.667;AA=T;DB GT:GQ:DP:HQ 1|2:21:6:23,27 2|1:2:0:18,2   2/2:35:4
2      130237 .         T    .       47   .      NS=2;DP=16;AA=T                   GT:GQ:DP:HQ 0|0:54:7:56,60 0|0:48:4:56,51 0/0:61:2
2      134567 microsat1 GTCT G,GTACT 50   PASS   NS=2;DP=9;AA=G                    GT:GQ:DP    0/1:35:4       0/2:17:2       1/1:40:3

chr1    45796269        .       G       C
chr1    45797505        .       C       G
chr1    45798555        .       T       C
chr1    45798901        .       C       T
chr1    45805566        .       G       C
chr2    47703379        .       C       T
chr2    48010488        .       G       A
chr2    48030838        .       A       T
chr2    48032875        .       CTAT    -
chr2    48032937        .       T       C
chr2    48033273        .       TTTTTGTTTTAATTCCT       -
chr2    48033551        .       C       G
chr2    48033910        .       A       T
chr2    215632048       .       G       T
chr2    215632125       .       TT      -
chr2    215632155       .       T       C
chr2    215632192       .       G       A
chr2    215632255       .       CA      TG
chr2    215634055       .       C       T


从范例上看，VCF文件分为两部分内容：以“#”开头的注释部分；没有“#”开头的主体部分。

值得注意的是，注释部分有很多对VCF的介绍信息。实际上不需要本文章，只是看看这个注释部分就完全明白了VCF各行各列代表的意义。









3. 怎么解释Variation
CHROM 和 POS：代表参考序列名和variant的位置；如果是INDEL的话，位置是INDEL的第一个碱基位置。

ID：variant的ID。比如在dbSNP中有该SNP的id，则会在此行给出；若没有，则用’.'表示其为一个novel variant。

REF 和 ALT：参考序列的碱基 和 Variant的碱基。

QUAL：Phred格式(Phred_scaled)的质量值，表 示在该位点存在variant的可能性；该值越高，则variant的可能性越大；计算方法：Phred值 = -10 * log (1-p) p为variant存在的概率; 通过计算公式可以看出值为10的表示错误概率为0.1，该位点为variant的概率为90%。

FILTER：使用上一个QUAL值来进行过滤的话，是不够的。GATK能使用其它的方法来进行过滤，过滤结果中通过则该值为”PASS”;若variant不可靠，则该项不为”PASS”或”.”。

INFO： 这一行是variant的详细信息，内容很多，以下再具体详述。

FORMAT 和 NA12878：这两行合起来提供了’NA12878′这个sample的基因型的信息。’NA12878′代表这该名称的样品，是由BAM文件中的@RG下的 SM 标签决定的。









4. 基因型信息（最后2列）

chr1 873762 . T G [CLIPPED] GT:AD:DP:GQ:PL 0/1:173,141:282:99:255,0,255 
chr1 877664 rs3828047 A G [CLIPPED] GT:AD:DP:GQ:PL 1/1:0,105:94:99:255,255,0 
chr1 899282 rs28548431 C T [CLIPPED] GT:AD:DP:GQ:PL 0/1:1,3:4:25.92:103,0,26


看上面最后两列数据，这两列数据是对应的，前者为格式，后者为格式对应的数据。

GT：样品的基因型（genotype）。两个数字中间用’/"分 开，这两个数字表示双倍体的sample的基因型。0 表示样品中有ref的allele； 1 表示样品中variant的allele； 2表示有第二个variant的allele。因此： 0/0 表示sample中该位点为纯合的，和ref一致； 0/1 表示sample中该位点为杂合的，有ref和variant两个基因型； 1/1 表示sample中该位点为纯合的，和variant一致。

AD 和 DP：AD(Allele Depth)为sample中每一种allele的reads覆盖度,在diploid中则是用逗号分割的两个值，前者对应ref基因型，后者对应variant基因型； DP（Depth）为sample中该位点的覆盖度。

GQ：基因型的质量值(Genotype Quality)。Phred格式(Phred_scaled)的质量值，表示在该位点该基因型存在的可能性；该值越高，则Genotype的可能性越大；
计算方法：Phred值 = -10 * log (1-p) p为基因型存在的概率。

PL：指定的三种基因型的质量值(provieds the likelihoods of the given genotypes)。这三种指定的基因型为(0/0,0/1,1/1)，这三种基因型的概率总和为1。和之前不一致，该值越大，表明为该种基因型的可能 性越小。 
计算方法：Phred值 = -10 * log (p) p为基因型存在的概率。









5. VCF第8列的信息 info列

chr1    629906  .       C       T       45.4391 .       DP=83;VDB=4.06345e-08;SGB=4.78028;MQSB=1;MQ0F=0.987952;AC=14;AN=14;DP4=0,0,67,9;MQ=0    GT:PL   1/1:9,51,0      1/1:4,3,0       1/1:16,15,0     1/1:4,3,0       1/1:8,66,01/1:9,72,0       1/1:20,18,0

该列信息最多了，都是以 “TAG=Value”,并使用”;”分隔的形式。其中很多的注释信息在VCF文件的头部注释中给出。
这些TAG的解释在之前的##注释行的Description。

##ALT=<ID=*,Description="Represents allele(s) other than observed.">
##INFO=<ID=INDEL,Number=0,Type=Flag,Description="Indicates that the variant is an INDEL.">
##INFO=<ID=IDV,Number=1,Type=Integer,Description="Maximum number of reads supporting an indel">
##INFO=<ID=IMF,Number=1,Type=Float,Description="Maximum fraction of reads supporting an indel">
##INFO=<ID=DP,Number=1,Type=Integer,Description="Raw read depth">
##INFO=<ID=VDB,Number=1,Type=Float,Description="Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)",Version="3">
##INFO=<ID=RPB,Number=1,Type=Float,Description="Mann-Whitney U test of Read Position Bias (bigger is better)">
##INFO=<ID=MQB,Number=1,Type=Float,Description="Mann-Whitney U test of Mapping Quality Bias (bigger is better)">
##INFO=<ID=BQB,Number=1,Type=Float,Description="Mann-Whitney U test of Base Quality Bias (bigger is better)">
##INFO=<ID=MQSB,Number=1,Type=Float,Description="Mann-Whitney U test of Mapping Quality vs Strand Bias (bigger is better)">
##INFO=<ID=SGB,Number=1,Type=Float,Description="Segregation based metric.">
##INFO=<ID=MQ0F,Number=1,Type=Float,Description="Fraction of MQ0 reads (smaller is better)">
##FORMAT=<ID=PL,Number=G,Type=Integer,Description="List of Phred-scaled genotype likelihoods">
##FORMAT=<ID=GT,Number=1,Type=String,Description="Genotype">
##INFO=<ID=AC,Number=A,Type=Integer,Description="Allele count in genotypes for each ALT allele, in the same order as listed">
##INFO=<ID=AN,Number=1,Type=Integer,Description="Total number of alleles in called genotypes">
##INFO=<ID=DP4,Number=4,Type=Integer,Description="Number of high-quality ref-forward , ref-reverse, alt-forward and alt-reverse bases">
##INFO=<ID=MQ,Number=1,Type=Integer,Description="Average mapping quality">
##bcftools_callVersion=1.11-35-g8a744dd+htslib-1.11-27-g246c146


AC，AF 和 AN：AC(Allele Count) 表示该Allele的数目；AF(Allele Frequency) 表示Allele的频率； AN(Allele Number) 表示Allele的总数目。对于1个diploid sample而言：则基因型 0/1 表示sample为杂合子，Allele数为1(双倍体的sample在该位点只有1个等位基因发生了突变)，Allele的频率为0.5(双倍体的 sample在该位点只有50%的等位基因发生了突变)，总的Allele为2； 基因型 1/1 则表示sample为纯合的，Allele数为2，Allele的频率为1，总的Allele为2。

DP：reads覆盖度。是一些reads被过滤掉后的覆盖度。

Dels：Fraction of Reads Containing Spanning Deletions。进行SNP和INDEL calling的结果中，有该TAG并且值为0表示该位点为SNP，没有则为INDEL。

FS：使用Fisher’s精确检验来检测strand bias而得到的Fhred格式的p值。该值越小越好。一般进行filter的时候，可以设置 FS < 10～20。

HaplotypeScore：Consistency of the site with at most two segregating haplotypes

InbreedingCoeff：Inbreeding coefficient as estimated from the genotype likelihoods per-sample when compared against the Hard-Weinberg expectation

MLEAC：Maximum likelihood expectation (MLE) for the allele counts (not necessarily the same as the AC), for each ALT allele, in the same order as listed

MLEAF：Maximum likelihood expectation (MLE) for the allele frequency (not necessarily the same as the AF), for each ALT alle in the same order as listed

MQ：RMS Mapping Quality

MQ0：Total Mapping Quality Zero Reads

MQRankSum：Z-score From Wilcoxon rank sum test of Alt vs. Ref read mapping qualities




ref:
http://www.chenlianfu.com/?p=1514












========================================
bed文件 - Browser Extensible Data 浏览器扩展数据文件
----------------------------------------
http://bedtools.readthedocs.io/en/latest/content/tools/window.html

https://genome.ucsc.edu/FAQ/FAQformat.html#format1

BED (Browser Extensible Data) format provides a flexible way to define the data lines that are displayed in an annotation track. BED lines have three required fields and nine additional optional fields. The number of fields per line must be consistent throughout any single set of data in an annotation track. The order of the optional fields is binding: lower-numbered fields must always be populated if higher-numbered fields are used.


The first three required BED fields are:
前三列是必须的：
1. chrom染色体 - The name of the chromosome (e.g. chr3, chrY, chr2_random) or scaffold (e.g. scaffold10671).
2. chromStart起始位置 - The starting position of the feature in the chromosome or scaffold. The first base in a chromosome is numbered 0.
3. chromEnd结束位置 - The ending position of the feature in the chromosome or scaffold. The chromEnd base is not included in the display of the feature. For example, the first 100 bases of a chromosome are defined as chromStart=0, chromEnd=100, and span the bases numbered 0-99.
feature在染色体上终止位置。染色体上前100个碱基片段的位置位置标记为：chromStart=0, chromEnd=100。 实际上，第100个碱基不属于当前片段中，当前片段的碱基应该是0-99。所以在BED文件中，起始位置从0开始，终止位置从1开始。




The 9 additional optional BED fields are:
还有9列可选项
4. name名字 - Defines the name of the BED line. This label is displayed to the left of the BED line in the Genome Browser window when the track is open to full display mode or directly to the left of the item in pack mode.
5. score打分 - A score between 0 and 1000. If the track line useScore attribute is set to 1 for this annotation data set, the score value will determine the level of gray in which this feature is displayed (higher numbers = darker gray). This table shows the Genome Browser's translation of BED score values into shades of gray:
shade	 	 	 	 	 	 	 	 	 
score in range  	≤ 166	167-277	278-388	389-499	500-611	612-722	723-833	834-944	≥ 945

6. strand正义反义链 - Defines the strand - either '+' or '-'.

# 一般文件也就到这里了。



7. thickStart - The starting position at which the feature is drawn thickly (for example, the start codon in gene displays). When there is no thick part, thickStart and thickEnd are usually set to the chromStart position.
8. thickEnd - The ending position at which the feature is drawn thickly (for example, the stop codon in gene displays).


9. itemRgb - An RGB value of the form R,G,B (e.g. 255,0,0). If the track line itemRgb attribute is set to "On", this RBG value will determine the display color of the data contained in this BED line. NOTE: It is recommended that a simple color scheme (eight colors or less) be used with this attribute to avoid overwhelming the color resources of the Genome Browser and your Internet browser.
R,G,B (e.g. 255,0,0)值，当track的itemRgb属性 设置为 "On"，BED的行会显示颜色.(见下例)

10. blockCount - The number of blocks (exons) in the BED line.
11. blockSizes - A comma-separated list of the block sizes. The number of items in this list should correspond to blockCount.
12. blockStarts - A comma-separated list of block starts. All of the blockStart positions should be calculated relative to chromStart. The number of items in this list should correspond to blockCount.

bed文件是0based坐标系统: In BED files with block definitions, the first blockStart value must be 0, so that the first block begins at chromStart. Similarly, the final blockStart position plus the final blockSize value must equal chromEnd. Blocks may not overlap.





# Example 1: BED文件示例
Here's an example of an annotation track, introduced by a header line, that is followed by a complete BED definition:

track name=pairedReads description="Clone Paired Reads" useScore=1
chr22 1000 5000 cloneA 960 + 1000 5000 0 2 567,488, 0,3512
chr22 2000 6000 cloneB 900 - 2000 6000 0 2 433,399, 0,3601


简写
chr1  213941196  213942363
chr1  213942363  213943530
chr1  213943530  213944697
chr2  158364697  158365864




# Example 2: itemRgb 添加颜色
browser position chr7:127471196-127495720
browser hide all
track name="ItemRGBDemo" description="Item RGB demonstration" visibility=2 itemRgb="On"
chr7    127471196  127472363  Pos1  0  +  127471196  127472363  255,0,0
chr7    127472363  127473530  Pos2  0  +  127472363  127473530  255,0,0
chr7    127473530  127474697  Pos3  0  +  127473530  127474697  255,0,0
chr7    127474697  127475864  Pos4  0  +  127474697  127475864  255,0,0
chr7    127475864  127477031  Neg1  0  -  127475864  127477031  0,0,255
chr7    127477031  127478198  Neg2  0  -  127477031  127478198  0,0,255
chr7    127478198  127479365  Neg3  0  -  127478198  127479365  0,0,255
chr7    127479365  127480532  Pos5  0  +  127479365  127480532  255,0,0
chr7    127480532  127481699  Neg4  0  -  127480532  127481699  0,0,255

# 上面信息在the Genome Browser展示结果，查看 BED itemRgb; 其中Pos 和Neg 分别由一种不同的颜色标记。
http://www.genome.ucsc.edu/cgi-bin/hgTracks?db=hg19&virtMode=0&position=chr7%3A127471196-127495720&hgsid=730966987_AnyMOyiWgkvvHndSdQ5bV5XqUatg




Example3: MACS输出的bed文件

一般情况下，我们只用到前面5个字段，这也是做peak calling的MACS输出的字段。
其中第5个字段，MACS的解释是这样子的：
The 5th column in this file is the summit height of fragment pileup.
是片段堆积的峰高。

==> KYSE510_paper_peaks.bed <==
chr1    713287  714882  MACS_peak_1     261.68
chr1    714929  715806  MACS_peak_2     84.27
chr1    761594  763202  MACS_peak_3     1788.77
chr1    839446  840825  MACS_peak_4     203.48
chr1    893796  894937  MACS_peak_5     195.91
chr1    895383  896746  MACS_peak_6     169.98
chr1    901229  902704  MACS_peak_7     322.76
chr1    910630  912195  MACS_peak_8     567.54
chr1    933833  937720  MACS_peak_9     3100.00
chr1    947378  951035  MACS_peak_10    1113.57









$ cat A.bed
chr1  10000  20000  A.forward  1  +
chr1  10000  20000  A.reverse  1  -

$ cat B.bed
chr1  1000   8000   B1
chr1  24000  32000  B2

$ bedtools window -a A.bed -b B.bed -l 5000 -r 1000 -sw
chr1  10000  20000  A.forward  1  +  chr1  1000   8000   B1
chr1  10000  20000  A.reverse  1  -  chr1  24000  32000  B2

基因组浏览器：
https://genome.ucsc.edu/cgi-bin/hgTracks?org=human&position=chr7&hgt.customText=http://genome.ucsc.edu/goldenPath/help/ColorByStrandDemo.txt




格式
http://genome.ucsc.edu/FAQ/FAQformat.html#format1
http://www.ensembl.org/info/website/upload/bed.html

工具
http://bedtools.readthedocs.io/en/latest/


========================================
|-- BED detail format(bed 扩展版)
----------------------------------------

This is an extension of BED format. BED detail uses the first 4 to 12 columns of BED format, plus 2 additional fields that are used to enhance the track details pages. The first additional field is an ID, which can be used in place of the name field for creating links from the details pages. The second additional field is a description of the item, which can be a long description and can consist of html, including tables and lists.
使用4-12列的bed格式，再加上2个额外字段。第一个ID，用于name字段，用于创建详情页。第二个额外字段是条目的描述，可以是包含html(含表格和列表)的长描述。


Requirements for BED detail custom tracks are: fields must be tab-separated, "type=bedDetail" must be included in the track line, and the name and position fields should uniquely describe items so that the correct ID and description will be displayed on the details pages.
必须是tab分割的字段。



Example:
This example uses the first 4 columns of BED format, but up to 12 may be used. Click here to view this track in the Genome Browser.
本例中使用了bed格式的前4列，最多可以使用前12列。


chr start end ID score description

track name=HbVar type=bedDetail description="HbVar custom track" db=hg19 visibility=3 url="http://globin.bx.psu.edu/cgi-bin/hbvar/query_vars3?display_format=page&mode=output&id=$$"
chr11	5246919	5246920	Hb_North_York	2619	Hemoglobin variant
chr11	5255660	5255661	HBD c.1 G>A	2659	delta0 thalassemia
chr11	5247945	5247946	Hb Sheffield	2672	Hemoglobin variant
chr11	5255415	5255416	Hb A2-Lyon	2676	Hemoglobin variant
chr11	5248234	5248235	Hb Aix-les-Bains	2677	Hemoglobin variant 





========================================
.cel - Affymetrix CEL Data File Format 芯片数据
----------------------------------------
http://media.affymetrix.com/support/developer/powertools/changelog/gcos-agcc/cel.html

Description
The CEL file stores the results of the intensity calculations on the pixel values of the DAT file. This includes an intensity value, standard deviation of the intensity, the number of pixels used to calculate the intensity value, a flag to indicate an outlier as calculated by the algorithm and a user defined flag indicating the feature should be excluded from future analysis. The file stores the previously stated data for each feature on the probe array. The information below will describe the following versions:

CEL文件保存了DAT文件中像素值的强度计算结果。包括强度值、标准误差、计算强度值的像素点个数、算法计算的异常flag值、用户自定义的表示未来分析中应该排除的flag。文件保存了此前描述的关于探针数组的数据。如下信息将描述这些版本。

Version 3 is generated by the MAS software. This was also known as the ASCII version.
版本3是MAS软件产生的。这也被叫做ASCII版本。

Version 4 is generated by the GCOS software. This was also known as the binary or XDA version.
版本4是GCOS软件产生的。这也被叫做二进制或者XDA版本。

Command Console version 1 is generated by the Command Console software. This is stored in the Command Console "generic" data file format.
命令行版本1是命令行软件产生的。这被保存在命令行“generic”数据文件格式中。



========================================
sam/bam格式和samtools
----------------------------------------
1.【文件格式】SAM/BAM and related specifications
https://en.wikipedia.org/wiki/SAM_(file_format)
http://samtools.github.io/hts-specs/
https://samtools.github.io/hts-specs/SAMv1.pdf

SAM和BAM是序列比对之后常用的输出格式，比如tophat输出BAM格式，bowtie和bwa等都采用了SAM格式。

SAM是一种序列比对格式标准，由sanger制定，是以TAB为分割符的文本格式。主要应用于测序序列mapping到基因组上的结果表示，当然也可以表示任意的多重比对结果。当测序得到的fastq文件map到基因组之后，我们通常会得到一个sam或者bam为扩展名的文件。SAM的全称是sequence alignment/map format。而BAM就是SAM的二进制文件(B取自binary)，占用存储空间更小。

samtools由中国学者开发，专门用于sam/bam格式文件的各种操作。



sam文件某一行
HWI-ST1001:137:C12FPACXX:7:1115:14131:66670     0       chr1    12805   1       42M4I5M *       0       0       TTGGATGCCCCTCCACACCCTCTTGATCTTCCCTGTGATGTCACCAATATG     CCCFFFFFHHGHHJJJJJHJJJJJJJJJJJJJJJJIJJJJJJJJJJJJIJJ     AS:i:-28        XN:i:0  XM:i:2  XO:i:1XG:i:4   NM:i:6  MD:Z:2C41C2     YT:Z:UU NH:i:3  CC:Z:chr15      CP:i:102518319  XS:A:+  HI:i:0 


SAM分为两部分，注释信息（header section）和比对结果部分（alignment section）。

注释信息可有可无，都是以@开头，用不同的tag表示不同的信息，主要有@HD，说明符合标准的版本、对比序列的排列顺序；@SQ，参 考序列说明；@RG，比对上的序列（read）说明；@PG，使用的程序说明；@CO，任意的说明信息。
	
比对结果部分（alignment section），每一行表示一个片段（segment）的比对信息，包括11个必须的字段（mandatory fields）和一个可选的字段，字段之间用tag分割。必须的字段有11个，顺序固定，不可用时，根据字段定义，可以为’0‘或者’*‘。






2.sam格式是头部，加上正文，正文部分强制规定的有11列，外加可选的额外列。

在SAM输出的结果中每一行都包括十二项通过Tab分隔，从左到右分别是：

Col	Field	Type	Brief Description
1	QNAME	String	Query template NAME
2	FLAG	Int	bitwise FLAG
3	RNAME	String	References sequence NAME
4	POS	Int	1- based leftmost mapping POSition
5	MAPQ	Int	MAPping Quality
6	CIGAR	String	CIGAR String
7	RNEXT	String	Ref. name of the mate/next read
8	PNEXT	Int	Position of the mate/next read
9	TLEN	Int	observed Template LENgth
10	SEQ	String	segment SEQuence
11	QUAL	String	ASCII of Phred-scaled base QUALity+33

查看命令
$ samtools view hg19_mm10/c01_ROW02_Aligned.sortedByCoord.out.bam|head -n 200|awk '{print $5}'|sort|uniq -c


主体部分有11个主列和1个可选列
(1)QNAME	比对的序列名称	例如：M04650:84:000000000-B837R:1:1101:22699:1759（一条测序reads的名称）
(2)FLAG	Bwise FLAG（表明比对类型：paring，strand，mate strand等）	例如：99
数值结果如下：
1（1）该read是成对的paired reads中的一个
2（10）paired reads中每个都正确比对到参考序列上
4（100）该read没比对到参考序列上
8（1000）与该read成对的matepair read没有比对到参考序列上
16（10000）该read其反向互补序列能够比对到参考序列
32（100000）与该read成对的matepair read其反向互补序列能够比对到参考序列
64（1000000）在paired reads中，该read是与参考序列比对的第一条
128（10000000）在paired reads中，该read是与参考序列比对的第二条
256（100000000）该read是次优的比对结果
512（1000000000）该read没有通过质量控制
1024（10000000000）由于PCR或测序错误产生的重复reads
2048（100000000000）补充匹配的read
具体的flag值的解释，可以参考samtools软件提供的结果

通过这个和可以直接推断出匹配的情况。假如说标记不是以上列举出的数字，比如说83=（64+16+2+1），就是这几种情况值和。

//todo 那么0是什么意思？

$ samtools view dAdapter_CutA_c16_ROW17.fq_Aligned.sortedByCoord.out.bam |awk '{print $2}' |sort|uniq -c
 581212 0 #star的Flag=0手动检查，看到是匹配到了正链上了
 393011 16 #flag=16 表示匹配到负链上了
 177445 256 #(舍弃)256 次优比对
 127815 272 #(舍弃)256+16 次优比对到负链
#行数 flag

# flag 结合 MAPQ一起看，发现MAPQ=255的最优比对对应的flag只有0和16两种取值(对应着正负链)。
$ samtools view dAdapter_CutA_c16_ROW17.fq_Aligned.sortedByCoord.out.bam |awk '{print $2"\t"$5}' |sort|uniq -c
   9089 0       0
  17997 0       1
 477741 0       255
  76385 0       3
  10008 16      0
  17995 16      1
 327183 16      255
  37825 16      3
  54254 256     0
  46198 256     1
  76993 256     3
  51056 272     0
  39542 272     1
  37217 272     3
#行数 flag MAPQ



(3)RENAME	比对上的参考序列名	例如：chr1 染色体名字
表示read比对的那条序列的序列名称（名称与头部的@SQ相对应），如果这列是“*”，可以认为这条read没有比对上的序列，则这一行的第四，五，八，九 列是“0”，第六，七列与该列是相同的表示方法



(4)POS	1-Based的比对上的最左边的定位	例如：124057649
表示read比对到RNAME这条序列的最左边的位置，如果该read能够完全比对到这条序列（CIGAR string为M）则这个位置是read的第一个碱基比对的位置，如果该read的反向互补序列比对到这条序列，则这个位置是read的反向互补序列的第一个碱基比对的位置，所以无论该read是正向比对到该序列，或是其反向互补序列比对到该序列，比对结果均是最左端的比对位置


(5)MAPQ	比对质量 mapping qulity  越高则位点越独特。-10 log10 Pr{mapping position is wrong}。例如：255

表示为mapping的质量值，mapping Quality, It equals -10log10Pr{mapping position is wrong}, rounded to the nearest integer, A value 255 indicates that the mapping quality is not available. 该值的计算方法是mapping的错误率的-10log10值，之后四舍五入得到的整数，如果值为255表示mapping值是不可用的，如果是unmapped read则MAPQ为0，一般在使用bwa mem或bwa aln（bwa 0.7.12-r1039版本）生成的sam文件，第五列为60表示mapping率最高，一般结果是这一列的数值是从0到60，且0和60这两个数字出现次数最多

STAR出来的bam结果255最多。
$ samtools view dAdapter_CutA_c16_ROW17.fq_Aligned.sortedByCoord.out.bam |awk '{print $5}' |sort|uniq -c 
 124407 0
 121732 1
 804924 255
 228420 3



#sam文件说A value 255 indicates that the mapping quality is not available.
但是STAR说明书说到： The mapping quality MAPQ (column 5) is 255 for uniquely mapping reads, and int(-10*log10(1-1/Nmap)) for multi-mapping reads.
http://zjuwhw.lofter.com/post/1d209faf_7366624
so, if Nmap == 1, MAPQ = inf. In the STAR, the MAPQ is 255, which means uniquely mapped.
If Nmap == 2, MAPQ = 3, which means that there are two primary alignments for this read.
If Nmap ==3 or 4, MAPQ = 1, which means that there are 3 or 4 primary alignments for this read.
If Nmap >= 5, MAPQ = 0.





#tophat1是255,tophat2是50；http://blog.sina.com.cn/s/blog_86c8fc120102uz5o.html
在需要用到uniquely mapped reads时，可以参考上表，为了保险起见，NH这个tag是统一的，不随tophat版本变化。
注意：如果是直接grep NH:i:1的话，一定要用grep "NH:i:1\b"，否则会把NH:i:10这类的也抓下来！（切身教训）

另外，注意unmapped.bam 的MAPQ为255，这和其他软件的MAPQ值都不太一样，注意后续质控软件统计的方法，以免出问题。
例如，STAR 的比对unique 比对的MAPQ为255，和Tophat不一样。




bowtie2有时并不能完全确定一个短的序列来自与参考序列的那个位置，特别是对于那些比较简单的序列。但是bowtie2会给出一个值来显示出 这个段序列来自某个位点的概率值，这个值就是mapping qulity。Mapping qulity的计算方法是：Q=-10log10p，Q是一个非负值，p是这个序列不来自这个位点的估计值。

假如说一条序列在某个参考序列上找到了两个位点，但是其中一个位点的Q明显大于另一个位点的Q值，这条序列来源于前一个位点的可能性就比较大。Q值的差距越大，这独特性越高。

Q值的计算方法来自与SAM标准格式，请查看SAM总结。





(6)CIGAR	Extended CIGAR string（操作符：MIDNSHP）比对结果信息；匹配碱基数，可变剪接等	例如：87M
CIGAR string，可以理解为reads mapping到第三列序列的mapping状态，对于mapping状态可分为以下几类：

M：alignment match (can be a sequence match or mismatch)
表示read可mapping到第三列的序列上，则read的碱基序列与第三列的序列碱基相同，表示正常的mapping结果，M表示完全匹配，但是无论reads与序列的正确匹配或是错误匹配该位置都显示为M

I：insertion to the reference
表示read的碱基序列相对于第三列的RNAME序列，有碱基的插入

D：deletion from the reference
表示read的碱基序列相对于第三列的RNAME序列，有碱基的删除

N：skipped region from the reference
表示可变剪接位置

P：padding (silent deletion from padded reference)
S：soft clipping (clipped sequences present in SEQ)
H：hard clipping (clipped sequences NOT present in SEQ)
clipped均表示一条read的序列被分开，之所以被分开，是因为read的一部分序列能匹配到第三列的RNAME序列上，而被分开的那部分不能匹配到RNAME序列上。
"="表示正确匹配到序列上
"X"表示错误匹配到序列上

而H只出现在一条read的前端或末端，但不会出现在中间，S一般会和H成对出现，当有H出现时，一定会有一个与之对应的S出现


如37M1D2M1I，这段字符的意思是37个匹配，1个参考序列上的删除，2个匹配，1个参考序列上的插入。M代表的是alignment match(可以是错配)





(7)MRNM	相匹配的另外一条序列，比对上的参考序列名。
实际上就是mate比对到的染色体号，若是没有mate，则是*；
(8)MPOS	1-Based leftmost Mate Position	（相比于MRNM列来讲意思和POS差不多）	例如：124057667
第八列：mate position，mate比对到参考序列上的第一个碱基位置，若无mate,则为0；
(9)ISIZE	插入片段长度	例如：200
ISIZE，Inferred fragment size.详见Illumina中paired end sequencing 和 mate pair sequencing，是负数，推测应该是两条read之间的间隔(待查证)，若无mate则为0；

(10)SEQ	Sequence，就是read的碱基序列，如果是比对到互补链上则是reverse completed   eg.CGTTTCTGTGGGTGATGGGCCTGAGGGGCGTTCTCN 

(11)QUAL	比对序列的质量（ASCII-33=Phred base quality）reads碱基质量值	例如：-8CCCGFCCCF7@E-
ASCII码格式的序列质量
ASCII of base QUALity plus 33 (same as the quality string in the Sanger FASTQ format).




(12)12列及之后是可选的列，以TAG：TYPE：VALUE的形式提供额外的信息
比较重要的是 NH:i:1 表示number of hit 是整数1，就是uniq mapping.

AS:i  匹配的得分
XS:i  第二好的匹配的得分
YS:i  mate 序列匹配的得分
XN:i  在参考序列上模糊碱基的个数
XM:i  错配的个数
XO:i  gap open的个数
XG:i  gap 延伸的个数
NM:i  经过编辑的序列
YF:i  说明为什么这个序列被过滤的字符串
YT:Z
MD:Z  代表序列和参考序列错配的字符串










========================================
wig、bigWig和bedgraph文件详解
----------------------------------------
我们一般会熟悉sam/bam格式文件，就是把测序reads比对到参考基因组后的文件！bam或者bed格式的文件主要是为了追踪我们的reads到底比对到了参加基因组的什么区域，而UCSC规定的这几个文件格式(wig、bigWig和bedgraph)用处不一样，仅仅是为了追踪参考基因组的各个区域的覆盖度，测序深度！而且这些定义好的文件，可以无缝连接到UCSC的Genome Browser工具里面进行可视化！



1.
这个网站提供了这几种数据格式的构造及转换脚本：http://barcwiki.wi.mit.edu/wiki/SOPs/coordinates
	
对SE数据，可以用macs2 pileup --extsize 200 -i $sample.bam -o $sample.bdg 把bam文件转换为bedgraph文件，不需要call peaks这一步骤。

而UCSC的ftp里面可以下载bedGraphToBigWig $sample.bdg ~/reference/genome/mm10/mm10.chrom.sizes $sample.bw 把bedgraph文件转换为bw文件，其余的转换工具都可以下载。



具体文件格式定义请直接看UCSC的官网，下面是我基于自己的理解来翻译的，没什么特殊的，建议大家看原文，然后自己翻译一个，跟我比较！
Wiggle Track Format (WIG)：http://genome.ucsc.edu/goldenPath/help/wiggle.html
bigWig Track Format ：http://genome.ucsc.edu/goldenPath/help/bigWig.html
BedGraph Track Format ：http://genome.ucsc.edu/goldenPath/help/bedgraph.html



这3种文件格式都是UCSC规定的，所以它提供了系列工具进行互相转换，可以直接下载可执行版本程序：http://hgdownload.cse.ucsc.edu/admin/exe/
常见的工具如下：
- bigWigToBedGraph — this program converts a bigWig file to ASCII bedGraph format.
- bigWigToWig — this program converts a bigWig file to wig format.
- bigWigSummary — this program extracts summary information from a bigWig file.
- bigWigAverageOverBed — this program computes the average score of a bigWig over each bed, which may have introns.
- bigWigInfo — this program prints out information about a bigWig file.


其实对我们的bam文件，用samtools软件也可以很容易得到基因组区域的覆盖度和测序深度，比如：
$ samtools depth -r chr12:126073855-126073965  Ip.sorted.bam
chr12    126073855    5
chr12    126073856    15
chr12    126073857    31
chr12    126073858    40
chr12    126073859    44
chr12    126073860    52
~~~~~~~~~其余省略输出~~~~~~~~~

这其实就是wig文件的雏形，但是wig文件会更复杂一点！
	首先它不需要第一列了，因为全部是重复字段，只需要在每个染色体的第一行定义好染色体即可。
	首先需要设置这个wig文件在UCSC的Genome Browser工具里面显示的属性：

track type=wiggle_0 name=track_labeldescription=center_labelvisibility=display_modecolor=r,g,baltColor=r,g,bpriority=priorityautoScale=on|offalwaysZero=on|offgridDefault=on|offmaxHeightPixels=max:default:mingraphType=bar|pointsviewLimits=lower:upperyLineMark=real-valueyLineOnOff=on|offwindowingFunction=mean+whiskers|maximum|mean|minimumsmoothingWindow=off|2-16

type=wiggle_0 这个是默认的， 而且到目前为止，必须是这样的！其余的都是可选参数，自己读官网说明

这些参数一般不用管，除非你很熟悉了UCSC的Genome Browser工具
	然后需要设置每条染色体的属性，几个比较重要的参数是：
fixedStepchrom=chrNstart=positionstep=stepInterval[span=windowSize]



下面是wig的一个具体例子：
track type=print wiggle_0 name=hek  description=hek
variableStep chrom=chr1 span=10
10008    7
10018    14
10028    27
10038    37
10048    45
10058    43
10068    37
10078    26
~~~~~~~~~其余省略输出~~~~~~~~~


UCSC也提供了一个wig文件：http://genome.ucsc.edu/goldenPath/help/examples/wiggleExample.txt
可以看到我设置的参数很少很少，而且我是直接对sort后的bam文件用脚本变成wig文件的。





2.
那么bigwig格式文件就没什么好讲的了，它就是wig格式文件的二进制压缩版本，这样更加节省空间。
我们只需要用UCSC提供的工具把自己的wig文件转换一下即可，步骤如下：
1. Save this wiggle file to your machine (this satisfies steps 1 and 2 above).
2. Save this text file to your machine. It contains the chrom.sizes for the human (hg19) assembly (this satisfies step 4 above).
3. Download the wigToBigWig utility (see step 3).
4. Run the utility to create the bigWig output file (see step 5):
5. wigToBigWig wigVarStepExample.gz hg19.chrom.sizes myBigWig.bw





3.
最后我们讲一下BedGraph格式文件，它是BED文件的扩展，是4列的BED格式，但是需要添加UCSC的Genome Browser工具里面显示的属性，但是一般就定义有限的几个属性即可。

track type=bedGraph name=track_labeldescription=center_label        visibility=display_modecolor=r,g,baltColor=r,g,b        priority=priorityautoScale=on|offalwaysZero=on|off        gridDefault=on|offmaxHeightPixels=max:default:min        graphType=bar|pointsviewLimits=lower:upper        yLineMark=real-valueyLineOnOff=on|off        windowingFunction=maximum|mean|minimumsmoothingWindow=off|2-16


有一点需要注意：
- These coordinates are zero-based, half-open. 【重点：坐标是从0开始的，半开半闭区间】
- Chromosome positions are specified as 0-relative. 
- The first chromosome position is 0. 
- The last position in a chromosome of length N would be N - 1. 
- Only positions specified have data.
- Positions not specified do not have data and will not be graphed.
- All positions specified in the input data must be in numerical order.


我这里有一个MACS对ChIP-seq数据call peaks附带的BedGraph文件，也可以用工具直接从bam格式文件得到：
track type=bedGraph name="hek_treat_all" description="Extended tag pileup from MACS version 1.4.2 20120305"
chr1    9997    9999    1
chr1    9999    10000   2
chr1    10000   10001   4
chr1    10001   10003   5
chr1    10003   10007   6
chr1    10007   10010   7
chr1    10010   10012   8
chr1    10012   10015   9
chr1    10015   10016   10
chr1    10016   10017   11
chr1    10017   10018   12



refer:
http://www.bio-info-trainee.com/1815.html
https://www.plob.org/article/9505.html


========================================
gtf和gff文档 - 基因注释文件 Genome annotations
----------------------------------------
1. gff 格式
为general feature format缩写，目前采用的是version 3，即我们常说的gff3文件。该文件常用来对基因组进行注释，表示基因，外显子，CDS，UTR等在基因组上的位置。众多基因预测软件如Glean，EVM，AUGUSTUS等会产生此格式文件。

与gtf文件不同之处只是在第9列。此列格式为“标签=值”（tag=value），标签与值之间用“=”，不同的标签之间用“; ”隔开，一个标签可以有多个值，不同值用“,”分割。




2. gtf 格式： 为General Transfer Format缩写，跟 GFF2格式类似。
做转录组分析时候经常会看到Cufflinks或者Stringtie软件对转录组进行定量与组装会时产生一个gtf文件。

TAB-separated standard GTF columns
https://software.broadinstitute.org/software/igv/GFF
http://mblab.wustl.edu/GTF2.html
更新版，向后兼容 http://mblab.wustl.edu/GTF22.html


GTF文件包含基因，转录本和外显子的注释。它们一定包含：
(1)seqname: chromosome / scaffold
(2)source: 这个注释来自哪里
(3)feature: 这是什么类型的特征？（例如基因，转录本，外显子）
(4)start: 开始位置（bp）integer-value (1-based)
(5)end: 结束位置（bp）
(6)score: 数字
(7)strand: +（前进）或 - （反向）
(8)frame: genomic phase (for CDS features){0,1,2,.}。CDS指示哪个碱基是第一个密码子的第一个碱基（0 =第一个碱基，1 =第二个碱基等等）。
(9)attribute: 以分号分隔的标签值对的额外信息对的列表（例如姓名/身份证，生物类型）
空字段标有"."。

https://www.gencodegenes.org/pages/data_format.html
对于gencode项目的gtf：
2	annotation source	{ENSEMBL,HAVANA}
6	score(not used)	.


Structure is as GFF, so the fields are: 
<seqname> <source> <feature> <start> <end> <score> <strand> <frame> [attribute comment]; [attribute2 comment2]; 

Here is a simple example with 3 translated exons. Order of rows is not important.

381 Twinscan  CDS          380   401   .   +   0  gene_id "001"; transcript_id "001.1";
381 Twinscan  CDS          501   650   .   +   2  gene_id "001"; transcript_id "001.1";
381 Twinscan  CDS          700   707   .   +   2  gene_id "001"; transcript_id "001.1";
381 Twinscan  start_codon  380   382   .   +   0  gene_id "001"; transcript_id "001.1";
381 Twinscan  stop_codon   708   710   .   +   0  gene_id "001"; transcript_id "001.1";

另一个：
chr19   HAVANA   gene   405438   409170   .   -   .   gene_id "ENSG00000183186.7"; gene_type "protein_coding"; gene_name "C2CD4C"; level 2; havana_gene "OTTHUMG00000180534.3";
chr19   HAVANA   transcript   405438   409170   .   -   .   gene_id "ENSG00000183186.7"; transcript_id "ENST00000332235.7"; gene_type "protein_coding"; gene_name "C2CD4C"; transcript_type "protein_coding"; transcript_name "C2CD4C-001"; level 2; protein_id "ENSP00000328677.4"; transcript_support_level "2"; tag "basic"; tag "appris_principal_1"; tag "CCDS"; ccdsid "CCDS45890.1"; havana_gene "OTTHUMG00000180534.3"; havana_transcript "OTTHUMT00000451789.3";
chr19   HAVANA   exon   409006   409170   .   -   .   gene_id "ENSG00000183186.7"; transcript_id "ENST00000332235.7"; gene_type "protein_coding"; gene_name "C2CD4C"; transcript_type "protein_coding"; transcript_name "C2CD4C-001"; exon_number 1; exon_id "ENSE00001322986.5"; level 2; protein_id "ENSP00000328677.4"; transcript_support_level "2"; tag "basic"; tag "appris_principal_1"; tag "CCDS"; ccdsid "CCDS45890.1"; havana_gene "OTTHUMG00000180534.3"; havana_transcript "OTTHUMT00000451789.3";

The whitespace in this example is provided only for readability. In GTF, fields must be separated by a single TAB and no white space.


坐标：
One-based index: Start and end positions are identified using a one-based index. The end position is included. For example, setting start-end to 1-2 describes two bases, the first and second in the sequence.




3.gtf与gff转换以及对GFF文件进行过滤

常采用的软件是gffread，为Cufflinks自带的一个程序，他不仅可以实现GTF与GFF的互相转换，而且还可以对GFF文件进行过滤处理。



========================================
MAF:Mutation Annotation Format格式简介(vcf2maf)
----------------------------------------
https://docs.gdc.cancer.gov/Data/File_Formats/MAF_Format/

把vcf文件转换为maf格式: http://www.bio-info-trainee.com/3296.html


Mutation Annotation Format， 简称MAF, 是由TCGA制定的一种文件格式，用来存储突变注释信息。在TCGA中，对于突变数据有以下四种类型

1.Annotated Somatic Mutation, 体细胞突变的注释文件，格式为VCF, 采用VEP软件进行注释，文件后缀为vep.vcf.gz

2.Raw Simple Somatic Mutation, 体细胞突变的原始文件，格式为VCF, 文件后缀为vcf.gz

3.Aggregated Somatic Mutation, protected的突变注释文件，需要账号和权限才可以下载，格式为MAF, 文件后缀为maf.gz

4.Masked Somatic Mutation, open access的突变注释文件，免费下载的，格式为MAF, 文件后缀为maf.gz


在TCGA中,VCF通常用于记录单个样本的体细胞突变相关结果，MAF用于整合所有样本的体细胞突变注释结果，所以称MAF格式为project-level, 根据数据的开放性，又分为protected和open access, 其中open access就是我们可以直接下载得到的MAF文件， 以乳腺癌为例，在TCGA中提供了4个MAF文件


对应4个不同的体细胞突变calling软件，每个文件中包含了1044个样本的体细胞SNV注释结果。

MAF和VCF类似，也是一个纯文本的格式，由\t分隔的许多列构成，从GDC下载的MAF文件的截图如下









========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------


