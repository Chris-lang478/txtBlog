基因组可视化工具circos

	-- ubuntu1604 安装和使用 circos


========================================
下载与安装circos(Ubuntu1604)
----------------------------------------

1.下载 

http://circos.ca/software/download/

下载软件 Circos code distribution
wget http://circos.ca/distribution/circos-0.69-6.tgz

下载教程 http://circos.ca/software/download/tutorials/
也可以看在线版：http://circos.ca/documentation/tutorials/
wget -b http://circos.ca/distribution/circos-tutorials-0.67.tgz

下载工具和脚本 utility add-on scripts 
http://circos.ca/software/download/tools
wget -b http://circos.ca/distribution/circos-tools-0.22.tgz
Utilities的教程 http://circos.ca/documentation/tutorials/utilities/

共三个文件
wangjl@Ubt16C:~/Downloads$ ls -lth
total 182M
-rw-rw-r-- 1 wangjl wangjl  28M 8月   1 05:39 circos-0.69-6.tgz
-rw-rw-r-- 1 wangjl wangjl  23M 4月   9  2016 circos-tools-0.22.tgz
-rw-rw-r-- 1 wangjl wangjl 132M 10月  2  2014 circos-tutorials-0.67.tgz






2.安装 

http://circos.ca/tutorials/lessons/configuration/distribution_and_installation/
(1)检查perl版本
默认安装的perl
$ perl -v
This is perl 5, version 22, subversion 1 (v5.22.1) built for x86_64-linux-gnu-thread-multi
(with 60 registered patches, see perl -V for more detail)

（2）
创建文件夹
$ cd ~
$ pwd
/home/wangjl
~$ mkdir software
~$ mkdir software/circos
~$ cd software/circos/

复制文件
~/software/circos$ cp ~/Downloads/circos-0.69-6.tgz .
~/software/circos$ ls
circos-0.69-6.tgz

解压
~/software/circos$ tar xvfz circos-0.69-6.tgz

# make a symlink to current
~/software/circos$ ln -s circos-0.69-6 current
~/software/circos$ ls -l
total 28544
drwxrwxr-x 10 wangjl wangjl     4096 11月 16 15:51 circos-0.69-6
-rw-rw-r--  1 wangjl wangjl 29221183 11月 16 15:49 circos-0.69-6.tgz
lrwxrwxrwx  1 wangjl wangjl       13 11月 16 15:54 current -> circos-0.69-6


添加到环境变量
把bin/目录添加到PATH中，便于从任何地方启动bin/circos。
假设你的根目录和上文一致，是ROOT=~/software/circos/current，添加到~/.bashrc or ~/.bash_profile中。结尾添加一句：
export PATH=~/software/circos/current/bin:$PATH

然后执行该路径文件 ~/.bashrc or ~/.bash_profile 。 
> . ~/.bashrc  #注意~前面有一个空格。
# or
> . ~/.bash_profile

最后检测路径正确性
echo $PATH
which circos 


（3）To install GD and Perl modules on Ubuntu, use apt-get.
sudo apt-get -y install libgd2-xpm-dev

（4）检查缺少的Perl模块 
Check whether you have any missing modules
> pwd
~/software/circos/current
> bin/circos -modules
ok       1.36 Carp
ok       0.38 Clone
missing            Config::General
ok       3.56 Cwd
ok      2.158 Data::Dumper
ok       2.54 Digest::MD5
ok       2.85 File::Basename
ok       3.56 File::Spec::Functions
ok     0.2304 File::Temp
ok       1.51 FindBin
missing            Font::TTF::Font
missing            GD
missing            GD::Polyline
ok       2.45 Getopt::Long
ok       1.16 IO::File
ok      0.413 List::MoreUtils
ok       1.41 List::Util
missing            Math::Bezier
ok     1.9997 Math::BigFloat
missing            Math::Round
missing            Math::VecStat
ok       1.03 Memoize
ok    1.53_01 POSIX
missing            Params::Validate
ok       1.64 Pod::Usage
missing            Readonly
missing            Regexp::Common
missing            SVG
missing            Set::IntSpan
missing            Statistics::Basic
ok    2.53_01 Storable
ok       1.20 Sys::Hostname
ok       2.03 Text::Balanced
missing            Text::Format
ok     1.9726 Time::HiRes
...

安装missing的模块，参考http://circos.ca/documentation/tutorials/configuration/perl_and_modules
# install with production version, Perl 5.14
> perl -MCPAN -e shell #这一步要用sudo执行，否则安装失败。
...
cpan[1]> install Config::General
依次安装所有missing的模块。
exit退出。


再次执行 circos -modules，发现所有包都是ok了。







======================================== 
下载和安装circos(CentOS6.8)
----------------------------------------  
1.查看perl版本号
[wangjl@ngs2 Downloads]$ perl -v
This is perl, v5.10.1 (*) built for x86_64-linux-thread-multi

2. 安装gd包（5个）
sudo yum install gd gd-devel


3.安装perl模块
#查看哪些模块未被安装
[wangjl@ngs2 current]$ bin/circos -modules| grep missing
missing            Clone
missing            Config::General
missing            Font::TTF::Font
missing            GD
missing            GD::Polyline
missing            List::MoreUtils
missing            Math::Bezier
missing            Math::Round
missing            Math::VecStat
missing            Params::Validate
missing            Readonly
missing            Regexp::Common
missing            SVG
missing            Set::IntSpan
missing            Statistics::Basic
missing            Text::Format
missing            Time::HiRes

#安装未被安装的模块
[wangjl@ngs2 current]$ sudo perl -MCPAN -e shell
Can't locate CPAN.pm in @INC (@INC contains: /usr/local/lib64/perl5 /usr/local/share/perl5 /usr/lib64/perl5/vendor_perl /usr/share/perl5/vendor_perl /usr/lib64/perl5 /usr/share/perl5 .).
BEGIN failed--compilation aborted.
无法定位，就是没有安装CPAN.pm。

下载和安装该PM 
$ sudo yum -y install perl-CPAN
https://stackoverflow.com/questions/16321197/cant-locate-cpan-pm-in-inc-inc-contains-usr-local-lib-perl5-usr-local-sha

再次进入就可以了
$ sudo perl -MCPAN -e shell
输入yes

#安装缺失的模块，格式如 cpan> install Params::Validate
cpan> install Clone
cpan> install YAML
又选yes安装好几个依赖包。

#同时安装多个缺失模块
cpan> install Config::General Font::TTF::Font GD GD::Polyline
又选yes安装好几个依赖包。

cpan> install List::MoreUtils Math::Bezier Math::Round Math::VecStat Params::Validate
又选yes安装好几个依赖包。
临时改永久包没完没了，我最后受不了了，只对依赖包选也是，其他选了no。好像逻辑上没什么乱用?!

cpan> install Readonly Regexp::Common SVG Set::IntSpan Statistics::Basic Text::Format Time::HiRes
又选yes安装好几个依赖包。


有几个包安装不上了。
[wangjl@ngs2 current]$ bin/circos -modules|grep missing
missing            Font::TTF::Font
missing            Params::Validate
missing            Readonly


exit回车退出perl命令行。


试试yum安装
sudo yum search perl-Params-Validate
sudo yum install perl-Params-Validate.x86_64

sudo yum search perl-Readonly
sudo yum install perl-Readonly-XS.x86_64

剩下的这个名字不完全一致：
sudo yum search perl-Font
sudo yum install perl-Font-TTF.noarch

[wangjl@ngs2 current]$ bin/circos -modules| grep missing
竟然全部通过，太神奇了！！
http://blog.csdn.net/ada0915/article/details/76070574


4. 环境变量的设置，保证处处可以运行circos命令。
echo 'export PATH="/home/wangjl/soft/circos/current/bin:$PATH"' >> ~/.bash_profile


5. 成功之后,运行命令,如果显示如下的信息，则你成功的安装了Circos。
circos -man

[wangjl@ngs2 current]$ circos -v
circos | v 0.69-6 | 31 July 2017 | Perl 5.010001


6. 运行下文circos版的hello world，设置nginx服务器，通过web查看生成的图片：
http://10.113.81.67/wangjl/pic1/




circos实例图和代码：http://blog.csdn.net/lexwoefm/article/details/50432919





======================================== 
运行circos
----------------------------------------      
(1)使用 -conf指定配置文件位置即可。

如果暂时没有数据，可以使用circos自带的示例数据。
阅读README文件夹。

0.a  What is circos?

Circos is a program for the generation of publication-quality,
circularly composited renditions of genomic data and related
annotations.
circos是一个产生出版级质量，基因组数据及相关注释的圆圈图的程序。

Circos is particularly suited for visualizing alignments, conservation
and intra and inter-chromosomal relationships.
circos特别适用于可视化比对、保守，染色质间和染色内关联。

But wait. Also, Circos is useful to visualize any type of information
that benefits from a circular layout. Thus, although it has been
designed for the field of genomics, it is sufficiently flexible to be
used in other data domains.
但是，circos也适合展示任何适用于圆圈图形式的数据。所以，虽然是为基因组领域设计的，但是已经成功用于很多数据领域。


quick_start快速开始
http://circos.ca/documentation/tutorials/quick_start/



(2)生成第一个图
进入目录:cd ~/software/circos/current/
其实，配置文件放在任何一个目录都行。


按照如下链接写circos2.conf配置文件，
http://circos.ca/documentation/tutorials/quick_start/hello_world/




# circos.conf
karyotype = data/karyotype/karyotype.human.txt

<ideogram>
	<spacing>
	default = 0.005r
	</spacing>

	radius    = 0.9r
	thickness = 20p
	fill      = yes
</ideogram>

################################################################
# The remaining content is standard and required. It is imported 
# from default files in the Circos distribution.
#
# These should be present in every Circos configuration file and
# overridden as required. To see the content of these files, 
# look in etc/ in the Circos distribution.

<image>
	# Included from Circos distribution.
	<<include etc/image.conf>>
</image>

# RGB/HSV color definitions, color lists, location of fonts, fill patterns.
# Included from Circos distribution.
<<include etc/colors_fonts_patterns.conf>>

# Debugging, I/O an dother system parameters
# Included from Circos distribution.
<<include etc/housekeeping.conf>>




相同目录下，执行 circos -conf circos2.conf 等待数秒即可出图。

ls -lh 命令查看多了2个图片文件。
-rw-rw-r-- 1 wangjl wangjl  83K 11月 20 22:21 circos.png
-rw-rw-r-- 1 wangjl wangjl 6.3K 11月 20 22:21 circos.svg


接下来可以通过sftp下载，或者web方式查看生成的图片了。



(3)如果目录结构设置为 
xxProject/
  |-data/ 
  |-etc/ 
    |-circos.conf #默认配置文件
    |-其他conf文件

则可以在xxProject/项目目录直接执行circos命令，不带任何参数，默认读取该目录下的etc/circos.conf文件。
并在该项目目录生成图片。







======================================== 
配置nginx服务器通过web查看生成的图片
----------------------------------------

1）通过sudo apt-get install nginx安装的nginx服务器软件。
2）配置nginx服务器，设置输出该目录。
配置文件 /etc/nginx/sites-available/default，
server{
	location {
		//
	}
	
	//这里添加别名目录
	location /wangjl/ {
		alias /home/wangjl/;
		autoindex       on;
	}
}
3）重启nginx服务器
sudo service nginx restart

4)通过web查看图片
ifconfig查看服务器IP，用同在一个局域网内的PC机，直接输入 http://192.168.1.88/wangjl/ 即可看到包括图片在内的文件列表。
点击图片链接，即可在浏览器中看到该图片 http://192.168.1.88/wangjl/circos.png
右击另存为即可保存图片。



			
======================================== 
circos最佳实践
----------------------------------------
1.帮助命令
# brief help
circos -h

# man page
circos -man

# version
circos -v


2.不要随便拷贝这些通用文件到其他地方，除非你要修改它们。
etc/colors_fonts_patterns.conf
etc/housekeeping.conf
etc/image.conf
data/karyotype/*
这些文件随着发行版本不同而改变。


3.QUICK START教程
1)Hello World
2)Ticks & Labels
3)Ideogram Selection, Scale, Color & Orientation
4)Links & Rules
5)Histograms
6)Axes & Backgrounds
7)Heat Maps & Colors
8)Text
9)Automation & Macros
http://circos.ca/documentation/tutorials/quick_guide/

	
======================================== 
2)ticks and labels
----------------------------------------
todo

			
======================================== 
3)Ideogram Selection, Scale, Color & Orientation
----------------------------------------
todo

			
======================================== 
4)links and rules
----------------------------------------
1.自定义颜色

此前使用了hs1改变染色体颜色，但是hs1变量本身并没有改变；

chromosomes_color = hs1=red,hs2=orange,hs3=green,hs4=blue

如果想改变颜色及变量本身，需要在<colors>修改。
这在文件 colors_fonts_patterns.conf 中有默认定义。
为了覆盖颜色设置，需要使用*后缀：

<colors>
chr1* = red
chr2* = orange
chr3* = green
chr4* = blue
</colors>

2.LINKS 连线。在<links>中定义<link>。
	link数据可以使相似性、不同、基因融合数据等。

3.rules规则。
	rules可以添加，决定数据点（links,histogram bins,scatter plot glyphs等）的格式。rules基于position，size或者其他值。
	<rules>中可以添加一个或多个<rule>。
	每个<rule>包含一个条件语句，格式语句，以及一个可选的flow语句。
		如果条件为true，表示应用rule到当前数据，不再进一步检测，除非 flow=continue。
		如果条件为false，表示检测下一条rule。
		
	1) var(x)表示变量x在该数据点的值。 intrachr表示染色体内。
<rule>
condition     = var(intrachr)
# Any links that are intra-chromosomal will not be shown. Further rules are not tested.
show          = no
</rule>
	
	
	2) 如果 condition=1，表示该rule应用到所有剩下的links中，因为条件始终为真。
	
	3)link的颜色设置为第二条染色体的颜色（link的结尾）。这里eval()是必须的，对表达式 var(chr2)求值。
		注意：求值是自动化的，但是其他参数都必须有。
<rule>
condition     = 1
color         = eval(var(chr2))
# After this rule is applied, the rule chain continues.
flow          = continue
</rule>
	
	
	
	4)余下的2条rule分别改变link的开头和结尾。如果起始或结束语hs1，则执行条件。
<rule>
# If the link's start is on hs1...
condition     = from(hs1)
# ...set the radial position of the link's start to be close to the ideogram.
radius1       = 0.99r
</rule>

<rule>
# Same as the rule above, but applies to the end of the link.
condition     = to(hs1)
# 'radius2' (like chr2, start2, end2) refers to the variable 'radius' of the end of the link.
radius2       = 0.99r
</rule>



	5)rules的顺序：
	一般是顺序执行，但是加上importance后，按照该参数的从大到小执行rule，之后执行没有该参数的rule。
<rules>
	<rule>
	# 2nd
	</rule>

	<rule>
	# 3rd
	</rule>

	<rule>
	# 1st 
	importance = 10
	</rule>
</rules>
	
	
	6) 如果condition为真，当前数据点使用该rule，并停止匹配下一个rule。
	如果想改变以上行为，使用flow参数。
	或者，可以使用if true 或 if false 根据condition控制flow的值。
	

强制继续测试： flow = continue {if true|false}

默认行为是： flow = continue if false

强制停止测试： flow = stop {if true|false}

或者restart test（只能一次，防止死循环） flow = restart {if true|false}

最后，你还可以为rule设置一个tag，然后从其他地方跳转到该rule：
	<rule>
	flow = goto special_rule if true
	...
	</rule>

	<rule>
	tag = special_rule
	...
	</rule>
	
	
	
	
4.详解links.conf文件。建议放到 data/文件夹中。	

<links>
<link>
# 指定 link 文件的路径，其文件格式为：  
# chr1 start end chr2 start end  
# hs1 465 30596 hs2 114046768 114076456  

# 表明这两个染色体区域有联系，例如这个区域的序列长度>1kb且序列相似性>=90%。  
file = data/5/segdup.txt  

# 设置 link 曲线的半径  
radius = 0.8r  

# 设置贝塞尔曲线半径，该值设大后曲线扁平，使图像不太好看。  
bezier_radius = 0r  

# 设置 link 曲线的颜色  
color = black_a4  
# 设置 link 曲线的厚度  
thickness = 2  

<rules>  
	# 以下可以设置多个 rules，用来对 link 文件的每一行进行过滤或展示进行设定。每个 rule 都有一个 condition 参数；如果该 condition 为真，除非 flow=continue ，则不  
	# 如果 link 文件中该行数据是染色体内部的 link，则不对其进行展示  
	<rule>  
	condition = var(intrachr)  
	show = no  
	</rule>  
	
	# 设置 link 曲线的颜色与 ideogram 的颜色一致，否则为统一的颜色。  
	<rule>  
	# condition 为真，则执行该 block 的内容  
	condition = 1  
	# 设置 link 曲线的颜色为第 2 条染色体的颜色。对应这 link 文件中第 4 列数据对应的染色体的名称  
	color = eval(var(chr2))  
	# 虽然 condition 为真，但依然检测下一个 rule  
	flow = continue  
	</rule>  
	
	# 如果 link 起始于 hs1，则其 link 曲线半径为 0.99r  
	<rule>  
	condition = from(hs1)  
	radius1 = 0.99r  
	</rule>  
	
	# 如果 link 结束于 hs1，则其 link 曲线半径为 0.99r  
	<rule>  
	condition = to(hs1)  
	radius2 = 0.99r  
	</rule>  
	
</rules> 
 
</link>  
</links>  





			
======================================== 
5)Histograms 柱状图
----------------------------------------
http://circos.ca/documentation/tutorials/quick_start/histograms/

circos支持数据track，就是位置相关的数据。
tracks可以做成line plots, scatter plots, histograms and heat maps. 
文本track是一种特殊的数据track，就是在特定的位置加一个标签。

1.数据格式：格式相同。
#chr start end value [options]
...
hs3 196000000 197999999 71.0000
hs3 198000000 199999999 57.0000
hs4 0 1999999 28.0000
hs4 2000000 3999999 40.0000
hs4 4000000 5999999 59.0000
...


1) options 是可以关联数据点的，比如颜色或者识别符。
格式参数可覆盖默认设置，也可以使用rule规则改变格式参数。
hs3 196000000 197999999 71.0000 fill_color=blue


2)使用参数，比如id，可以用于在规则中选择和修饰数据点。
# in data file
hs3 196000000 197999999 71.0000 id=abc

# in rule block
<rule>
condition  = var(id) eq "abc"
fill_color = blue
</rule>




2. plot块，位于<plots>中。
设置 type = histogram 就是柱状图。
<plots>
	<plot>
	type = histogram
	...
	</plot>

	<plot>
	type = histogram
	...
	</plot>
	...
</plots>





3.两种柱状图：单柱状图和堆叠柱状图。

都需要这四个参数：
type = histogram
file = data/5/segdup.hs1234.hist.txt
r1   = 0.88r #外径
r0   = 0.81r #内径





4.连接bins
1)通常柱状图是有箱子组成的，如果不临近，比如：
	hs2 1000000 2000000 3
	hs2 3000000 9000000 1.3

可以使用如下扩展选项，使箱体扩展，直到碰到临近箱体边界。
	extend_bin = no | yes


5.填充和外边框颜色 FILL AND OUTLINE COLORS
柱状图有填充色和边框颜色，默认设置在 etc/tracks/*.conf，柱状图的默认值是：
	# etc/tracks/histogram.conf
	color            = black
	thickness        = 1
	r1               = 0.89r
	r0               = 0.8r
	orientation      = out

6.柱状图的朝向：朝内或者朝外
	orientation = in | out



7.默认值的管理
关掉默认边框，设置边框厚度为0：	thickness = 0p
	或者把该参数设置为未定义： thickness = undef
可以修改默认文件： etc/tracks/histogram.conf
或者永久禁用该默认值，注释掉etc/housekeeping.conf中的 track_default 路径。 




8.rules规则
像links中一样，rules用于动态改变每个点的格式（比如柱状图箱体）。
本例中，隐藏某个染色体上的柱状图箱体：
	<rule>
	condition = on(hs1)
	show      = no
	</rule>

	
1) 导入 rules 
为了重用rule，可以单独保存到一个文件，比如exclude.hs1.rule，然后导入该文件：

<rules>
<<include exclude.hs1.rule>>
</rules>



2)更改格式参数 
rule可以修改数据点的可见性、格式、值。
比如，设置 show=no ，数据点就不可见了。
类似的，可以设置其他格式参数：

<rule>
condition  = on(hs1)
fill_color = blue
color      = vdblue
thickness  = 2p
</rule>

这些rule将覆盖此前在<plot>块中定义的参数。



3)rule条件(condition)
rule中的条件就是Perl代码。表达式自动求值，不需要使用 eval()。

# applies to every data point - always true
1

# check whether a data point is on a chromosome
var(chr) eq "hs1"
on(hs1) # shortcut

# check whether a data point is not on a chromosome
var(chr) ne "hs1"
!on(hs1)

# combine tests with or (||)
on(hs1) || on(hs2)
var(chr) =~ /hs(1|22)$/;

# check position
var(start) > 10Mb

# use the value
var(value) < 0.05

# use any parameter
var(color) eq "red"
var(stroke_color) eq "vdred"



如果一个rule有多个条件，所有条件都满足，才能触发该rule。
<rule>
# data point must be on hs1 and value < 0.05
condition = on(hs1)
condition = var(value) < 0.05
...
</rule>



4)rules中的引用数据点参数
REFERENCING DATA POINT PARAMETERS IN RULES

可以使用var(x)引用数据文件中定义的参数。比如，数据文件中定义id和mult参数
	# in data file
	hs3 196000000 197999999 71.0000 id=abc,mult=5

然后在rule中引用他们：
	<rule>
	condition  = var(id) eq "abc"
	fill_color = blue
	value      = eval(var(value)*var(mult))
	</rule>

其中value值得是数据点的value值。也就是说使用rule可以改变value值。这里我们使用值乘以mult参数。
为了防止被当做字符串，需要使用evale()求值。	





9.堆叠柱状图
STACKED HISTOGRAMS
例子第二个是堆叠柱状图。对于给定点，用多个堆叠的箱子展示了多个值。这是一种特殊的使用数据格式2D图轨道。

#chr start end value,value,value,... [options]
...
hs3 196000000 197999999 0.0000,7.0000,64.0000,0.0000
hs3 198000000 199999999 21.0000,6.0000,18.0000,12.0000
hs4 0 1999999 5.0000,3.0000,1.0000,19.0000
hs4 2000000 3999999 1.0000,6.0000,16.0000,17.0000
hs4 4000000 5999999 1.0000,13.0000,25.0000,20.0000
...

当使用参数type=histogram 且数据文件中有多个值时，circos将会自动格式化该轨迹。
fill_color 参数是颜色名字列表，对应着各个值。比如数据行为：
	hs3 198000000 199999999 21.0000,6.0000,18.0000,12.0000
而 fill_color 的值为：
	fill_color  = hs1,hs2,hs3,hs4
然后每个箱子的颜色将会如下设置：
 hs1 (21.0000), hs2 (6.0000), hs3 (18.0000), hs4 (12.0000).





======================================== 
6)Axes & Backgrounds
----------------------------------------
轴和背景。





======================================== 
7)Heat Maps & Colors
----------------------------------------


======================================== 
8)Text
----------------------------------------



======================================== 
9)Automation & Macros
----------------------------------------



======================================== 
usefull
----------------------------------------
http://blog.csdn.net/u014182497/article/details/52513269

最佳实践：http://circos.ca/documentation/tutorials/reference/best_practices/


问题：
1.哪些地方用eval()？有些地方必须用，有些自动计算值，有什么规律？
2.颜色在哪里设置的？第6背景设置的时候有很多灰颜色：
	vlgrey, lgrey, grey.
	非常浅灰，浅灰，灰。
3.
	
	
======================================== 
----------------------------------------





======================================== 
----------------------------------------





======================================== 
----------------------------------------





======================================== 
----------------------------------------



















