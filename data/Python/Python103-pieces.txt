Python103-pieces



========================================
字符串操作
----------------------------------------

1.str跟int的转换
字符串str转换成int: int_value = int(str_value)
int转换成字符串str: str_value = str(int_value)



========================================
正则表达式 RegExp
----------------------------------------
1.正则分割
import re 

# 从字符串中获取cellID
def getCellID(t1):
    t2=re.split(r'[.\/]', t1)
    t3=re.split(r'_Log',t2[3])
    return(t3[0])
#usage
str1="==> ../c12_A1_Log.final.out <==" 
print( getCellID(str1) ) #输出c12_A1




========================================
Python3-中把图片进行-base64-编码
----------------------------------------
# -*- coding: utf-8 -*-
# https://blog.csdn.net/CoderPai/article/details/80222947

import base64

#输入图片路径，返回突变的base64编码字符串
def getBase64ByImg(ImgFile):
    with open(ImgFile,"rb") as f:
        # b64encode是编码，b64decode是解码
        base64_data = base64.b64encode(f.read())
        # base64.b64decode(base64data)
        img_base64=str(base64_data,'utf-8') # 重新编码数据
        #print(base64_data)
        return img_base64;

img_base64=getBase64ByImg(r"C:\Users\admin\Desktop\blog_pics\英语读报logo\\lotus_ZH-CN12081917194_1920x1080.jpg")

#前端html中如何直接调用base64编码呢？
#<img src="data:image/jpg;base64,这里是base64的编码"/>
print("<img src='data:image/jpg;base64,%s'>" % (img_base64))

#结果保存为 xx.html 文件，用浏览器打开就能看到图片了。

========================================
设置工作目录
----------------------------------------
1.设置工作目录
https://bbs.csdn.net/topics/390534850
path="C:\\Tools"
os.chdir(path)


2.自动设置当前运行py文件所在目录为工作目录
import os,sys
#sys.argv[0] 就是脚本自身路径
os.chdir(os.path.dirname(sys.argv[0]))
//todo


3.查看工作目录
import os
os.getcwd()


========================================
时间戳、耗时分析
----------------------------------------
1.显示时间戳
import time
time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()) 
#'2018-09-27 21:15:01'





2. for 循环中显示时间条 / 进度条
import time
time_start=time.time()

fr=open("manyLines.txt","r")

i=0
for lineR in fr.readlines():
    i=i+1
    #if i>2200:
        #pass;
    #    break;
    if i%3000 ==0: #进度条和时间
        print("line ", i, ', elapse = ', time.time()-time_start, 'seconds')






========================================
Python错误提示：[Errno 24] Too many open files的分析与解决
----------------------------------------
https://www.cnblogs.com/Antiver/p/8196531.html


通过搜索引擎我找到了关于系统限制的介绍，执行

$ ulimit -n
1024
得到的结果是1024，系统限制为同时打开1024个文件，这显然是太少了。

解决
这个问题的解决方法很简单，直接修改下面的文件
sudo vim /etc/security/limits.conf

最这个文件的最后添加两行代码
* soft nofile 10240
* hard nofile 10240

当然这个数字根据自己的需要进行修改即可，保存后注销重新登录就好了。


查看打开的文件：
$ lsof | grep python|wc

这么多文件，目前不知道怎么处理，除了杀掉后台进程：
ps -ef | grep jupyter
ps -ef查看本机所有的进程；grep xxxx代表过滤找到条件xxxx的项目

kill掉进程
kill -9 具体的PID


========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


