Python105-web

(2019.3.4)目前主要是flask 1.0.2和jinja2。


========================================
flask简介
----------------------------------------
flask: http://flask.pocoo.org/
文档：http://flask.pocoo.org/docs/1.0/

1.安装
pip install flask

2.
Flask is a microframework for Python based on Werkzeug, Jinja 2 and good intentions. And before you ask: It's BSD licensed!

文件hello.py
from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
    return "Hello World!"

if __name__ == '__main__':
    app.run()



运行
>python hello.py

然后浏览器输入 http://127.0.0.1:5000/



========================================
jinja2简介
----------------------------------------
jinja2: http://jinja.pocoo.org/




========================================
使用flask的jsonify返回json数据
----------------------------------------
1.py文件

from flask import Flask
from flask import jsonify 

app = Flask(__name__)

#json Controler
@app.route('/api/content/<date>')
def content(date):
    status=True
    
    #从Mysql获取当天数据
    content="some content from Mysql-"+date
    
    if content=="":
        status=False;
    #返回json
    return jsonify({'status':status,'date':date, 'content':content})

#启动程序
if __name__ == '__main__':
    print("==> pls browse http://127.0.0.1:5000/api/content/2019")
    app.run()

2.运行
python hello2.py 

在浏览器输入 http://127.0.0.1:5000/api/content/2019
即可看到json个数的数据：
{"content":"some content from Mysql-2019","date":"2019","status":true}




3.用jQuery获取json数据
(1)py文件
from flask import Flask,request
from flask import jsonify
from flask.templating import render_template

app = Flask(__name__)

#首页Controler
@app.route('/', methods=['GET'])
def home():
    return render_template("jQ_index.html");


#计算并返回
@app.route('/add', methods=['GET'])
def add_numbers():
    a=request.args.get('a',0,type=int) #获取表单参数
    b=request.args.get('b',0,type=int)
    return jsonify({'result': a+b});


#run app
if __name__ == '__main__':
    print("==> pls browse http://10.21.127.192:5000/")
    app.run(host="0.0.0.0", debug=True)


(2)jQ_index.html文件放在py同级的templates文件夹下
<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Flask JQuery</title>

<!-- 插入jquery -->
<script src="{{url_for('static', filename='jquery-1.8.0.js')}}"></script>

<script type=text/javascript>
var $SCRIPT_ROOT = {{request.script_root|tojson|safe}};//这是？
</script>

<script type=text/javascript>
$(function() {
    function submit_form(e) {
        $.getJSON($SCRIPT_ROOT + '/add', 
		{
            a: $('input[name="a"]').val(),
            b: $('input[name="b"]').val(),
            now: new Date().getTime()
        },
        function(data,status) { /*status 参数可以省略*/
			console.log("status =",status)
            $('#result').text(data.result);
        });
    };
    // 绑定click事件
    $('#calculate').bind('click', submit_form);
});
</script>
</head>
<body>
<p>
    <input type=text size=5 name=a> +
    <input type=text size=5 name=b> =
    <span id=result>?</span>
</p>
<p><input type="button" id="calculate" value="计算"></p>
</body>
</html>

(3)jquery-1.8.0.js文件放到py同级的static文件夹下
(4)访问 http://10.21.127.192:5000/ 即可。



========================================
从url获取参数，从mysql获取数据，以json格式返回
----------------------------------------
1.hello3.py 
from flask import Flask
from flask import jsonify
import pymysql

app = Flask(__name__)

@app.route("/")
def hello():
    return "Hello World! PLS browse: http://127.0.0.1:5000/about/32"

def getItem(id):
	#mysql 获取数据
	# 打开数据库连接
	#db = pymysql.connect(host='y.biomooc.com',port=7070,user='yanpd', password='789789', database='english')
	db = pymysql.connect(host='localhost',port=3306,user='root', password='', database='think')
	# 使用cursor()方法获取操作游标 
	cursor = db.cursor()
	# 执行sql语句
	sql = "select * from think_weibo where id="+id
	cursor.execute(sql)
	values = cursor.fetchall()
	# 关闭数据库连接
	db.close()
	#返回结果
	return values

#从url获取参数 http://127.0.0.1:5000/about/30
@app.route("/about/<id>")
def about(id):
	return jsonify(getItem(id));

if __name__ == '__main__':
    app.run()



2.运行该应用:
python hello3.py 

在浏览器输入 http://127.0.0.1:5000/about/30
即可看到json格式的、从mysql返回的数据。


========================================
----------------------------------------

========================================
----------------------------------------





