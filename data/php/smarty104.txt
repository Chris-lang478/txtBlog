
========================================
smarty3模板引擎
----------------------------------------
1.下载地址：http://www.smarty.net/download

You can download the latest master from Smarty GitHub repository:
git clone https://github.com/smarty-php/smarty.git

Download lastest master as a zip file:
https://github.com/smarty-php/smarty/archive/master.zip

Visit the GIT Repository: https://github.com/smarty-php/smarty

2.文档：
	官网：http://www.smarty.net/docs/zh_CN/
	镜像：http://www.speedphp.com/smarty/index.html
3.为什么使用smarty？
	1.强大的表现逻辑；
	2.模板编译；
	3.缓存；
	4.高度可配置性和可扩展性；
	5.安全；防止程序遭到设计人员有意无意的破坏；


========================================
工作流程
----------------------------------------
1.先是引入smarty引擎；
2.创建php脚本，业务逻辑层；
3.创建tpl模板文件，表现层；
4.smarty模板引擎把php和tpl混合，得到编译文件，是php文件，混合了php和html。
5.如果开启模板缓存功能，则编译文件还会生成一个缓存文件，纯静态html文件；
6.如果再次访问，并且没有超时，则访问时直接执行纯静态的html文件；


========================================
引入smarty模板引擎
----------------------------------------
1.安装smarty模板引擎；
	(1)直接到官网下载，解压并提取libs文件夹，改名为smarty3，放到网站根目录。
	(2)创建demo1文件夹，新建一个php文件，引入smarty入口文件。
		//include('../smarty3/Smarty.class.php');//建议用绝对路径。
		
		<?php
		//创建实际路径
		define('ROOT_PATH',dirname( __FILE__ ));//F:\xampp\htdocs\smartyLearn
		require(ROOT_PATH . '/../smarty3/Smarty.class.php');

		//实例化
		$_smarty=new Smarty();

		//打印
		$_smarty->display('demo1.tpl');

	(3)建立所需要的4个文件夹，后续慢慢建。
	
2.运行报错，因为没有demo1.tpl文件。那么tpl文件的位置在哪呢？尝试发现，可以放到入口文件所在目录，或该目录下的templates文件夹。
	在Smarty主文件的293行：  protected $template_dir = array('./templates/');
	
	我们放到templates文件夹。demo1.tpl文件内容为：<h1>this is title</h1>
	
	刷新后，发现Smarty又建立一个templates_c文件夹，里面是编译文件73119e5a60ab2a480d8b1b251ff4100a284925bf_0.file.demo1.tpl.php
	这就是编译文件。
	
3.如何定义变量：
	
	我们在入口文件定义变量：
		<?php
		//创建实际路径
		define('ROOT_PATH',dirname( __FILE__ ));//F:\xampp\htdocs\smartyLearn
		require(ROOT_PATH . '/../smarty3/Smarty.class.php');

		//实例化
		$_smarty=new Smarty();

		//注册变量
		$_smarty->assign('name','Dawn');

		//打印
		$_smarty->display('demo1.tpl');

	在模板文件demo1.tpl中引用：
		<h1>this is {$name}</h1>
	访问后打印出：this is Dawn

目前，你已经会引入模板，并注册变量了！

一般我们先定义变量，再赋值：
//定义变量
$myName='Dawn2';

//注册变量
$_smarty->assign('name',$myName);

然后模板中正常引用。



4.如何修改模板目录，编译文件目录？
给变量$_smarty->template_dir指定模板目录。
给变量$_smarty->compile_dir指定编译目录

	<?php
	//创建实际路径
	define('ROOT_PATH',dirname( __FILE__ ));//F:\xampp\htdocs\smartyLearn
	require(ROOT_PATH . '/../smarty3/Smarty.class.php');
	//实例化
	$_smarty=new Smarty();

	//修改模板文件路径
	$_smarty->template_dir=ROOT_PATH . '/tpl';
	//修改编译目录
	$_smarty->compile_dir=ROOT_PATH . '/tpl_c';

	//定义变量
	$myName='Dawn3';

	//注册变量
	$_smarty->assign('name',$myName);

	//打印
	$_smarty->display('demo1.tpl');

然后，在tpl文件夹下新建文件demo1.tpl:
	<h1>this is {$name}</h1>
	from tpl dir.

结果输出：
this is Dawn2
from tpl dir.

同时，在tpl_c目录发现一个编译文件 b2ff82e789febf8d5ebe73e8d019c419b3a96224_0.file.demo1.tpl.php

建议不修改文件名，但是改成绝对路径：
//修改模板文件路径
$_smarty->template_dir=ROOT_PATH . '/templates';
//修改编译目录
$_smarty->compile_dir=ROOT_PATH . '/templates_c';



5.是否开启缓存
$_smarty->caching=true;

建议：开发调试阶段要关闭缓存！
	否则php中的变量不会及时改变。要及时删掉缓存文件，麻烦。最好不缓存方便调试。
	
6.ptl中的定界符{}很有可能和js以及css的{}冲突，怎么解决呢？
	(1)要么修改smarty的定界符；
		//左右定界符
		$_smarty->left_delimiter='<!--{';
		$_smarty->right_delimiter='}-->';
	
	在模板文件中：
		<h1>this is {$name}</h1>
		<!--{$name}-->
	
	解析结果：
	this is {$name} 
	Dawn6
	
	(2)要么全部使用外部js和css文件。不要出现{}符号。

	
	建议：不修改定界符，用外部js和css文件。

7.好多配置信息！怎么独立出去？
在入口文件所在目录建立smarty.inc.php文件：
	<?php
	//创建实际路径
	define('ROOT_PATH',dirname( __FILE__ ));//F:\xampp\htdocs\smartyLearn

	require(ROOT_PATH . '/../smarty3/Smarty.class.php');
	//实例化
	$_smarty=new Smarty();

	//模板文件路径
	$_smarty->template_dir=ROOT_PATH . '/templates/';
	//编译目录
	$_smarty->compile_dir=ROOT_PATH . '/templates_c/';
	//配置文件目录
	$_smarty->config_dir=ROOT_PATH . '/configs/';
	//缓存目录
	$_smarty->cache_dir=ROOT_PATH . '/cache/';

	//是否开启缓存
	$_smarty->caching=false;

	//左右定界符
	$_smarty->left_delimiter='{';//'<!--{'
	$_smarty->right_delimiter='}';//'}-->'
	
在入口文件index.php中引入即可：
	<?php
	//引入配置文件
	require('smarty.inc.php');
	//这里可以注册全局变量 global.

	//定义变量
	$myName='Dawn8';

	//注册变量
	$_smarty->assign('name',$myName);

	//打印
	$_smarty->display('demo1.tpl');
demo1.tpl内容为：
	<h1>this is {$name}</h1>
	<!--{$name}-->

打印出结果：
	this is Dawn8

说明配置文件已经独立出去了。系统还正常工作。

	

========================================
smarty模板引擎：分配变量
----------------------------------------
1.




========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------
