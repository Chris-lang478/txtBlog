Mysql优化指南：Mysql管理与维护教程


数据库（Database）是按照数据结构来组织、存储和管理数据的仓库。MySQL是最流行的关系型数据库管理系统，在WEB应用方面MySQL是最好的RDBMS（Relational Database Management System，关系型数据库）应用软件之一。

本教程假设您已经了解了MySQL，熟悉简单的增删改查操作。

本教程的目的在于指导您如何更好的使用MySQL数据库，讲述了MySQL的安装，存储引擎，数据类型，索引和锁，安全性以及SQL语句的优化等等。

我们会不断更新教程内容，如有错误或纰漏，请在文章详情页下方留言板处留言说明。


========================================
mysql内外左右连接
----------------------------------------

7. 几种连接：
(内连接)：select d.dept_no ,dept_name,emp_name,emp_sal from emp e join dept d on e.dept_no = d.dept_no where emp_sal>6000;
(自连接)：select e.emp_no,e.emp_name,m.emp_name from emp e join emp m on e.emp_mgr=m.emp_no;
#e表当做职员表，m表当做领导表；

8. 
(左外连接)：select e.emp_name,m.emp_name from emp e left join emp m on e.emp_mgr=m.emp_no;#e表示驱动表
(右外连接)：select e.emp_name,m.emp_name from emp m right join emp e on e.emp_mgr=m.emp_no;#e表示驱动表

9. 子查询：
（非关联子查询）：select emp_name from emp where emp_sal=(select min(emp_sal) from emp);#同一张表中查询；表中最低工资
(关联子查询)：select e1.dept_no,d.dept_name ,e1.emp_name,e1.emp_sal from emp e1 join dept d on e1.dept_no=d.dept_no
where  e1.emp_sal=(select min(e2.emp_sal) from emp e2 where e2.dept_no=e1.dept_no);
#找出e1.dept_no --->1--->e2.dept_no=1--->min(e2.emp_sal)=6000;找出每个部门中工资最低的；
        select e.dept_no ,d.dept_name ,avg(e.emp_sal) from emp e join dept d on e.dept_no=d.dept_no group by
d.dept_no having avg(e.emp_sal)>6000;

10. （事物）：要做的事，要完成的任务，有几句insert|update|delete语句组成；
（事物特性）ACID：
A：原子性，事物不可分割；
C: 统一性，sql语句同时成功，同时失败，保持一致；
I: 隔离性，事物之间相互隔离，互不影响；
D: 持久性，写入数据库，就生效了；

（取消自动提交事物）
	set autocommit=off;
		delete from dept where dept_no=4;
	savepoint p;
		insert into  dept values(null,"总部","hongsehgn");
	rollback to p;      #p到这行内容无效
	commit;             #把dept_no=4的记录删除；

11. （视图）：
(视图定义)：相当于一个变量，代表一个查询语句；
(视图的定义)：create view v1 as select * from dept;
(视图的使用)：select dept_no,dept_name from v1;  

12. (分页查询)：select * from emp limit 1,3;#从第二条记录开始向后数3条记录，显示；
	>select *from emp limit (n-1)*count,count;#显示第n页的count条记录；

http://blog.csdn.net/gaohongijj/article/details/8144893

========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
参考资料
----------------------------------------
http://c.biancheng.net/cpp/u/mysql_yh/