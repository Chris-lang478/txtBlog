ggplot2

官方教程： https://ggplot2.tidyverse.org/reference/index.html


http://agetouch.blog.163.com/blog/static/228535090201443183139251/

http://sape.inf.usi.ch/quick-reference/ggplot2
http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/


========================================
ggplot2 书中缺少的资源
----------------------------------------

1. movies 数据集(P129) 

gplot2movies: Movies Data
A dataset about movies. This was previously contained in ggplot2, but has been moved its own package to reduce the download size of ggplot2.
https://cran.r-project.org/web/packages/ggplot2movies/index.html
原本包含在ggplot2中的数据集，为了减少ggplot2的体积，现在该数据集已去掉。

> install.packages("ggplot2movies")




========================================
资源 todo
----------------------------------------
ggplot2等 http://www.cookbook-r.com/Graphs/

http://blog.rstudio.com/2016/11/14/ggplot2-2-2-0/

https://www.cnblogs.com/nxld/p/6059603.html


ggplot2例子：
http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html


如何用ggplot2画经济学人上的插图
http://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#orgheadline17
哈佛大学数据课程 http://tutorials.iq.harvard.edu


Beautiful plotting in R: A ggplot2 cheatsheet
http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/


Be Awesome in ggplot2: A Practical Guide to be Highly Effective - R software and data visualization
http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization


========================================
ggplot2默认主题怎么设置？
----------------------------------------
1.设置默认主题
#Cowplot made ggplot2 theme disappear / How to see current ggplot2 theme, and restore the default?
#https://stackoverflow.com/questions/41096293/cowplot-made-ggplot2-theme-disappear-how-to-see-current-ggplot2-theme-and-res
#library(cowplot)
theme_set(theme_grey())


2.如何选择其他主题
g=ggplot(...) #画图命令
g + theme_gray() #添加主题




========================================
ggplot2画errorbar
----------------------------------------
http://blog.sina.com.cn/s/blog_4a0824490102w7mr.html
1.如何在ggplot2中的line graph或者histogram中添加error bar：
参考资料：
http://ggplot2.tidyverse.org/reference/geom_linerange.html
http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
http://www.sthda.com/english/wiki/ggplot2-error-bars-quick-start-guide-r-software-and-data-visualization

例1：单数据的errorbar。
# 数据格式
#N	len	sd
#1	-65843.8	81.4
#2	-61454.7	584.9
#3	-59690.7	754.4
#4	-58326.3	1212
#5	-57695.8	1523.1

data=read.table('clipboard', sep="\t",header=T)
library(ggplot2)

ggplot(data,aes(x=N,y=len))+
  geom_errorbar(aes(ymin=len-sd, ymax=len+sd),width=.1)+
  geom_line()+
  geom_point()
####

例2：多数据的errorbar
使用R的内部数据集
tg <- ToothGrowth
head(tg)
#>    len supp dose
#> 1  4.2   VC  0.5
#> 2 11.5   VC  0.5
#> 3  7.3   VC  0.5
#> 4  5.8   VC  0.5
#> 5  6.4   VC  0.5
#> 6 10.0   VC  0.5

library(ggplot2)

#先对数据进行汇总，多种方法：http://www.cookbook-r.com/Manipulating_data/Summarizing_data/
#使用其中定义的 summarySE() 函数。
## Summarizes data.
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
    library(plyr)

    # New version of length which can handle NA's: if na.rm==T, don't count them
    length2 <- function (x, na.rm=FALSE) {
        if (na.rm) sum(!is.na(x))
        else       length(x)
    }

    # This does the summary. For each group's data frame, return a vector with
    # N, mean, and sd
    datac <- ddply(data, groupvars, .drop=.drop,
      .fun = function(xx, col) {
        c(N    = length2(xx[[col]], na.rm=na.rm),
          mean = mean   (xx[[col]], na.rm=na.rm),
          sd   = sd     (xx[[col]], na.rm=na.rm)
        )
      },
      measurevar
    )

    # Rename the "mean" column    
    datac <- rename(datac, c("mean" = measurevar))

    datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean

    # Confidence interval multiplier for standard error
    # Calculate t-statistic for confidence interval: 
    # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
    ciMult <- qt(conf.interval/2 + .5, datac$N-1)
    datac$ci <- datac$se * ciMult

    return(datac)
}

#汇总
# summarySE provides the standard deviation, standard error of the mean, and a (default 95%) confidence interval
tgc <- summarySE(tg, measurevar="len", groupvars=c("supp","dose"))
tgc
#>   supp dose  N   len       sd        se       ci
#> 1   OJ  0.5 10 13.23 4.459709 1.4102837 3.190283
#> 2   OJ  1.0 10 22.70 3.910953 1.2367520 2.797727
#> 3   OJ  2.0 10 26.06 2.655058 0.8396031 1.899314
#> 4   VC  0.5 10  7.98 2.746634 0.8685620 1.964824
#> 5   VC  1.0 10 16.77 2.515309 0.7954104 1.799343
#> 6   VC  2.0 10 26.14 4.797731 1.5171757 3.432090

#画图
par(mfrow=c(2,2))
# Standard error of the mean
ggplot(tgc, aes(x=dose, y=len, colour=supp)) + 
    geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1) +
    geom_line() +
    geom_point()
	
	
#errorbar重叠了，可以移位以便看得更清楚。
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.1) # move them .05 to the left and right
ggplot(tgc, aes(x=dose, y=len, colour=supp)) + 
    geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1, position=pd) +
    geom_line(position=pd) +
    geom_point(position=pd)


# Use 95% confidence interval instead of SEM 使用95%置信区间，而不是SEM
ggplot(tgc, aes(x=dose, y=len, colour=supp)) + 
    geom_errorbar(aes(ymin=len-ci, ymax=len+ci), width=.1, position=pd) +
    geom_line(position=pd) +
    geom_point(position=pd)


# Black error bars - notice the mapping of 'group=supp' -- without it, the error
# bars won't be dodged!
ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) + 
    geom_errorbar(aes(ymin=len-ci, ymax=len+ci), colour="black", width=.1, position=pd) +
    geom_line(position=pd) +
    geom_point(position=pd, size=3)




（2）如何把error bar画成阴影填充的曲线？
http://stackoverflow.com/questions/12033319/plot-mean-and-sd-of-dataset-per-x-value-using-ggplot2

a <- data.frame(x=rep(c(1,2,3,5,7,10,15,20), 5),
    y=rnorm(40, sd=2) + rep(c(4,3.5,3,2.5,2,1.5,1,0.5), 5))
ggplot(a, aes(x=x,y=y)) + geom_point() +geom_smooth()




========================================
柱状图(高度均值,带error bar)+散点图 done
----------------------------------------
效果图：http://tool.biomooc.com/R_scripts/index.html

library(ggplot2)
library(reshape2)

#示例数据：某基因在对照和肿瘤样本中的表达量。
d1=data.frame(
  control=c(10,20,30,40,30,60,20,40,20,20,10,20,30,40,30,40,20,40,20,20),
  tumor=c(50,70,40,60,80,90,40,50,70,80,50,70,40,60,80,90,40,50,70,80)
);

# 数据框重塑，数据合并为一列，添加分类列
d2=melt(d1,
	variable.name="type",#新变量的名字
	value.name="value" #值得名字
);
d2



######## 开始画图1 箱线图 + 散点图 done
ggplot(d2,aes(factor(type), value))+
  geom_boxplot()+
  geom_jitter()


######## 开始画图2 带误差bar的柱状图 + 散点图 done
#http://www.cookbook-r.com/Manipulating_data/Summarizing_data/
## Summarizes data.
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
  library(plyr)
  
  # New version of length which can handle NA's: if na.rm==T, don't count them
  length2 <- function (x, na.rm=FALSE) {
    if (na.rm) sum(!is.na(x))
    else       length(x)
  }
  
  # This does the summary. For each group's data frame, return a vector with
  # N, mean, and sd
  datac <- ddply(data, groupvars, .drop=.drop,
	 .fun = function(xx, col) {
	   c(N    = length2(xx[[col]], na.rm=na.rm),
		 mean = mean   (xx[[col]], na.rm=na.rm),
		 sd   = sd     (xx[[col]], na.rm=na.rm)
	   )
	 },
	 measurevar
  )

  # Rename the "mean" column    
  datac <- rename(datac, c("mean" = measurevar))

  datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean

  # Confidence interval multiplier for standard error
  # Calculate t-statistic for confidence interval: 
  # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
  ciMult <- qt(conf.interval/2 + .5, datac$N-1)
  datac$ci <- datac$se * ciMult

  return(datac)
}


# http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
d3 <- summarySE(d2, measurevar="value", groupvars=c("type"))
d3

ggplot(d3, aes(x=type, y=value)) + 
  geom_bar(aes(fill=type),position=position_dodge(), stat="identity", width=0.5) +
  geom_errorbar(aes(ymin=value-ci, ymax=value+ci),
	width=.2, # Width of the error bars
	position=position_dodge(.9))+
  geom_jitter(data=d2,aes(type,value), width=0.15) +
  ylab( expression(paste( italic("Sox2")," Expression(normalization)") ) )
  #ylab("Sox2 Expression\n(normalization)") 



========================================
ggplot2坐标轴控制、图例控制
----------------------------------------
1.隐藏x轴上的标签文字。
scale_x_continuous(labels = NULL)


2.更多控制选项：坐标轴命名、图标题
ggplot(readsCounts_df, aes(cell_id, mean, fill=factor(type)))+
  geom_histogram(stat='identity', position="dodge")+ #identity用数量作为柱子高度。dodge表并列
  scale_fill_hue("Type", breaks=c("h","nh","all"))+ #图例标题，图例顺序，图例重命名用labels=c()
  labs(title="B116", x="Cell ID", y="Mean read counts")+ #图的标题，和坐标轴重命名
  scale_x_discrete(limits=tmp2$cell_id, labels = NULL) #对x坐标进行重排序

#设置x,y轴的连续变量范围
#使用xlim()和ylim设置x、y轴的最大最小值。
p <- ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot()
p + ylim(0, max(PlantGrowth$weight)) #ylim()是对scale_y_continuous()的快速实现。
#其中breaks用来控制刻度。
p + scale_y_continuous(limits=c(0, 10), breaks=NULL)


#怎么写坐标轴文字上标
#https://cloud.tencent.com/developer/ask/173132
labs(x="Average normalized read count", y=expression(~CV^2) ) 
#Y坐标文字就是CV^2其中2是上标






3.图例
  # scale_color_hue("Type",breaks=c("h","nh","all"))+ #修改图例顺序
  theme(legend.position="none") + #隐藏图例

图例文字
ggplot(df3.filterd,aes(reads/1e6, geneNums, color=group.x))+
  geom_point(alpha=0.5,size=3)+
  labs(x="Million Reads", y="nGene")+
  xlim(0,4)+ylim(2000,9000)+ #控制坐标轴的显示范围
  guides(color=guide_legend(title="Group")) #改变图例文字，为 title=NULL 则表示清空图例标题
  
  

4.标记p值
# 做t检验
p_h_nh=t.test(mean_h, mean_nh)$p.value;p_h_nh
p_h_all=t.test(mean_h, mean_all)$p.value;p_h_all
#保留2位有效数字
p_h_nh=formatC(p_h_nh, format = "e", digits = 2)
p_h_all=formatC(p_h_all, format = "e", digits = 2)

  #画线，在线上标记p值
g+geom_segment(aes(x=1, y=155, xend=2, yend=155))+ #横线
  annotate("text", x=1.5, y=160, label=p_h_nh, size=3) +#annotate函数也可以添加标签
  geom_segment(aes(x=1, y=165, xend=3, yend=165))+ #横线
  annotate("text", x=2, y=170, label=p_h_all, size=3)
  
5.坐标轴标签60度转向，同时一次显示两张图。
  #数据宽变长
  library(reshape2)
  #画图1 raw counts
  g1=ggplot(melt(exp_df_cell1,id.vars="geneSymbol", measure.vars=c("APA_1","APA_2")), aes(geneSymbol, value,fill=variable))+
    geom_histogram(stat="identity")+
    #geom_histogram(stat="identity", position="fill")+
    theme(  axis.text.y=element_text(angle=90, hjust=1,size=8),legend.position="top" )+
    labs(title=s1)+ylab("Read counts")+#xlab("Gene Symbols")+
    scale_x_discrete(limits=o_gs, name=NULL, labels=NULL) +
    theme(axis.title.x=element_blank(),plot.margin=unit(x=c(2,5,0,5),units="mm"))+
    scale_fill_discrete("Type")
  #画图2 percentage
  g2=ggplot(melt(exp_df_cell1,id.vars="geneSymbol", measure.vars=c("APA_1p","APA_2p")), aes(geneSymbol, value,fill=variable))+
    geom_histogram(stat="identity")+
    #geom_histogram(stat="identity", position="fill")+
    theme(axis.text.x=element_text(angle=60, hjust=1,size=8,color="grey50"), #坐标轴刻度旋转60度。
          axis.text.y=element_text(angle=90, hjust=1,size=8),
          plot.margin=unit(x=c(0,5,2,5),units="mm"), legend.position="none")+#guides(fill=FALSE)+
    ylab("Percentage")+#xlab("Gene Symbols")+
    scale_x_discrete(name="Gene Symbols", limits=o_gs)
  library(scater)
  multiplot(g1,g2)
  # #这就是需要的效果



========================================
R语言绘制（一维数据的）概率密度图 with ggplot2
----------------------------------------

https://www.jianshu.com/p/999475adcb32

1.实例1
#造数据
head=rnorm(500,10,1)
tail=rnorm(500,20,4)
data0=data.frame(tail,head)
head(data0)
#融合数据
library(reshape2)
data1=melt(data0)
ggplot(data1, aes(x = value)) + geom_line(colour = "cadetblue3", stat = "density") +
  geom_rug(aes(colour = variable), sides = "b")
#



2.实例2 https://www.cnblogs.com/wwxbi/p/6142410.html
# 这里的h没有大小顺序
h <- rweibull(100000, shape=5, scale=1)

概率直方图
ggplot(NULL,aes(x=h))+
  geom_histogram(binwidth = 0.01,fill="white",colour="red")+
  ggtitle("Weibull distribution \n 直方图")
#


概率密度图
ggplot(NULL,aes(x=h))+
  geom_density(colour="green")+
  ggtitle("Weibull distribution \n 概率密度图")
概率密度图，方法2
ggplot(NULL,aes(x=h))+
  geom_line(stat="density",colour="green")+
  ggtitle("Weibull distribution \n 概率密度图")
#



========================================
散点图
----------------------------------------
1.控制散点的大小size、透明度alpha
ggplot(df, aes(gene.mean, gene.dispersion))+geom_point(size=0.1, alpha=0.2)





========================================
添加辅助线
----------------------------------------
1. 添加一条水平线
bp + geom_hline(aes(yintercept=12))


2. linetype 设置线型为 虚线
bp + geom_hline(aes(yintercept=12), colour="#990000", linetype="dashed")


refer:
https://blog.csdn.net/tanzuozhev/article/details/51112057



========================================
ggplot2中的颜色(color, fill): RGB, HSV or HCL colour spaces
----------------------------------------
1.色彩列表
http://sape.inf.usi.ch/quick-reference/ggplot2/colour
http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/

d=expand.grid(r=seq(0,1,0.1), g=seq(0,1,0.1), b=seq(0,1,0.1))
ggplot() +
	facet_wrap(~b) +
	scale_x_continuous(name="red", breaks=seq(0.05, 1.05, 0.2), labels=seq(0, 1, 0.2)) +
	scale_y_continuous(name="green", breaks=seq(0.05, 1.05, 0.2), labels=seq(0, 1, 0.2)) +
	scale_fill_identity() +
	geom_rect(data=d, mapping=aes(xmin=r, xmax=r+resolution(r), ymin=g, ymax=g+resolution(g), fill=rgb(r,g,b)), color="white", size=0.1)
#





2.连续的颜色：
https://ggplot2.tidyverse.org/reference/scale_gradient.html
# Generate some data
set.seed(133)
df <- data.frame(xval=rnorm(50), yval=rnorm(50))

# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()

# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() + 
    scale_colour_gradientn(colours=rainbow(4))

#
scale_colour_gradient(..., low = "#132B43", high = "#56B1F7",
  space = "Lab", na.value = "grey50", guide = "colourbar",
  aesthetics = "colour")
#



3.离散的颜色
https://www.cnblogs.com/shaocf/p/9600340.html




========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------

