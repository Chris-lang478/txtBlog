ggplot2



http://agetouch.blog.163.com/blog/static/228535090201443183139251/

http://sape.inf.usi.ch/quick-reference/ggplot2



========================================
ggplot2 概述与学习资源
----------------------------------------
1. 设计理念

ggplot2是用于绘图的R语言扩展包，其理念根植于《Grammar of Graphics》一书。它将绘图视为一种映射，即从数学空间映射到图形元素空间。例如将不同的数值映射到不同的色彩或透明度。该绘图包的特点在于并不去定义具体的图形（如直方图，散点图），而是定义各种底层组件（如线条、方块）来合成复杂的图形，这使它能以非常简洁的函数构建各类图形，而且默认条件下的绘图品质就能达到出版要求。

ggplot2 是一个增强的数据可视化R包，帮助我们轻松创建令人惊叹的多层图形。它的设计理念类似于PhotoShop,具体参数包含设计对象、艺术渲染、统计量、尺寸调整、坐标系统、分片显示、位置调整、动画效果等等。




2. ggplot2权威资料
ggplot2代码在github上
https://github.com/hadley
https://github.com/tidyverse/ggplot2

速查表： https://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
官方教程： https://ggplot2.tidyverse.org/reference/index.html

经典入门书《ggplot2：数据分析与图形艺术》
pdf下载：http://ishare.iask.sina.com.cn/f/68933673.html

实战可以参考R Graphics Cookbook一书： http://www.cookbook-r.com/Graphs/
全本: https://github.com/harryprince/R-Tutor/raw/master/R%E4%B9%A6/R%20Graphics%20Cookbook%20.pdf

《R for Data Science》书：https://r4ds.had.co.nz/data-visualisation.html

图形库：https://www.r-graph-gallery.com/portfolio/ggplot2-package/






3. ggplot2 书中缺少的资源

(1). movies 数据集(P129) 
gplot2movies: Movies Data
A dataset about movies. This was previously contained in ggplot2, but has been moved its own package to reduce the download size of ggplot2.
https://cran.r-project.org/web/packages/ggplot2movies/index.html
原本包含在ggplot2中的数据集，为了减少ggplot2的体积，现在该数据集已去掉。
> install.packages("ggplot2movies")



############
refer博客等:
1.Hadley Wickham2016年写的一篇广告：http://blog.rstudio.com/2016/11/14/ggplot2-2-2-0/
2.【推荐】中文详细教程 https://www.cnblogs.com/nxld/p/6059603.html

3. 实例附代码 Top 50 ggplot2 Visualizations - The Master List (With Full R Code)
http://r-statistics.co/Top50-Ggplot2-Visualizations-MasterList-R-Code.html
4. 实例附代码 Beautiful plotting in R: A ggplot2 cheatsheet
http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/

5. Be Awesome in ggplot2: A Practical Guide to be Highly Effective - R software and data visualization
http://www.sthda.com/english/wiki/be-awesome-in-ggplot2-a-practical-guide-to-be-highly-effective-r-software-and-data-visualization


7.如何用ggplot2画经济学人上的插图
http://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html#orgheadline17





========================================
ggplot2作图详解1：入门函数qplot
----------------------------------------
https://blog.csdn.net/u014801157/article/details/24372499




========================================
ggplot2作图详解2：ggplot图形对象
----------------------------------------
https://blog.csdn.net/u014801157/article/details/24372503




========================================
ggplot2作图详解3：映射（mapping）
----------------------------------------
https://blog.csdn.net/u014801157/article/details/24372505




========================================
ggplot2作图详解4：分面（faceting）
----------------------------------------
https://blog.csdn.net/u014801157/article/details/24372507



========================================
ggplot2作图详解5：图层语法和图形组合
----------------------------------------
https://blog.csdn.net/u014801157/article/details/24372517





========================================
ggplot2作图详解6：标尺（scale）设置
----------------------------------------
https://blog.csdn.net/u014801157/article/details/24372521







========================================
ggplot2作图详解7：主题（theme）设置
----------------------------------------
https://blog.csdn.net/u014801157/article/details/24372531





========================================
ggplot2默认主题怎么设置？
----------------------------------------
1.设置默认主题
#Cowplot made ggplot2 theme disappear / How to see current ggplot2 theme, and restore the default?
#https://stackoverflow.com/questions/41096293/cowplot-made-ggplot2-theme-disappear-how-to-see-current-ggplot2-theme-and-res
#library(cowplot)
theme_set(theme_grey())


2.如何选择其他主题
g=ggplot(...) #画图命令
g + theme_gray() #添加主题







========================================
ggplot2画errorbar
----------------------------------------
http://blog.sina.com.cn/s/blog_4a0824490102w7mr.html
1.如何在ggplot2中的line graph或者histogram中添加error bar：
参考资料：
http://ggplot2.tidyverse.org/reference/geom_linerange.html
http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
http://www.sthda.com/english/wiki/ggplot2-error-bars-quick-start-guide-r-software-and-data-visualization

例1：单数据的errorbar。
# 数据格式
#N	len	sd
#1	-65843.8	81.4
#2	-61454.7	584.9
#3	-59690.7	754.4
#4	-58326.3	1212
#5	-57695.8	1523.1

data=read.table('clipboard', sep="\t",header=T)
library(ggplot2)

ggplot(data,aes(x=N,y=len))+
  geom_errorbar(aes(ymin=len-sd, ymax=len+sd),width=.1)+
  geom_line()+
  geom_point()
####

例2：多数据的errorbar
使用R的内部数据集
tg <- ToothGrowth
head(tg)
#>    len supp dose
#> 1  4.2   VC  0.5
#> 2 11.5   VC  0.5
#> 3  7.3   VC  0.5
#> 4  5.8   VC  0.5
#> 5  6.4   VC  0.5
#> 6 10.0   VC  0.5

library(ggplot2)

#先对数据进行汇总，多种方法：http://www.cookbook-r.com/Manipulating_data/Summarizing_data/
#使用其中定义的 summarySE() 函数。
## Summarizes data.
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
    library(plyr)

    # New version of length which can handle NA's: if na.rm==T, don't count them
    length2 <- function (x, na.rm=FALSE) {
        if (na.rm) sum(!is.na(x))
        else       length(x)
    }

    # This does the summary. For each group's data frame, return a vector with
    # N, mean, and sd
    datac <- ddply(data, groupvars, .drop=.drop,
      .fun = function(xx, col) {
        c(N    = length2(xx[[col]], na.rm=na.rm),
          mean = mean   (xx[[col]], na.rm=na.rm),
          sd   = sd     (xx[[col]], na.rm=na.rm)
        )
      },
      measurevar
    )

    # Rename the "mean" column    
    datac <- rename(datac, c("mean" = measurevar))

    datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean

    # Confidence interval multiplier for standard error
    # Calculate t-statistic for confidence interval: 
    # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
    ciMult <- qt(conf.interval/2 + .5, datac$N-1)
    datac$ci <- datac$se * ciMult

    return(datac)
}

#汇总
# summarySE provides the standard deviation, standard error of the mean, and a (default 95%) confidence interval
tgc <- summarySE(tg, measurevar="len", groupvars=c("supp","dose"))
tgc
#>   supp dose  N   len       sd        se       ci
#> 1   OJ  0.5 10 13.23 4.459709 1.4102837 3.190283
#> 2   OJ  1.0 10 22.70 3.910953 1.2367520 2.797727
#> 3   OJ  2.0 10 26.06 2.655058 0.8396031 1.899314
#> 4   VC  0.5 10  7.98 2.746634 0.8685620 1.964824
#> 5   VC  1.0 10 16.77 2.515309 0.7954104 1.799343
#> 6   VC  2.0 10 26.14 4.797731 1.5171757 3.432090

#画图
par(mfrow=c(2,2))
# Standard error of the mean
ggplot(tgc, aes(x=dose, y=len, colour=supp)) + 
    geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1) +
    geom_line() +
    geom_point()
	
	
#errorbar重叠了，可以移位以便看得更清楚。
# The errorbars overlapped, so use position_dodge to move them horizontally
pd <- position_dodge(0.1) # move them .05 to the left and right
ggplot(tgc, aes(x=dose, y=len, colour=supp)) + 
    geom_errorbar(aes(ymin=len-se, ymax=len+se), width=.1, position=pd) +
    geom_line(position=pd) +
    geom_point(position=pd)


# Use 95% confidence interval instead of SEM 使用95%置信区间，而不是SEM
ggplot(tgc, aes(x=dose, y=len, colour=supp)) + 
    geom_errorbar(aes(ymin=len-ci, ymax=len+ci), width=.1, position=pd) +
    geom_line(position=pd) +
    geom_point(position=pd)


# Black error bars - notice the mapping of 'group=supp' -- without it, the error
# bars won't be dodged!
ggplot(tgc, aes(x=dose, y=len, colour=supp, group=supp)) + 
    geom_errorbar(aes(ymin=len-ci, ymax=len+ci), colour="black", width=.1, position=pd) +
    geom_line(position=pd) +
    geom_point(position=pd, size=3)




（2）如何把error bar画成阴影填充的曲线？
http://stackoverflow.com/questions/12033319/plot-mean-and-sd-of-dataset-per-x-value-using-ggplot2

a <- data.frame(x=rep(c(1,2,3,5,7,10,15,20), 5),
    y=rnorm(40, sd=2) + rep(c(4,3.5,3,2.5,2,1.5,1,0.5), 5))
ggplot(a, aes(x=x,y=y)) + geom_point() +geom_smooth()




========================================
柱状图(高度均值,带error bar)+散点图 done
----------------------------------------
效果图：http://tool.biomooc.com/R_scripts/index.html

library(ggplot2)
library(reshape2)

#示例数据：某基因在对照和肿瘤样本中的表达量。
d1=data.frame(
  control=c(10,20,30,40,30,60,20,40,20,20,10,20,30,40,30,40,20,40,20,20),
  tumor=c(50,70,40,60,80,90,40,50,70,80,50,70,40,60,80,90,40,50,70,80)
);

# 数据框重塑，数据合并为一列，添加分类列
d2=melt(d1,
	variable.name="type",#新变量的名字
	value.name="value" #值得名字
);
d2



######## 开始画图1 箱线图 + 散点图 done
ggplot(d2,aes(factor(type), value))+
  geom_boxplot()+
  geom_jitter()


######## 开始画图2 带误差bar的柱状图 + 散点图 done
#http://www.cookbook-r.com/Manipulating_data/Summarizing_data/
## Summarizes data.
## Gives count, mean, standard deviation, standard error of the mean, and confidence interval (default 95%).
##   data: a data frame.
##   measurevar: the name of a column that contains the variable to be summariezed
##   groupvars: a vector containing names of columns that contain grouping variables
##   na.rm: a boolean that indicates whether to ignore NA's
##   conf.interval: the percent range of the confidence interval (default is 95%)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
  library(plyr)
  
  # New version of length which can handle NA's: if na.rm==T, don't count them
  length2 <- function (x, na.rm=FALSE) {
    if (na.rm) sum(!is.na(x))
    else       length(x)
  }
  
  # This does the summary. For each group's data frame, return a vector with
  # N, mean, and sd
  datac <- ddply(data, groupvars, .drop=.drop,
	 .fun = function(xx, col) {
	   c(N    = length2(xx[[col]], na.rm=na.rm),
		 mean = mean   (xx[[col]], na.rm=na.rm),
		 sd   = sd     (xx[[col]], na.rm=na.rm)
	   )
	 },
	 measurevar
  )

  # Rename the "mean" column    
  datac <- rename(datac, c("mean" = measurevar))

  datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean

  # Confidence interval multiplier for standard error
  # Calculate t-statistic for confidence interval: 
  # e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
  ciMult <- qt(conf.interval/2 + .5, datac$N-1)
  datac$ci <- datac$se * ciMult

  return(datac)
}


# http://www.cookbook-r.com/Graphs/Plotting_means_and_error_bars_(ggplot2)/
d3 <- summarySE(d2, measurevar="value", groupvars=c("type"))
d3

ggplot(d3, aes(x=type, y=value)) + 
  geom_bar(aes(fill=type),position=position_dodge(), stat="identity", width=0.5) +
  geom_errorbar(aes(ymin=value-ci, ymax=value+ci),
	width=.2, # Width of the error bars
	position=position_dodge(.9))+
  geom_jitter(data=d2,aes(type,value), width=0.15) +
  ylab( expression(paste( italic("Sox2")," Expression(normalization)") ) )
  #ylab("Sox2 Expression\n(normalization)") 



========================================
ggplot2坐标轴控制、图例控制
----------------------------------------
1.隐藏x轴上的标签文字。
scale_x_continuous(labels = NULL)


2.更多控制选项：坐标轴命名、图标题
ggplot(readsCounts_df, aes(cell_id, mean, fill=factor(type)))+
  geom_histogram(stat='identity', position="dodge")+ #identity用数量作为柱子高度。dodge表并列
  scale_fill_hue("Type", breaks=c("h","nh","all"))+ #图例标题，图例顺序，图例重命名用labels=c()
  labs(title="B116", x="Cell ID", y="Mean read counts")+ #图的标题，和坐标轴重命名
  scale_x_discrete(limits=tmp2$cell_id, labels = NULL) #对x坐标进行重排序

#设置x,y轴的连续变量范围
#使用xlim()和ylim设置x、y轴的最大最小值。
p <- ggplot(PlantGrowth, aes(x=group, y=weight)) + geom_boxplot()
p + ylim(0, max(PlantGrowth$weight)) #ylim()是对scale_y_continuous()的快速实现。
#其中breaks用来控制刻度。
p + scale_y_continuous(limits=c(0, 10), breaks=NULL)


#怎么写坐标轴文字上标
#https://cloud.tencent.com/developer/ask/173132
labs(x="Average normalized read count", y=expression(~CV^2) ) 
#Y坐标文字就是CV^2其中2是上标






3.图例
  # scale_color_hue("Type",breaks=c("h","nh","all"))+ #修改图例顺序
  theme(legend.position="none") + #隐藏图例

图例文字
ggplot(df3.filterd,aes(reads/1e6, geneNums, color=group.x))+
  geom_point(alpha=0.5,size=3)+
  labs(x="Million Reads", y="nGene")+
  xlim(0,4)+ylim(2000,9000)+ #控制坐标轴的显示范围
  guides(color=guide_legend(title="Group")) #改变图例文字，为 title=NULL 则表示清空图例标题
  
  

4.标记p值
# 做t检验
p_h_nh=t.test(mean_h, mean_nh)$p.value;p_h_nh
p_h_all=t.test(mean_h, mean_all)$p.value;p_h_all
#保留2位有效数字
p_h_nh=formatC(p_h_nh, format = "e", digits = 2)
p_h_all=formatC(p_h_all, format = "e", digits = 2)

  #画线，在线上标记p值
g+geom_segment(aes(x=1, y=155, xend=2, yend=155))+ #横线
  annotate("text", x=1.5, y=160, label=p_h_nh, size=3) +#annotate函数也可以添加标签
  geom_segment(aes(x=1, y=165, xend=3, yend=165))+ #横线
  annotate("text", x=2, y=170, label=p_h_all, size=3)
  
5.坐标轴标签60度转向，同时一次显示两张图。
  #数据宽变长
  library(reshape2)
  #画图1 raw counts
  g1=ggplot(melt(exp_df_cell1,id.vars="geneSymbol", measure.vars=c("APA_1","APA_2")), aes(geneSymbol, value,fill=variable))+
    geom_histogram(stat="identity")+
    #geom_histogram(stat="identity", position="fill")+
    theme(  axis.text.y=element_text(angle=90, hjust=1,size=8),legend.position="top" )+
    labs(title=s1)+ylab("Read counts")+#xlab("Gene Symbols")+
    scale_x_discrete(limits=o_gs, name=NULL, labels=NULL) +
    theme(axis.title.x=element_blank(),plot.margin=unit(x=c(2,5,0,5),units="mm"))+
    scale_fill_discrete("Type")
  #画图2 percentage
  g2=ggplot(melt(exp_df_cell1,id.vars="geneSymbol", measure.vars=c("APA_1p","APA_2p")), aes(geneSymbol, value,fill=variable))+
    geom_histogram(stat="identity")+
    #geom_histogram(stat="identity", position="fill")+
    theme(axis.text.x=element_text(angle=60, hjust=1,size=8,color="grey50"), #坐标轴刻度旋转60度。
          axis.text.y=element_text(angle=90, hjust=1,size=8),
          plot.margin=unit(x=c(0,5,2,5),units="mm"), legend.position="none")+#guides(fill=FALSE)+
    ylab("Percentage")+#xlab("Gene Symbols")+
    scale_x_discrete(name="Gene Symbols", limits=o_gs)
  library(scater)
  multiplot(g1,g2)
  # #这就是需要的效果





========================================
散点图
----------------------------------------
1.控制散点的大小size、透明度alpha
ggplot(df, aes(gene.mean, gene.dispersion))+geom_point(size=0.1, alpha=0.2)





========================================
添加辅助线
----------------------------------------
1. 添加一条水平线
bp + geom_hline(aes(yintercept=12))


2. linetype 设置线型为 虚线
bp + geom_hline(aes(yintercept=12), colour="#990000", linetype="dashed")


refer:
https://blog.csdn.net/tanzuozhev/article/details/51112057



========================================
色彩： ggplot2中的颜色(color, fill): RGB, HSV or HCL colour spaces
----------------------------------------
提供色盲人士也可识别的配色方案
https://cran.r-project.org/web/packages/dichromat/

ggplot2颜色设置
https://blog.csdn.net/chang349276/article/details/77476848

#最感兴趣的调色板是 Set1 Dark2
# 对面积而言是 Set2 Pastel1 Pastel2 Accent
RColorBrewer::display.brewer.all() #列出所有的调色板。



1.色彩列表
http://sape.inf.usi.ch/quick-reference/ggplot2/colour
http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/

d=expand.grid(r=seq(0,1,0.1), g=seq(0,1,0.1), b=seq(0,1,0.1))
ggplot() +
	facet_wrap(~b) +
	scale_x_continuous(name="red", breaks=seq(0.05, 1.05, 0.2), labels=seq(0, 1, 0.2)) +
	scale_y_continuous(name="green", breaks=seq(0.05, 1.05, 0.2), labels=seq(0, 1, 0.2)) +
	scale_fill_identity() +
	geom_rect(data=d, mapping=aes(xmin=r, xmax=r+resolution(r), ymin=g, ymax=g+resolution(g), fill=rgb(r,g,b)), color="white", size=0.1)
#





2.连续的颜色：
https://ggplot2.tidyverse.org/reference/scale_gradient.html
# Generate some data
set.seed(133)
df <- data.frame(xval=rnorm(50), yval=rnorm(50))

# Make color depend on yval
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point()

# Use a different gradient
ggplot(df, aes(x=xval, y=yval, colour=yval)) + geom_point() + 
    scale_colour_gradientn(colours=rainbow(4))

#
scale_colour_gradient(..., low = "#132B43", high = "#56B1F7",
  space = "Lab", na.value = "grey50", guide = "colourbar",
  aesthetics = "colour")
#



3.离散的颜色
https://www.cnblogs.com/shaocf/p/9600340.html




========================================
********** 应用篇 **********
----------------------------------------


========================================
R语言ggplot2绘图教程——DAVID做基因富集分析（GO(BP, CC, MF)、KEGG）及可视化
----------------------------------------
1.概念
BP(Biological Process，生物学过程，比如参与了细胞免疫，凋亡，细胞增殖等等)，
CC（cellular component，所处细胞中的位置，比如蛋白在细胞膜、线粒体中还是在核内等），
MF（Molecular Function，分子功能，比如是个什么酶，还是个载体蛋白什么的）


目前市场上有很多做富集分析的软件。
GOstat，onto-tool，GOEAST，wego，GSEA，DAVID等。

富集分析概念佶屈聱牙，十分晦涩难懂。其实通俗的来讲就是看看我们要感兴趣的东西在我们要研究的集合中多不多。



2.获取数据集
(1)对比肿瘤和瘤旁，得到差异表达基因列表
或者获得高变基因列表
(2)使用DAVID服务器获取GO分析的信息:Term	Count	percentage	log(P)	type
https://david-d.ncifcrf.gov/tools.jsp


3.使用R的ggplot2可视化

#从DAVID上复制如下信息：
#Term	Count	percentage	log(P)	type
#cell cycle	18	28.6	6.443697499	BP
#cell cycle phase	14	22.2	6.443697499	BP
#condensed chromosome	7	11.1	2.920818754	CC
#chromosome	10	15.9	2.508638306	CC

#读取剪切板
tmp=read.table("clipboard", sep="\t",header = T)
head(tmp)
dim(tmp) #35 5

library("dplyr")
#tmp2=tmp[order( tmp$log.P., tmp$Term),]
#tmp2=tmp %>% group_by(type) %>% arrange(log.P.) 
#tmp2=tmp %>% group_by(type, (log.P.) ) 
tmp2=tmp

library("ggplot2")
p <- ggplot(data=tmp2, aes(x=Term, y=log.P., fill=type) ) +
  geom_bar(stat="identity", width=0.8) + 
  coord_flip() +  #反转x和y坐标轴
  #scale_fill_manual(values = CPCOLS) + #theme_bw() + 
  scale_x_discrete(limits=rev(tmp2$Term) ) + #限定x坐标的顺序
  xlab("") + ylab("-log(adj.P.value)")+
  theme(axis.text=element_text(face = "bold", color="gray50")) +
  labs(title = "Significant Enriched GO Terms")
p

#

##############################
#待优化颜色图例的版本
##############################
#复制的excel数据需要有type(BP,CC,MF,KEGG), term, logP列
go=read.table("clipboard",header=T,sep="\t")
dim(go) #11 9
go[1:3,1:4]

#
library('ggplot2')
plotGO=function(tmp2, txt=""){
  p <- ggplot(data=tmp2, aes(x=term, y=logP, fill=type) ) +
    geom_bar(stat="identity", width=0.8) + 
    coord_flip() +  #反转x和y坐标轴
    #scale_fill_manual(values = CPCOLS) + #theme_bw() + 
    scale_x_discrete(limits=rev(tmp2$term) ) + #限定x坐标的顺序
    xlab("") + ylab("-log(q Value)")+
    theme(axis.text=element_text(face = "bold", color="gray50")) +
    #labs(title = paste0("Significant Enriched GO and KEGG Terms ",txt))
    labs(title = paste0("Significant Terms ",txt))
  p
}

library("dplyr")
tmp=go
# if Metascape data:
#tmp$type=tmp$Category
#tmp$term=paste0("(",go$GO,")",go$Description)
#
tmp2=tmp[order(tmp$type, -tmp$logP),] #排序
#tmp2=tmp %>% group_by(type) %>% arrange(-logP) 
#tmp2=tmp %>% group_by(type, (logP) ) 
#tmp2=tmp

plotGO(tmp2,"(Right 5% Genes)")
##




========================================
R语言ggplot2绘图教程——差异表达基因火山图
----------------------------------------
#http://agetouch.blog.163.com/blog/static/22853509020161194123526/
#  Using ggplot2 for volcano plots 使用ggplot2画火山图
library(ggplot2)

#读取数据 #data download from GEO2R result
setwd("C:\\Users\\Administrator\\Desktop")
dif=read.table(file="Primary Tumor_Normal Colon.txt",header=T,row.names=1)
dif[1:3,1:4]

#添加显著与否标签
no_of_genes=nrow(dif);no_of_genes #4653
dif$threshold = as.factor(abs(dif$logFC) > 2 & dif$P.Value < 0.05/no_of_genes)

#画火山图
g = ggplot(data=dif, aes(x=logFC, y=-log10(P.Value), colour=threshold)) +
  geom_point(alpha=0.4, size=1.75) +
  #opts(legend.position = "none") + 
  theme(legend.title=element_blank()) +
  scale_colour_hue(labels=c("Not sig.","Sig."))+
  #xlim(c(-10, 10)) + ylim(c(0, 15)) +
  xlab("log2[fold change]") + ylab("-log10[p-value]") +
  labs(title="Volcano plot")
g

#只标注显著基因的基因名
# 选出一部分基因：FC大且p小的基因
dd_text = dif[(abs(dif$logFC) > 2) & (dif$P.Value < 0.05/no_of_genes),]
head(dd_text)

#添加文字-基因名
g + geom_text(data=dd_text, aes(x=logFC, y=-log10(P.Value), label=dd_text$Gene.symbol), colour="black")

#保存图片
ggsave("volcano.png")
ggsave("volcano8.png",g,width=8,height=8)

========================================
R语言ggplot2绘图教程——Pathway富集分析气泡图zz  
----------------------------------------
代码：
library(ggplot2)  
pathway = read.table("C://Users//Desktop//path.richFactor.head20.tsv",header=T,sep="\t")  
# 画图  
p = ggplot(pathway,aes(richFactor,Pathway))  
p=p + geom_point()  
# 改变点的大小  
p=p + geom_point(aes(size=R0vsR3))  
# 四维数据的展示  
pbubble = p + geom_point(aes(size=R0vsR3,color=-1*log10(Qvalue)))  
# 自定义渐变颜色  
pbubble =pbubble+ scale_colour_gradient(low="green",high="red")  
# 绘制pathway富集散点图  
pr = pbubble + scale_colour_gradient(low="green",high="red") +   
  labs(color=expression(-log[10](Qvalue)),size="Gene number",  
       x="Rich factor",y="Pathway name",title="Top20 of pathway enrichment")  
# 改变图片的样式（主题）  
pr=pr + theme_bw()  
pr 



备注，绘图数据的说明：
1)Pathway : 通路的名称        
2)R0vsR3 ：差异表达基因中，属于这个通路的基因的数量
3)All_Unigene：所有基因中属于这个通路的基因的数量  
4)Pvalue ：富集分析p值
5)Qvalue ：富集分析的Q值
6)richFactor ：在我们分析报告中，没有提供这一列，但很容易计算。是 第二列 除以 第三列得到；
7)Pathway ID  ：通路ID  
8)Genes ：通路中基因的ID
9)KOs：通路中基因的KO号


http://blog.csdn.net/sinat_38163598/article/details/72827851




========================================
TCGA数据做基因共表达散点图 with r And p value 
----------------------------------------
#从TCGA下载数据，csv文件两列，分别是两个基因的表达量。


fname="C:\\Users\\admin\\Downloads\\export.csv"
data1=read.csv(fname,header=T,sep=",")
head(data1)

#计算r和p
ts=cor.test(data1$CSF1, data1$CD33); ts
str(ts)
p=ts$p.value;p
r=ts$estimate[['cor']];r
r0=round(r,2);r0
p0=formatC(p, format = "e", digits = 2);p0

#画图
library(ggplot2)
library(cowplot)
g=ggplot(data1, aes( log2(CSF1), log2(CD33) ))+
  geom_point( color="#F87B72", alpha=0.75, size=1)+
  geom_smooth(method='lm', se=F,color="black",size=0.5)+ #se=F不要置信区间的阴影
  theme_cowplot()+ #除掉主题背景阴影
  geom_text(size=6,aes(x=12,y=2.5,label=paste0("r = ",r0,"\n p = ",p0)))+
  theme(legend.position="none")+
  labs(x="CSF1 expression(log)",y="CD33 expression(log)")
g #58ACFA
library(Cairo)
CairoPDF(file="wangbl0.5.pdf",width=7,height=7)
g
dev.off()
#
# g+scale_y_log10()+scale_x_log10() #简便写法

#为什么趋势线是歪的？
#重新构建数据也是歪的，看来不是smooth和对数的原因。
data2=data1
data2$CSF1=log2(data1$CSF1)
data2$CD33=log2(data1$CD33)
ggplot(data2, aes( CSF1, CD33, alpha=0.2 ))+geom_point()+geom_smooth(method="lm")
#
#



========================================
R语言绘制（一维数据的）概率密度图 with ggplot2
----------------------------------------

https://www.jianshu.com/p/999475adcb32

1.实例1
#造数据
head=rnorm(500,10,1)
tail=rnorm(500,20,4)
data0=data.frame(tail,head)
head(data0)
#融合数据
library(reshape2)
data1=melt(data0)
ggplot(data1, aes(x = value)) + geom_line(colour = "cadetblue3", stat = "density") +
  geom_rug(aes(colour = variable), sides = "b")
#



2.实例2 https://www.cnblogs.com/wwxbi/p/6142410.html
# 这里的h没有大小顺序
h <- rweibull(100000, shape=5, scale=1)

概率直方图
ggplot(NULL,aes(x=h))+
  geom_histogram(binwidth = 0.01,fill="white",colour="red")+
  ggtitle("Weibull distribution \n 直方图")
#


概率密度图
ggplot(NULL,aes(x=h))+
  geom_density(colour="green")+
  ggtitle("Weibull distribution \n 概率密度图")
概率密度图，方法2
ggplot(NULL,aes(x=h))+
  geom_line(stat="density",colour="green")+
  ggtitle("Weibull distribution \n 概率密度图")
#



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------



========================================
----------------------------------------

