nginx

http://nginx.org/en/docs/

========================================
win7 64bits系统安装nginx
----------------------------------------

参考：
http://www.cnblogs.com/cnscoo/archive/2012/09/03/2668577.html


如果是使用ISAPI的方式来运行PHP就必须用Thread Safe(线程安全)的版本；而用FastCGI模式运行PHP的话就没有必要用线程安全检查了，用None Thread Safe(NTS，非线程安全)的版本能够更好的提高效率。
如何查看当前运行的PHP的版本？一个很简单的办法就是phpinfo();
Thread Safety disabled是NTS，enabled是TS
Configure Command看到VC98字样的是VC6，Compiler标明 MSVC9 (Visual C++ 2008) 的是VC9
在WIN7下：IIS7+NTS+FastCGI+vc9 是最佳搭档或者apache+fastcgi+nts+vc6。
在WINXP下：Apache+TS+Apache module +vc6最合适的搭档。

1.下载nginx1.10.3 http://nginx.org/en/download.html
  下载php:http://windows.php.net/download#php-5.6
2.解压php-5.6.30-Win32-VC11-x64.zip到c:/web/php下，将其中的php.ini-production改成php.ini。
3.解压nginx-1.10.3.zip到C:/web/nginx下，编辑C:\web\nginx\conf\nginx.conf文件中的server{}部分:
	location / {
		root   html;
		index  index.html index.htm index.php; #添加PHP首页
	}

　　#取消以下注释并修改:
	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	location ~ \.php$ {
		root           html;
		fastcgi_pass   127.0.0.1:9000;
		fastcgi_index  index.php;

　　　　# html表示网站目录，须和root中的保持一致
		fastcgi_param  SCRIPT_FILENAME  html$fastcgi_script_name;
		include        fastcgi_params;
	}
	
按如上的配置，如果访问127.0.0.1:9000/a.php，则实际上根据root指令和fast_cgi.conf配置，nginx会通过fast_pass指令访问/usr/share/nginx/html/a.php这个文件。
        记得用root指令，指定站点的文档根路径。	
	
	
4.在C:\web\nginx中添加php-cgi.cmd文件并写入内容:
"C:\web\php\php-cgi.exe" -b 127.0.0.1:9000 -c "C:\web\php\php.ini"

5.在C:\web\nginx\html文件夹中添加phpinfo文件index.php并写入内容:
 <?php
     phpinfo();
 ?>
6.运行C:\web\nginx\php-cgi.cmd和c:\web\nginx\nginx.exe（nginx -c conf\nginx.conf），默认使用80端口，日志见文件夹nginx\logs
然后打开：http://localhost/index.php，有没有看到熟悉的phpinfo页面！

6.1.错误：
启动php的时候报错：在启动php时，无法启动此程序,因为计算机中丢失MSVCR110.dll的解决方法。
http://blog.csdn.net/lzq123_1/article/details/46400597
（1）进入 http://www.microsoft.com/zh-CN/download/details.aspx?id=30679 ，选择中文，我的是64位系统，选择vcredist_x64.exe,文件很小，下载很慢。。。
（2）同意协议，程序正在安装的，这里安装进度的提示，慢慢等待吧，很快的
当安装完成之后就会有这个界面的提示，提示我们已经设置成功。
以上就是无法启动此程序,因为计算机中丢失MSVCR110.dll的解决方法，

7.nginx基本命令:
　　start nginx：启动nginx
　　nginx -s stop：停止nginx
　　nginx -s quit：退出nginx






========================================
windows下nginx安装、配置与使用
----------------------------------------
目前国内各大门户网站已经部署了Nginx，如新浪、网易、腾讯等；国内几个重要的视频分享网站也部署了Nginx，如六房间、酷6等。新近发现Nginx 技术在国内日趋火热，越来越多的网站开始部署Nginx。

    相比apeach、iis，nginx以轻量级、高性能、稳定、配置简单、资源占用少等优势广受欢迎。

1)下载地址：http://nginx.org

2)启动：解压至c:\web\nginx，运行nginx.exe(即nginx -c conf\nginx.conf)，默认使用80端口，日志见文件夹C:\nginx\logs

3)使用　http://localhost

4)关闭 nginx -s stop 或taskkill /F /IM nginx.exe > nul 
5)常用配置
 　　C:\web\nginx\conf\nginx.conf,使用自己定义的conf文件如my.conf，命令为nginx -c conf\my.conf

　　常用配置如下： 
　　Nginx.conf代码 
　　http {
　　 server {
	　　 #1.侦听80端口 
	　　 listen 80; 
	　　 location / {
		　　 # 2. 默认主页目录在nginx安装目录的html子目录。 
		　　 root html; 
		　　 index index.html index.htm; 
		　　 # 3. 没有索引页时，罗列文件和子目录 
		　　 autoindex on; 
		　　 autoindex_exact_size on; 
		　　 autoindex_localtime on; 
	　　 }
	　　 # 4.指定虚拟目录 
	　　 location /tshirt { 
		　　 alias D:\programs\Apache2\htdocs\tshirt; 
		　　 index index.html index.htm; 
	　　 }
　　 }
    # 5.虚拟主机drupal.dawneve.com 配置 
	#http://www.osyunwei.com/archives/3727.html
    server {
        listen       80;
        server_name drupal.dawneve.com;
		index index.php index.html index.htm;
        # access_log drupal.dawneve.com/logs/access.log; 
        root html\drup.dawneve.com\htdocs; 
        location / {
            index index.html; 
        }
    } 
　　
　　小提示： 
　　运行nginx -V可以查看该Win64平台编译版支持哪些模块。我这里的结果为： 
	nginx version: nginx/1.10.3
	built by cl 16.00.40219.01 for 80x86
	built with OpenSSL 1.0.2k  26 Jan 2017
	TLS SNI support enabled
	configure arguments: 
	--with-cc=cl 
	--builddir=objs.msvc8 
	--with-debug 
	--prefix= 
	--conf-path=conf/nginx.conf 
	--pid-path=logs/nginx.pid 
	--http-log-path=logs/access.log 
	--error-log-path=logs/error.log 
	--sbin-path=nginx.exe 
	--http-client-body-temp-path=temp/client_body_temp 
	--http-proxy-temp-path=temp/proxy_temp 
	--http-fastcgi-temp-path=temp/fastcgi_temp 
	--http-scgi-temp-path=temp/scgi_temp 
	--http-uwsgi-temp-path=temp/uwsgi_temp 
	--with-cc-opt=-DFD_SETSIZE=1024 
	--with-pcre=objs.msvc8/lib/pcre-8.40 
	--with-zlib=objs.msvc8/lib/zlib-1.2.11 
	--with-select_module
	--with-http_realip_module 
	--with-http_addition_module 
	--with-http_sub_module 
	--with-http_dav_module 
	--with-http_stub_status_module 
	--with-http_flv_module 
	--with-http_mp4_module 
	--with-http_gunzip_module 
	--with-http_gzip_static_module 
	--with-http_auth_request_module 
	--with-http_random_index_module 
	--with-http_secure_link_module 
	--with-http_slice_module 
	--with-mail 
	--with-stream 
	--with-openssl=objs.msvc8/lib/openssl-1.0.2k 
	--with-openssl-opt=no-asm 
	--with-http_ssl_module 
	--with-mail_ssl_module 
	--with-stream_ssl_module 
	--with-ipv6
　　
　　显然，最经常用的memcache, rewrite模块都没在其中，因此该win32编译版本仅能供基本开发测试使用，对于产品平台，应该重新编译自己想要的win32版本，或者在linux下使用更方便。

6）查看nginx进程

　　tasklist /fi "imagename eq nginx.exe"，如下显示：
映像名称                       PID 会话名              会话#       内存使用
========================= ======== ================ =========== ============
nginx.exe                     8944 Console                    1      5,128 K
nginx.exe                     6712 Console                    1      5,556 K

7）nginx常用命令

nginx -s stop 强制关闭 
nginx -s quit 安全关闭 
nginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效 
nginx -s reopen 打开日志文件

8）其它
　　可以通过配置文件开启多个nginx工作进程，但同时只有其中一个nginx工作进程在工作，其他的阻塞等待。
　　一个nginx工作进程最多同时可以处理1024个连接。
　　nginx中需要共享内存的cache或者模块无法在windows下正常使用。
　　不过，nginx官方正在改进，将来nginx会以服务的方式运行，使用 I/O completion ports代替select方法，使多个工作进程能并发工作。
　　要使用nginx配合php-cgi使用，需要修改环境变量，否则，php-cgi运行一定次数就推出，需要重启，设置PHP_FCGI_MAX_REQUESTS这个变量为0即可。

　　以上在win7上通过。 

 8）nginx以windows服务形式启动
　　1.下载微软两个工具：instsrv.exe srvay.exe
　　2.执行命令:instsrv Nginxc:/nginx/srvany.exe
　　3.配置Nginx的运行参数
　　可以直接将配置导入到注册表Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/NGINX/Parameters]
"Application"="C://web//nginx//nginx.exe"
"AppParameters"=""
"AppDirectory"="C://web//nginx//"

　　注意：windows下的Nginx缺少很多内置module，用Nginx -V 命令查看。


========================================
----------------------------------------


========================================
----------------------------------------

========================================
----------------------------------------



========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------



========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------



========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------



========================================
----------------------------------------
