nginx(win + linux)

文档：http://nginx.org/en/docs/
一键安装包：https://github.com/lj2007331/oneinstack
win下nginx很多功能用不成，强烈推荐在linux下运行nginx。


agentzh 的 Nginx 教程（版本 2016.07.21）
https://openresty.org/download/agentzh-nginx-tutorials-zhcn.html


========================================
win7 64bits系统安装nginx
----------------------------------------

参考：
http://www.cnblogs.com/cnscoo/archive/2012/09/03/2668577.html


如果是使用ISAPI的方式来运行PHP就必须用Thread Safe(线程安全)的版本；而用FastCGI模式运行PHP的话就没有必要用线程安全检查了，用None Thread Safe(NTS，非线程安全)的版本能够更好的提高效率。
如何查看当前运行的PHP的版本？一个很简单的办法就是phpinfo();
Thread Safety disabled是NTS，enabled是TS
Configure Command看到VC98字样的是VC6，Compiler标明 MSVC9 (Visual C++ 2008) 的是VC9
在WIN7下：IIS7+NTS+FastCGI+vc9 是最佳搭档或者apache+fastcgi+nts+vc6。
在WINXP下：Apache+TS+Apache module +vc6最合适的搭档。

1.下载nginx1.10.3 http://nginx.org/en/download.html
  下载php:http://windows.php.net/download#php-5.6
2.解压php-5.6.30-Win32-VC11-x64.zip到c:/web/php下，将其中的php.ini-production改成php.ini。
3.解压nginx-1.10.3.zip到C:/web/nginx下，编辑C:\web\nginx\conf\nginx.conf文件中的server{}部分:
	location / {
		root   html;
		index  index.html index.htm index.php; #添加PHP首页
	}

　　#取消以下注释并修改:
	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	location ~ \.php$ {
		root           html;
		fastcgi_pass   127.0.0.1:9000;
		fastcgi_index  index.php;

　　　　# html表示网站目录，须和root中的保持一致
		fastcgi_param  SCRIPT_FILENAME  html$fastcgi_script_name;
		include        fastcgi_params;
	}
	
按如上的配置，如果访问127.0.0.1:9000/a.php，则实际上根据root指令和fast_cgi.conf配置，nginx会通过fast_pass指令访问/usr/share/nginx/html/a.php这个文件。
        记得用root指令，指定站点的文档根路径。	
	
	
4.在C:\web\nginx中添加php-cgi.cmd文件并写入内容:
"C:\web\php\php-cgi.exe" -b 127.0.0.1:9000 -c "C:\web\php\php.ini"

5.在C:\web\nginx\html文件夹中添加phpinfo文件index.php并写入内容:
 <?php
     phpinfo();
 ?>
6.运行C:\web\nginx\php-cgi.cmd和c:\web\nginx\nginx.exe（nginx -c conf\nginx.conf），默认使用80端口，日志见文件夹nginx\logs
然后打开：http://localhost/index.php，有没有看到熟悉的phpinfo页面！

6.1.错误：
启动php的时候报错：在启动php时，无法启动此程序,因为计算机中丢失MSVCR110.dll的解决方法。
http://blog.csdn.net/lzq123_1/article/details/46400597
（1）进入 http://www.microsoft.com/zh-CN/download/details.aspx?id=30679 ，选择中文，我的是64位系统，选择vcredist_x64.exe,文件很小，下载很慢。。。
（2）同意协议，程序正在安装的，这里安装进度的提示，慢慢等待吧，很快的
当安装完成之后就会有这个界面的提示，提示我们已经设置成功。
以上就是无法启动此程序,因为计算机中丢失MSVCR110.dll的解决方法，

7.nginx基本命令:
　　start nginx：启动nginx
　　nginx -s stop：停止nginx
　　nginx -s quit：退出nginx






========================================
windows下nginx安装、配置与使用
----------------------------------------
目前国内各大门户网站已经部署了Nginx，如新浪、网易、腾讯等；国内几个重要的视频分享网站也部署了Nginx，如六房间、酷6等。新近发现Nginx 技术在国内日趋火热，越来越多的网站开始部署Nginx。

    相比apeach、iis，nginx以轻量级、高性能、稳定、配置简单、资源占用少等优势广受欢迎。

1)下载地址：http://nginx.org

2)启动：解压至c:\web\nginx，运行nginx.exe(即nginx -c conf\nginx.conf)，默认使用80端口，日志见文件夹C:\nginx\logs

3)使用　http://localhost

4)关闭 nginx -s stop 或taskkill /F /IM nginx.exe > nul 
5)常用配置
 　　C:\web\nginx\conf\nginx.conf,使用自己定义的conf文件如my.conf，命令为nginx -c conf\my.conf

　　常用配置如下： 
　　Nginx.conf代码 
　　http {
　　 server {
	　　 #1.侦听80端口 
	　　 listen 80; 
	　　 location / {
		　　 # 2. 默认主页目录在nginx安装目录的html子目录。 
		　　 root html; 
		　　 index index.html index.htm; 
		　　 # 3. 没有索引页时，罗列文件和子目录 
		　　 autoindex on; 
		　　 autoindex_exact_size on; 
		　　 autoindex_localtime on; 
	　　 }
	　　 # 4.指定虚拟目录 
	　　 location /tshirt { 
		　　 alias D:\programs\Apache2\htdocs\tshirt; 
		　　 index index.html index.htm; 
	　　 }
　　 }
    # 5.虚拟主机drupal.dawneve.com 配置 
	#http://www.osyunwei.com/archives/3727.html
    server {
        listen       80;
        server_name drupal.dawneve.com;
		index index.php index.html index.htm;
        # access_log drupal.dawneve.com/logs/access.log; 
        root html\drup.dawneve.com\htdocs; 
        location / {
            index index.html; 
        }
    } 
　　
　　小提示： 
　　运行nginx -V可以查看该Win64平台编译版支持哪些模块。我这里的结果为： 
	nginx version: nginx/1.10.3
	built by cl 16.00.40219.01 for 80x86
	built with OpenSSL 1.0.2k  26 Jan 2017
	TLS SNI support enabled
	configure arguments: 
	--with-cc=cl 
	--builddir=objs.msvc8 
	--with-debug 
	--prefix= 
	--conf-path=conf/nginx.conf 
	--pid-path=logs/nginx.pid 
	--http-log-path=logs/access.log 
	--error-log-path=logs/error.log 
	--sbin-path=nginx.exe 
	--http-client-body-temp-path=temp/client_body_temp 
	--http-proxy-temp-path=temp/proxy_temp 
	--http-fastcgi-temp-path=temp/fastcgi_temp 
	--http-scgi-temp-path=temp/scgi_temp 
	--http-uwsgi-temp-path=temp/uwsgi_temp 
	--with-cc-opt=-DFD_SETSIZE=1024 
	--with-pcre=objs.msvc8/lib/pcre-8.40 
	--with-zlib=objs.msvc8/lib/zlib-1.2.11 
	--with-select_module
	--with-http_realip_module 
	--with-http_addition_module 
	--with-http_sub_module 
	--with-http_dav_module 
	--with-http_stub_status_module 
	--with-http_flv_module 
	--with-http_mp4_module 
	--with-http_gunzip_module 
	--with-http_gzip_static_module 
	--with-http_auth_request_module 
	--with-http_random_index_module 
	--with-http_secure_link_module 
	--with-http_slice_module 
	--with-mail 
	--with-stream 
	--with-openssl=objs.msvc8/lib/openssl-1.0.2k 
	--with-openssl-opt=no-asm 
	--with-http_ssl_module 
	--with-mail_ssl_module 
	--with-stream_ssl_module 
	--with-ipv6
　　
　　显然，最经常用的memcache, rewrite模块都没在其中，因此该win32编译版本仅能供基本开发测试使用，对于产品平台，应该重新编译自己想要的win32版本，或者在linux下使用更方便。

6）查看nginx进程

　　tasklist /fi "imagename eq nginx.exe"，如下显示：
映像名称                       PID 会话名              会话#       内存使用
========================= ======== ================ =========== ============
nginx.exe                     8944 Console                    1      5,128 K
nginx.exe                     6712 Console                    1      5,556 K

7）nginx常用命令

nginx -s stop 强制关闭 
nginx -s quit 安全关闭 
nginx -s reload 改变配置文件的时候，重启nginx工作进程，来时配置文件生效 
nginx -s reopen 打开日志文件

8）其它
　　可以通过配置文件开启多个nginx工作进程，但同时只有其中一个nginx工作进程在工作，其他的阻塞等待。
　　一个nginx工作进程最多同时可以处理1024个连接。
　　nginx中需要共享内存的cache或者模块无法在windows下正常使用。
　　不过，nginx官方正在改进，将来nginx会以服务的方式运行，使用 I/O completion ports代替select方法，使多个工作进程能并发工作。
　　要使用nginx配合php-cgi使用，需要修改环境变量，否则，php-cgi运行一定次数就推出，需要重启，设置PHP_FCGI_MAX_REQUESTS这个变量为0即可。

　　以上在win7上通过。 

 8）nginx以windows服务形式启动
　　1.下载微软两个工具：instsrv.exe srvay.exe
　　2.执行命令:instsrv Nginxc:/nginx/srvany.exe
　　3.配置Nginx的运行参数
　　可以直接将配置导入到注册表Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE/SYSTEM/CurrentControlSet/Services/NGINX/Parameters]
"Application"="C://web//nginx//nginx.exe"
"AppParameters"=""
"AppDirectory"="C://web//nginx//"

　　注意：windows下的Nginx缺少很多内置module，用Nginx -V 命令查看。


========================================
nginx在linux下的集成安装包
----------------------------------------
https://github.com/lj2007331/oneinstack

恭喜您，OneinStack 安装成功！

OneinStack Linux+Nginx/Tengine+MySQL/MariaDB/Percona+PHP
+Pureftpd+phpMyAdmin+redis+memcached+jemalloc脚本中用到的软件包大多最新稳定版本,修复了一些安全性问题。

查看本地环境:  探针 phpinfo Opcache phpMyAdmin(为了更安全，建议重命名 phpMyAdmin 目录！)
创建 WEB 虚拟主机执行脚本:  ./vhost.sh
创建 FTP 虚拟账号执行脚本:  ./pureftpd_vhost.sh
Github 项目地址:  https://github.com/lj2007331/oneinstack
OneinStack 官网:  https://oneinstack.com
QQ 群:  558540514(付费千人群) 535783209(新)

mysql用户名和密码：
GRANT ALL PRIVILEGES ON *.* TO '用户名'@'%' IDENTIFIED BY '我的密码';
FLUSH PRIVILEGES;

（1）OneinStack如何配置MySQL远程连接？
https://oneinstack.com/question/oneinstack-how-to-configure-mysql-remote-connection/
# iptables -I INPUT 4 -p tcp -m state --state NEW -m tcp --dport 3306 -j ACCEPT
# service iptables save #保存iptables规则

（2）没有ssl怎么办？没法做ab测试。
安装ssl（某些vps默认没装ssl)。使用root账号：
wget https://www.openssl.org/source/openssl-1.1.0e.tar.gz
tar -zxvf openssl-1.1.0e.tar.gz
cd openssl-0.9.8r
./Configure
./config
make  #等待很久
make install

检测版本号
# openssl version
还是报错 openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory

发现有这个文件啊
[root@iZm5ej0xncw7iyb3abhlkqZ lib]# find / -name "*libssl.so.1.1*"
/usr/local/lib64/libssl.so.1.1
/root/openssl-1.1.0e/libssl.so.1.1

安装正确：
[root@iZm5ej0xncw7iyb3abhlkqZ bin]# rpm -qa | grep openssl
openssl-1.0.1e-48.el6_8.4.x86_64
openssl-devel-1.0.1e-48.el6_8.4.x86_64


做一个软链接 
# ln -s /usr/local/lib64/libssl.so.1.1 /lib/libssl.so.1.1  不行

# cd /usr/lib64
# ln -s  libssl.so.1.0.1e libssl.so.1.1 不行
# ln -s  /usr/local/lib64/libssl.so.1.1 libssl.so.1.1 

(没搞定。。。)


========================================
ningx + apache配置网址
----------------------------------------
1.网站的文件放在：/data/wwwlogs/blog2.biomooc.com（IP：139.129.233.213）
2.用用apache监听88端口，负责解析php。
3.用nginx监听80端口，并代理到本地的88端口。


1.配置apache
/usr/local/apache/conf/httpd.conf 文件末尾要包含一句 
Include conf/vhost/*.conf

/usr/local/apache/conf/vhost/blog2.biomooc.com.conf 
<VirtualHost *:88>
  ServerAdmin admin@example.com
  DocumentRoot "/data/wwwroot/blog2.biomooc.com"
  ServerName blog2.biomooc.com


  ErrorLog "/data/wwwlogs/blog2.biomooc.com_error_apache.log"
  CustomLog "/data/wwwlogs/blog2.biomooc.com_apache.log" common
<Directory "/data/wwwroot/blog2.biomooc.com">
  SetOutputFilter DEFLATE
  Options FollowSymLinks ExecCGI
  Require all granted
  AllowOverride All
  Order allow,deny
  Allow from all
  DirectoryIndex index.html index.php
</Directory>
</VirtualHost>


2.配置nginx
/usr/local/nginx/conf/nginx.conf中http{}内的最后加上
  include vhost/*.conf;


/usr/local/nginx/conf/vhost/blog2.biomooc.com.conf
server {
  listen 80;
  server_name blog2.biomooc.com;
  access_log /data/wwwlogs/blog2.biomooc.com.log combined;
  index index.html index.htm index.php;
  root /data/wwwroot/blog2.biomooc.com;


  location / {
    try_files $uri @apache;
  }
  location @apache {
    proxy_pass http://127.0.0.1:88;
    include proxy.conf;
  }
  location ~ .*\.(php|php5|cgi|pl)?$ {
    proxy_pass http://127.0.0.1:88;
    include proxy.conf;
  }
  location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {
    expires 30d;
    access_log off;
  }
  location ~ .*\.(js|css)?$ {
    expires 7d;
    access_log off;
  }
  location ~ /\.ht {
    deny all;
  }
}




========================================
重启服务常用命令
----------------------------------------
service nginx restart
service httpd restart

service memcached restart
service redis-server restart


========================================
如何在Ubuntu1604/1804 下配置nginx服务器子目录
----------------------------------------

nginx是一个很好用的服务器软件，是apache的有力竞争者。

问题：
本文简介在ubuntu1604上，设置nginx显示静态资源（图片、文本、压缩包等），用局域网内的其他电脑可以直接查看这些资源。
具体说，就是通过web查看circos生成的图片，免去下载查看的麻烦。


方法：
1.安装niginx
$ sudo apt-get install nginx
$ service nginx status
	active(running)

自动下载并安装nginx
sudo apt-get install nginx
安装之后的文件结构大致为：
所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下
程序文件在/usr/sbin/nginx
日志放在了/var/log/nginx中
并已经在/etc/init.d/下创建了启动脚本nginx
默认的虚拟主机的目录设置在了/var/www/nginx-default
启动nginx : sudo /etc/init.d/nginx start




2.通过ifconfig查看主机ip地址。
$ ifconfig
eth0      Link encap:Ethernet  HWaddr 08:00:27:0e:cc:c3  
          inet addr:192.168.1.97

同局域网内的电脑可以通过浏览器访问该主机：http://192.168.1.97

Welcome to nginx!
If you see this page, the nginx web server is successfully installed and working. Further configuration is required.
For online documentation and support please refer to nginx.org.
Commercial support is available at nginx.com.
Thank you for using nginx.


该文件的位置为：/var/www/html/index.nginx-debian.html

/etc/nginx/nginx.conf  主配置文件。
包含/etc/nginx/conf.d/*.conf 文件。




3. 设置nginx静态文件目录为/home/wangjl/sth/目录，列举该文件夹下的文件。

编辑配置文件 nginx.conf
【wrong】$ sudo vim /etc/nginx/conf.d/default.conf  这个文件不太对。
$ sudo vim /etc/nginx/sites-available/default

(1)设置如下内容：
server{
	location / {
		root /home/wangjl/sth/;
		autoindex on;     #开启目录浏览功能；   
	}
}


或者
	location / {
			# First attempt to serve request as file, then
	#       root /var/www/html;
			root /home/wangjl/Pictures;
			autoindex on;
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;
	}

	location /img/ {
			alias   /home/wangjl/sth/;
			autoindex       on;
	}

根目录是~/Pictures目录。
通过http://192.168.1.97/img/ 可以看到图片列表。
注意：缺少最后的/不行！




参考：https://segmentfault.com/q/1010000005687627
location /c/ {
	alias /a/
}
如果访问站点http://location/c访问的就是/a/目录下的站点信息。





（2）更多设置不成功：
http://www.cnblogs.com/Kaivenblog/p/5948587.html
location /img/ {
    root /home/wangjl/sth/;
    autoindex on;  #开启目录浏览功能；   
    autoindex_exact_size off; #关闭详细文件大小统计，让文件大小显示MB，GB单位，默认为b；   
    autoindex_localtime on; #开启以服务器本地时区显示文件修改日期！   
}


(3)设置之后要重启nginx，才能使设置生效。
$ sudo service nginx restart


排错：
1. 如果关不掉nginx怎么办？
(1)常规service nginx stop
(2)查找nginx进程
$ ps -aux|grep nginx
然后 kill -9 xxxx 杀掉进程。


refer:
nginx的配置：http://www.cnblogs.com/t-road/p/6738888.html
agetouch blog:http://agetouch.blog.163.com/blog/static/228535090201791881025259/







========================================
|-- 端口转发
----------------------------------------
https://www.cnblogs.com/zhaoyingjie/p/7248678.html
端口转发指的是由软件统一监听某个域名上的某个端口（一般是80端口），当访问服务器的域名和端口符合要求时，就按照配置转发给指定的 Tomcat 服务器处理。我们常用的 Nginx 也有端口转发功能。



1.在nginx配置文件中添加几行
$ sudo vim /etc/nginx/sites-available/default

#Demo1负载均衡池
upstream py3_pool{
    server 192.168.2.120:8000;
}

#Demo1端口转发
server {
    listen       8080;
    server_name  y.biomooc.com;
#    access_log logs/y.biomooc.com.log;
#    error_log logs/y.biomooc.com.error;

    #将所有请求转发给demo_pool池的应用处理
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://py3_pool;
    }
}


python的Flask的web端口是8000，可以通过
http://y.biomooc.com:8000/x?name=test 访问，F12能看到Response中Server: Werkzeug/0.14.1 Python/3.6.3

现在使用nginx把端口8080的请求转发给8000，则访问 http://y.biomooc.com:8080/x?name=test 时，实际上后台响应的还是pyhton，但是F12能看到的Response中Server: nginx/1.14.0 (Ubuntu)

重复以上过程，即可完成不同URL转发到不同内部端口。
比如访问 book.biomooc.com 的8080，则自动转向内部的80端口等。






2. 附录：py开启简易服务器脚本
$ cat hello.py
from flask import Flask, escape, request

app = Flask(__name__)
@app.route('/')
def hello_world():
    return "hello world. http://y.biomooc.com:8000/x?name=test "

@app.route('/x')
def hello():
    name = request.args.get("name", "World")
    return f'Hello, {escape(name)}!'


if __name__=='__main__':
    app.run(host="192.168.2.120",port=8000)

# 启服务器
$ python hello.py
 * Serving Flask app "hello" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://192.168.2.120:8000/ (Press CTRL+C to quit)
#



========================================
如何在centOS6.8下配置nginx服务器子目录?
----------------------------------------
附录：—— 【centOS6 开nginx服务器】
https://www.cnblogs.com/heacool/p/6406664.html
查centOS的版本号：
$ lsb_release -a
版本号是6.8 。

# rpm -qa gcc
gcc-4.4.7-17.el6.x86_64
# rpm -qa pcre
pcre-7.8-7.el6.x86_64
# rpm -qa zlib
zlib-1.2.3-29.el6.x86_64
# rpm -qa openssl
openssl-1.0.1e-48.el6_8.3.x86_64

centos6.8系统下已安装有所需要的以上软件，下一步直接安装nginx。


1.下载
# cd /usr/local/src
# wget http://nginx.org/download/nginx-1.10.3.tar.gz

2.解压 
# tar -zxvf nginx-1.10.3.tar.gz

3.安装 
# ./configure --prefix=/usr/local/nginx
# make
# make install


4.查看安装位置
# whereis nginx
$ whereis nginx
nginx: /usr/local/nginx


5.启动nginx
nginx可执行文件存放路径： /usr/local/nginx/sbin/nginx
可进入/usr/local/nginx/sbin路径，输入 ./nginx 启动。

也可以通过ps -A命令查看nginx进程状态，确认nginx已启动:
#ps -A | grep nginx
或者
$ ps -aux | grep nginx 



6.自定义nginx子目录。
用途：便于直接查看circos等图形工具的输出结果。

/usr/local/nginx/conf/nginx.conf中第一行改为
user  root;#原来是nobody。这个很关键。修改文件夹权限为777等其他方法都不行。

location /{}下面平行添加：
        location /wangjl/ {
                #root /home/wangjl/web_pub/;
                alias   /home/wangjl/web_pub/;
                autoindex       on;
        }

重启nginx 
$ ./nginx -s reload

访问ip就可以看到新目录的内容了。
http://10.113.81.67/wangjl/



========================================
----------------------------------------

========================================
----------------------------------------



========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------



========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------



========================================
----------------------------------------
