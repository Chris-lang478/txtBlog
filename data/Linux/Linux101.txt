Linux 十大常用命令

序言：
linux是命令行操作为主、键盘操作为辅的系统，因此熟悉常用命令十分必要。


========================================
文件操作 十大常用命令
----------------------------------------
对于ubuntu系统，快捷键ctrl+Alt+T就能打开一个终端窗口。
可以在这里输入窗口。


1.常用操作：
mkdir	创建目录

rmdir	删除目录

cd	改变目录

ls	显示文件信息

cat	编辑文件

less	显示文件内容

cp	复制文件

mv	更改文件名

rm	删除文件

chmod	改变权限



2.pdf版

如果想打印出来细看，推荐北京大学cbi罗静初老师总结的版本：
Unix 十大常用命令：http://abc.cbi.pku.edu.cn/man/unix-commands1.pdf
Unix 十大专用命令：http://abc.cbi.pku.edu.cn/man/unix-commands2.pdf
Unix 十大实用命令：http://abc.cbi.pku.edu.cn/man/unix-commands3.pdf

from:http://abc.cbi.pku.edu.cn/manuals.php


========================================
解包命令
----------------------------------------
源代码一般以file.tar.gz file.tar.bz2或file.src.rpm 打包；
file.tar.gz和file.tar.bz2格式的解包命令如下； 
[root@ubuntu]# tar jxvf file.tar.bz2 
[root@ubuntu]# tar zxvf file.tar.gz



========================================
软件安装与卸载：apt-get
----------------------------------------
软件版本低，想安装新版本的。想到2条：删了再装，或者升级。

1.卸载：
sudo apt-get purge mongodb
敲密码进去，OK
作用不大。

2.升级软件
sudo apt-get upgrade 更新已安装的包

refer: http://blog.csdn.net/linuxzhouying/article/details/7192612


========================================
快捷方式：ln命令
----------------------------------------
ln是linux中又一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接.当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。
1．命令格式：
 ln [参数][源文件或目录][目标文件或目录]

2.软链接和硬链接的概念

硬链接可认为是一个文件拥有两个文件名;而软链接则是系统新建一个链接文件，此文件指向其所要指的文件
ln -s /root/lntest/source/ /root/lntest/dist/

软链接: ln –s 源文件 目标文件
	1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式
	2.软链接可以 跨文件系统 ，硬链接不可以
	3.软链接可以对一个不存在的文件名进行链接
	4.软链接可以对目录进行链接

硬链接: ln 源文件 目标文件，没有参数-s
	1.硬链接，以文件副本的形式存在。但不占用实际空间。
	2.不允许给目录创建硬链接
	3.硬链接只有在同一个文件系统中才能创建

不可以对文件夹建立硬连接的，我们通常用的还是软连接比较多
3.
范例 :
　　将档案 yy 产生一个 symbolic link : zz
　　ln -s yy zz
　　将档案 yy 产生一个 hard link : zz
　　ln yy xx﻿
PS：如果想要删除链接，则像普通文件一样直接rm 链接名称即可。


一共4种形式：
wjl@ubuntu:~$ ln --help

Usage: ln [OPTION]... [-T] TARGET LINK_NAME   (1st form)
  or:  ln [OPTION]... TARGET                  (2nd form)
  or:  ln [OPTION]... TARGET... DIRECTORY     (3rd form)
  or:  ln [OPTION]... -t DIRECTORY TARGET...  (4th form)

In the 1st form, create a link to TARGET with the name LINK_NAME.
In the 2nd form, create a link to TARGET in the current directory.
In the 3rd and 4th forms, create links to each TARGET in DIRECTORY.

Create hard links by default, symbolic links with --symbolic.

By default, each destination (name of new link) should not already exist.
When creating hard links, each TARGET must exist.  Symbolic links
can hold arbitrary text; if later resolved, a relative link is
interpreted in relation to its parent directory.

Mandatory arguments to long options are mandatory for short options too.
      --backup[=CONTROL]      make a backup of each existing destination file
  -b                          like --backup but does not accept an argument
  -d, -F, --directory         allow the superuser to attempt to hard link
                                directories (note: will probably fail due to
                                system restrictions, even for the superuser)
  -f, --force                 remove existing destination files
  -i, --interactive           prompt whether to remove destinations
  -L, --logical               dereference TARGETs that are symbolic links
  -n, --no-dereference        treat LINK_NAME as a normal file if
                                it is a symbolic link to a directory
  -P, --physical              make hard links directly to symbolic links
  -r, --relative              create symbolic links relative to link location
  -s, --symbolic              make symbolic links instead of hard links
  -S, --suffix=SUFFIX         override the usual backup suffix
  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create
                                the links
  -T, --no-target-directory   treat LINK_NAME as a normal file always
  -v, --verbose               print name of each linked file
      --help     display this help and exit
      --version  output version information and exit

The backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.
The version control method may be selected via the --backup option or through
the VERSION_CONTROL environment variable.  Here are the values:

  none, off       never make backups (even if --backup is given)
  numbered, t     make numbered backups
  existing, nil   numbered if numbered backups exist, simple otherwise
  simple, never   always make simple backups

Using -s ignores -L and -P.  Otherwise, the last option specified controls
behavior when a TARGET is a symbolic link, defaulting to -P.

Report ln bugs to bug-coreutils@gnu.org
GNU coreutils home page: <http://www.gnu.org/software/coreutils/>
General help using GNU software: <http://www.gnu.org/gethelp/>
For complete documentation, run: info coreutils 'ln invocation'

http://www.cnblogs.com/peida/archive/2012/12/11/2812294.html
http://www.linuxidc.com/Linux/2014-12/111056.htm
http://man.linuxde.net/ln


========================================
tar 解压和压缩命令详解
----------------------------------------
tar

-c: 建立压缩档案
-x：解压
-t：查看内容
-r：向压缩归档文件末尾追加文件
-u：更新原压缩包中的文件

这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。

-z：有gzip属性的
-j：有bz2属性的
-Z：有compress属性的
-v：显示所有过程
-O：将文件解开到标准输出

下面的参数-f是必须的

-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。

# tar -cf all.tar *.jpg 
这条命令是将所有.jpg的文件打成一个名为all.tar的包。-c是表示产生新的包，-f指定包的文件名。

# tar -rf all.tar *.gif 
这条命令是将所有.gif的文件增加到all.tar的包里面去。-r是表示增加文件的意思。

# tar -uf all.tar logo.gif 
这条命令是更新原来tar包all.tar中logo.gif文件，-u是表示更新文件的意思。

# tar -tf all.tar 
这条命令是列出all.tar包中所有文件，-t是列出文件的意思

# tar -xf all.tar 
这条命令是解出all.tar包中所有文件，-x是解开的意思

 


压缩
tar –cvf jpg.tar *.jpg //将目录里所有jpg文件打包成tar.jpg

tar –czf jpg.tar.gz *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用gzip压缩，生成一个gzip压缩过的包，命名为jpg.tar.gz

tar –cjf jpg.tar.bz2 *.jpg //将目录里所有jpg文件打包成jpg.tar后，并且将其用bzip2压缩，生成一个bzip2压缩过的包，命名为jpg.tar.bz2

tar –cZf jpg.tar.Z *.jpg   //将目录里所有jpg文件打包成jpg.tar后，并且将其用compress压缩，生成一个umcompress压缩过的包，命名为jpg.tar.Z

rar a jpg.rar *.jpg //rar格式的压缩，需要先下载rar for linux

zip jpg.zip *.jpg //zip格式的压缩，需要先下载zip for linux
 

 
解压
tar –xvf file.tar //解压 tar包

tar -xzvf file.tar.gz //解压tar.gz

tar -xjvf file.tar.bz2   //解压 tar.bz2

tar –xZvf file.tar.Z   //解压tar.Z

unrar e file.rar //解压rar

unzip file.zip //解压zip




总结

1、*.tar 用 tar –xvf 解压

2、*.gz 用 gzip -d或者gunzip 解压

3、*.tar.gz和*.tgz 用 tar –xzf 解压

4、*.bz2 用 bzip2 -d或者用bunzip2 解压

5、*.tar.bz2用tar –xjf 解压

6、*.Z 用 uncompress 解压

7、*.tar.Z 用tar –xZf 解压

8、*.rar 用 unrar e解压

9、*.zip 用 unzip 解压



http://blog.csdn.net/dunyanan1/article/details/38869059
========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------