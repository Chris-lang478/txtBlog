
Android开发大纲

环境搭建
常用UI控件、事件机制
Android四大组件、Intent组件
Fragment
数据存储
网络编程
绘图与动画
多媒体开发
地图定位
进阶内容


========================================
安卓的历史
----------------------------------------

安卓首先是制作智能相机。
后来该公司被谷歌收购，并在手机中爆炸式增长。


========================================
环境的搭建
----------------------------------------
1.下载安装JDK(Java Development Kit )；
2.下载安装Eclipse（www.eclipse.org）；
3.下载Android-SDK；
4.下载安装ADT插件
		（在Eclipse中，help->Install New Software
		输入地址为：https://dl-ssl.google.com/android/eclipse/ ）

Android Studio下载：http://developer.android.com/sdk/installing/studio.html		
模拟器Genymotion：http://www.genymotion.net/

========================================
.9(九妹)图片怎么玩
----------------------------------------
！！核心要点：左上拉伸，右下内容！！！！！！ 

Android设计中如何切图.9.png（点9图）：http://www.miued.com/2074/
9.png图片的处理：http://blog.csdn.net/lizzy115/article/details/7950959

========================================
界面原型设计
----------------------------------------
引用锤子科技视觉设计总监——罗子雄在重庆TEDx活动上说的一小段话：
"每当我们看到一些美妙的设计的时候，很多人心里面会有一种冲动，这种冲动会让你们想去创造一些 新的东西，创造一些美妙的事物。"

公司的话，大部分使用的都是Axure Rp，但是这个东西比较难用！除了这个以外还有其他很多的原型设计工具：

Pencil
Framer
Shireframe
UIDesigner
Balsamiq Mockups
Mockup Builder
Mockup
FrameBox
iPhone Mockup
GOOFLOW
WireframeSketcher
FluidIA
Indigo Studio
Origami
Quartz Composer
Justproto
Avocado
PaintCode
Mockplus(摩客)
墨刀等....

有网页版以及客户端版供你选择：Mockplus官网 https://www.mockplus.cn/

========================================
工程相关解析(各种文件，资源访问)
----------------------------------------
我们开发大部分时间都花在下面这个部分上。

深入了解三个文件：

好了，接下来我们就要剖析工程里三个比较重要的文件： 
	MainActivity.java，
	布局文件：activity_main和
	Android配置文件：AndroidManifest.xml 

========================================
Android程序签名打包
----------------------------------------


打包Android APK的方法还有很多，命令行，或者Gradle，ANT，MAVEN等等，方法有很多，本节讲解最简单的通过图形化界面打包签名的方式！


========================================
反编译APK获取代码&资源
----------------------------------------
"反编译Apk"，看上去好像好像很高端的样子，其实不然，就是通过某些反编译软件，对我们的APK进行反编译，从而获取程序的源代码，图片，XML资源等文件；不知道你有没有这样做过，看到一个别人的一个APP界面做得很精美，或者你看上别人的图片素材，简单点的，我们可以下载别人的APK，然后改下后缀名，改成xxx.zip，然后解压： 笔者随便解压了一个APK：


========================================
第二章——Android中的UI组件的详解
----------------------------------------
2.1 View与ViewGroup的概念
2.2 布局
2.3 表单
2.4 控件
2.5 Adapter类控件
2.6 对话框控件



========================================
2.1 View与ViewGroup的概念
----------------------------------------

Android里的图形界面都是由View和ViewGroup以及他们的子类构成的： 
	View：所有可视化控件的父类,提供组件描绘和时间处理方法 
	ViewGroup： View类的子类，可以拥有子控件,可以看作是容器 Android 
	
	UI中的控件都是按照这种层次树的结构堆叠得，而创建UI布局的方式有两种， 自己在Java里写代码或者通过XML定义布局，后者显得更加方便和容易理解！ 也是我们最常用的手段！另外我们一般很少直接用View和ViewGroup来写布局，更多的 时候使用它们的子类控件或容器来构建布局！

========================================
2.2 布局
----------------------------------------
Android中有六大布局,分别是: 
	2.2.1 LinearLayout(线性布局)
	2.2.2 RelativeLayout(相对布局)
	2.2.3 TableLayout(表格布局)
	2.2.4 FrameLayout(帧布局)
	2.2.5 GridLayout(网格布局)
	2.2.6 AbsoluteLayout(绝对布局)

尽量使用RelativeLayout + LinearLayout的weight属性搭配使用吧！


 而今天我们要讲解的就是第一个布局，LinearLayout(线性布局)，我们屏幕适配的使用 用的比较多的就是LinearLayout的weight(权重属性),在这一节里,我们会详细地解析 LinearLayout,包括一些基本的属性,Weight属性的使用,以及比例如何计算,另外还 会说下一个用的比较少的属性:android:divider绘制下划线！

========================================
2.3 表单
----------------------------------------

2.3.1 TextView(文本框)详解
2.3.2 EditText(输入框)详解
2.3.3 Button(按钮)与ImageButton(图像按钮)
2.3.4 ImageView(图像视图)
2.3.5.RadioButton(单选按钮)&Checkbox(复选框)
2.3.6 开关按钮ToggleButton和开关Switch
2.3.7 ProgressBar(进度条)
2.3.8 SeekBar(拖动条)
2.3.9 RatingBar(星级评分条)

TextView：http://androiddoc.qiniudn.com/reference/android/widget/TextView.html

EditText(输入框)； 和TextView非常类似，最大的区别是：EditText可以接受用户输入！
http://androiddoc.qiniudn.com/reference/android/widget/EditText.html

另外Button是TextView的子类，所以TextView上很多属性也可以应用到Button 上！我们实际开发中对于Button的，无非是对按钮的几个状态做相应的操作，比如：按钮按下的时候 用一种颜色，弹起又一种颜色，或者按钮不可用的时候一种颜色这样！上述实现无非是通过 StateListDrawable这种Drawable资源来实现，即编写一个drawable的资源文件。


========================================
2.4 控件
----------------------------------------
2.4.1 ScrollView(滚动条)
2.4.2 Date & Time组件(上)
2.4.3 Date & Time组件(下)
2.4.4 Adapter基础讲解
2.4.5 ListView简单实用
2.4.6 BaseAdapter优化
2.4.7ListView的焦点问题
2.4.8 ListView之checkbox错位问题解决
2.4.9 ListView的数据更新问题


除了SimpleAdapter偶尔可能会用下，一般我们都是重写BaseAdapter的！
另外，关于BaseAdapter的，有很多东西要讲解，就把他丢到ListView那里一起讲，毕竟Adapter 总是和View沾边，而且ListView是我们用得最多的一个控件。

========================================
2.5 Adapter类控件
----------------------------------------
2.5.0 构建一个可复用的自定义BaseAdapter
2.5.1 ListView Item多布局的实现
2.5.2 GridView(网格视图)的基本使用
2.5.3 Spinner(列表选项框)的基本使用
2.5.4 AutoCompleteTextView(自动完成文本框)的基本使用
2.5.5 ExpandableListView(可折叠列表)的基本使用
2.5.6 ViewFlipper(翻转视图)的基本使用
2.5.7 Toast(吐司)的基本使用
2.5.8 Notification(状态栏通知)详解
2.5.9 AlertDialog(对话框)详解




========================================
2.6 对话框控件
----------------------------------------
2.6.0 其他几种常用对话框基本使用
2.6.1 PopupWindow(悬浮框)的基本使用
2.6.2 菜单(Menu)
2.6.3 ViewPager的简单使用
2.6.4 DrawerLayout(官方侧滑菜单)的简单使用

ProgressDialog、DatePickerDialog(日期选择对话框)与TimePickerDialog(时间选择对话框)

和AlertDialog对话框不同的是，他的位置可以是随意的；
另外AlertDialog是非堵塞线程的，而PopupWindow则是堵塞线程的！而官方有这样一句话来介绍 PopupWindow：
A popup window that can be used to display an arbitrary view. 
The popup window is a floating container that appears on top of the current activity.
大概意思是：一个弹出窗口控件，可以用来显示任意View，而且会浮动在当前activity的顶部



Android中的Menu(菜单)，而在Android中的菜单有如下几种：
	OptionMenu：选项菜单，android中最常见的菜单，通过Menu键来调用
	SubMenu：子菜单，android中点击子菜单将弹出一个显示子菜单项的悬浮框， 子菜单不支持嵌套，即不能包括其他子菜单
	ContextMenu：上下文菜单，通过长按某个视图组件后出现的菜单，该组件需注册上下文菜单 本节我们来依依学习这几种菜单的用法~ PS：官方文档：menus

Android 3.0后引入的一个UI控件——ViewPager(视图滑动切换工具)

DrawerLayout(官方侧滑菜单)
第三章——Android的事件处理机制 http://blog.csdn.net/lmj623565791/article/details/41531475


========================================
第三章——Android的事件处理机制
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------

