Servlet使用


========================================
Servlet大纲
----------------------------------------
Tomcat 简介
http://tomcat.apache.org/
Apache Tomcat version 7.0 implements the Servlet 3.0 and JavaServer Pages 2.2 specifications from the Java Community Process.

>2016-11-08 Tomcat 8.5.8 Released


========================================
xampp中的tomcat怎么激活
----------------------------------------
环境变量：https://zhidao.baidu.com/question/256492455.html
添加注册表项：http://www.ithao123.cn/content-3176358.html


环境变量：
JAVA_HOME=jdk主目录 
TOMCAT_HOME=tomcat的主目录 

--
catalina_start.bat
[XAMPP]: Searching JDK HOME with reg query ...
错误: 系统找不到指定的注册表项或值。
. [XAMPP]: Cannot find current JDK installation!
. [XAMPP]: Cannot set JAVA_HOME. Aborting ...
done.
请按任意键继续. . .
说找不到键值，我们打开这个bat看看！！！

解决方法：
我们regedit打开注册表：HKEY_LOCAL_MACHINE—>SOFTWARE—>Wow6432Node
新建项JavaSoft
在JavaSoft下新建项Java Development Kit和Java Runtime Environment

Java Development Kit默认值指定为你jdk的路径
我的jdk路径为：
D:\Program Files\Java\jdk1.8.0_66

Java Runtime Environment指定你jre路径
比如我的jre路径为：
D:\Program Files\Java\jdk1.8.0_66\jre

自己安装版的java应该是不会出现这样的现象的，只有当你免安装的时候才会出现这样的现象
我们再来运行一下xmapp的tomcat看完美解决了问题没有！！！

访问：http://localhost:8080/
登录密码：
（1）打开文件conf/tomcat-users.xml
（2）增加2条
<role rolename="admin-gui"/>
<user username="tomcat" password="tomcat" roles="admin-gui"/>
（3）重启tomcat。



被拒绝后提示详细的用户设置
You are not authorized to view this page. If you have not changed any configuration files, please examine the file conf/tomcat-users.xml in your installation. That file must contain the credentials to let you use this webapp.

For example, to add the admin-gui role to a user named tomcat with a password of s3cret, add the following to the config file listed above.

<role rolename="admin-gui"/>
<user username="tomcat" password="s3cret" roles="admin-gui"/>
Note that for Tomcat 7 onwards, the roles required to use the host manager application were changed from the single admin role to the following two roles. You will need to assign the role(s) required for the functionality you wish to access.

admin-gui - allows access to the HTML GUI
admin-script - allows access to the text interface
The HTML interface is protected against CSRF but the text interface is not. To maintain the CSRF protection:

Users with the admin-gui role should not be granted the admin-script role.
If the text interface is accessed through a browser (e.g. for testing since this interface is intended for tools not humans) then the browser must be closed afterwards to terminate the session.



========================================
Servlet版HelloServlet，和eclipse中配置servlet
----------------------------------------

Servlet的四步开发流程。
1.首先在Tomcat的主目录下的webapp文件夹内新建mywebsite文件夹，里面新建WEB-INF文件夹;
在WEB-INF文件夹下建立classes子文件夹 存放你的servlet
然后在WEB-INF文件夹下建立一个web.xml文件,记录网站的配置信息

当然这个操作你可以自己完成 也可以在root目录下拷贝一份
大家可以看到 这个地方传递过来了一个信息，什么信息呢？
文件夹结构：

F:\xampp\tomcat\webapps\mywebsite\WEB-INF\web.xml 

webapps/WEB-INF/web.xml 
webapps/WEB-INF/classes/HelloServletDemo.class 


2.开发Servlet（引入Servlet-api.jar）

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.Servlet;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;

public class HelloServletDemo implements Servlet{
	// 用于得到servlet配置文件 与生命周期无关
	@Override
	public ServletConfig getServletConfig() {
		return null;
	}

	@Override
	public String getServletInfo() {
		// TODO Auto-generated method stub
		return "Servlet info here...";
	}

	// 该函数用于初始化该servlet， 类似于我们的类的构造函数
	// 该函数只是会被调用一次， 当用户第一次访问该servlet的时候被调用
	@Override
	public void init(ServletConfig arg0) throws ServletException {
		System.out.println("init it !");
	}


	// service 函数用于处理业务逻辑
	// 程序员应当把业务逻辑代码写在这里
	// 该函数在用户每次访问servlet的时候都会被调用
	// ServletRequest 对象用于获得客户端信息，
	//ServletResponse 对象用于向客户端返回信息	（客户端可以理解为浏览器）
	// servelt jsp b/s
	@Override
	public void service(ServletRequest req, ServletResponse res) throws ServletException, IOException {
		System.out.println("Service start");
		PrintWriter pw=res.getWriter();
		pw.println("Hello world, Servlet");
	}
	
	
	// 销毁servlet实例（释放内存）
	// 1 reload 该servlet(webApp)
	// 2 关闭Tomcat 或者说 关机之后 都会调用这个函数
	@Override
	public void destroy() {
		System.out.println("destory it");
	}

}



3.部署Servlet。在web.xml中加入如下内容：
<servlet>
	<!--给你的servlet起名字，任意的-->
        <servlet-name>hello_servlet</servlet-name>
        <!--指明servlet的路径，包名+类名 注意类名后不能加上java-->
        <servlet-class>com.tsinghua.Hello</servlet-class>
</servlet>
 
<servlet-mapping>
	<!--mapping  自然就是映射了  于是乎 这个同上,一致-->
        <servlet-name>hello_servlet</servlet-name>
        <!--这是浏览器中输入的访问该servlet的url 任意的-->
	<url-pattern>/sp</url-pattern>
</servlet-mapping>



web.xml的最终内容如下：
<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
  version="3.0"
  metadata-complete="true">

  <display-name>Welcome to Tomcat</display-name>
  <description>
     Welcome to Tomcat
  </description>
 	  
  	<servlet>
		<!--给servlet取个名字，任意的-->
		<servlet-name>hello</servlet-name>
		<!--指定servlet的路径，就是（包名字+类名）-->
		<servlet-class>HelloServletDemo</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>hello</servlet-name>
		<url-pattern>/hello</url-pattern>
	</servlet-mapping>
	
</web-app>

这里面，servlet标签标注着我们的servlet名字和class名，而mapping标签则是代表着servlet的访问地址。


4.启动tomcat，访问你的Servlet
http://localhost:8080/mywebsite/hello

显示：Hello world, Servlet


注意：WEB-INF不要写错！不是WEB_INF，也不是WEB-INFO。

https://www.zhihu.com/question/21416727







========================================
Eclipse+Tomcat环境下部署Servlet步骤如下：
----------------------------------------
一、建立项目：建立一个动态的web项目（Dynamic Web Project），起名为BlogWeb，并在Target runtime下配置tomcat 
二、在WebContent下WEB-INF的lib里放入mysql-connector-java.5.0.5-bin.jar 
三、编写数据库操作和servlet页面信息的代码：在src里编写pojo类，数据库连接类，数据库操作类dao以及servlet中用于显示页面信息的类 
四、编写html页面，并放在WEB-INF下 
五、配置web.xml中的信息，即servlet中的页面信息 
六、创建Server并启动 
七、打开IE，输入地址进行测试 
八、发布WEB项目：将项目以WAR file形式导出，并将导出的文件置于tomcat目录下的webapps里。
这样不用启动server，也能直接用IE看见我们编写的html了


我的实践：
1.在Eclipse中提示 找不到类 javax.servlet.http.HttpServletResponse
http://bbs.csdn.net/topics/370187655?page=1

在tomcat的lib目录下可以找到的。如果你把J2EE的相关包加到buildPath里面去，那应该不会出错的。

到tomcat的安装路径下\lib\servlet-api.jar 复制到WEB-INF/lib下，然后点项目名按F5，应该就OK了。


2.如果您有一个完全合格的类名称 com.myorg.MyServlet，那么这个 Servlet 类必须位于 WEB-INF/classes/com/myorg/MyServlet.class 中。




========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------


========================================
----------------------------------------
