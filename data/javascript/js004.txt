js从入门到精通

案例+面试题驱动。

JavaScript原生对象及扩展: http://www.xinbujing.com/art/20150331/17658.html
========================================
基础篇
----------------------------------------


========================================
基础篇-变量类型
----------------------------------------
在很多书中都提到了javascript的变量类型，每本书都有不同的划分标准，如果按照typeof和instanceof的返回值来区分，可以把javascript的变量类型分为两套类型系统：基本类型和对象类型衍生出来的对象类型系统。

基本类型包括：undefined，number，boolean，string，object，function，他们之前通过typeof的返回值来区分。

第二套对象类型系统是由第一套系统衍生发展而来的，例如前面提到的Array，还有Null，Number，Boolean等等，对象类型可以通过instanceof来判断。

那么对象类型中的Number和基本类型中的number又是什么关系呢？他们又是什么区别呢？
答案就是，他们是映射关系，即下例：

var a = new Number(123);
console.log(a.valueOf()===123);//true
var b = new String(123);
console.log(b.valueOf()===123);//false
console.log(b.valueOf()==='123');//true
obj.valueOf()返回的是该对象的原始值。

========================================
arguments对象
----------------------------------------
类数组，有length属性，可以使用下标取值，但是没有数组方法。
可以转化为数组：	var arr=Array.prototype.slice.call(arguments);

function test(){
	console.log(arguments);
	//arguments.push(12);//arguments.push is not a function(…)
	var arr=Array.prototype.slice.call(arguments);
	arr.push(14);
	return arr;
}
test(1,2,3);


========================================
隐藏网页中的所有图片
----------------------------------------
var imgs = document.getElementsByTagName("img");//所有的图片集合
for(var i=0;i<imgs.length;i++){
	imgs[i].setAttribute('style','display:none');//第一张隐藏
	//imgs[imgs.length-17].setAttribute('display','none');//倒数第17张隐藏
}




========================================
动态加载js文件
----------------------------------------
<!-- dynamically load mathjax for compatibility with self-contained -->
<script>
  (function () {
    var script = document.createElement("script");
    script.type = "text/javascript";
    script.src  = "https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML";
    document.getElementsByTagName("head")[0].appendChild(script);
  })();
</script>


========================================
----------------------------------------

========================================
----------------------------------------


========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------


========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------


========================================
----------------------------------------

========================================
----------------------------------------

========================================
----------------------------------------

