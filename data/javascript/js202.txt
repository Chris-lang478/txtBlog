DOM 操作


========================================
dom插入：
----------------------------------------

existingItem.appendChild(newItem);//在existingItem内部的最后添加元素newItem
document.getElementById("myList").insertBefore(newItem,existingItem);//在myList内部的existingItem前面添加newItem

========================================
[代码实例片段]dom中插入监听：
----------------------------------------
<script type="text/javascript">
	//这是一段浏览跟踪函数，在节省字节上很下功夫。不知道截取的是否完整。
    var GoSquared={};
    GoSquared.acct = "GSN-138769-Y";
    (function(w){
        function gs(){ //该函数是立即执行函数内部，不会污染全局变量
            w._gstc_lt=+(new Date); //获取当前日期，比如 1453253776603
			var d=document;//为了节省字节
            var g = d.createElement("script"); //创建dom
				g.type = "text/javascript"; //为什么不用setAttribute？用.操作符确实节省字节，兼容性如何？
				g.async = true; 
				g.src = "../../../d1l6p2sc9645hc.cloudfront.net/tracker.js";
            var s = d.getElementsByTagName("script")[0]; //获取script标签，因为本段代码在script中添加的，至少会有一个标签。
				s.parentNode.insertBefore(g, s);//插入到dom中。第一个参数使用了s.parentNode
        }
        w.addEventListener?w.addEventListener("load",gs,false):w.attachEvent("onload",gs);//使用()?:处理兼容。比if方式节省字节
    })(window);//传入的是window，相当于是给window绑定事件。
</script>


========================================
删除dom节点
----------------------------------------
//保证传入的是node
function deleteNode(node){
	if(node.parentNode){
		console.log(i);
		node.parentNode.removeChild(node); 
	}
}
// 删除一个网页中的css表，因为aLink是动态数组，删除一个元素之后数组更新，最大角标对应的元素已经不存在，删除过程会报错。
// 倒序删除则没问题！
var aLink=document.getElementsByTagName('link');
for(var i=aLink.length-1; i>=0; i--){
		deleteNode(aLink[i]);
}
//测试站点：https://segmentfault.com/q/1010000002955089

========================================
使用||设置默认值
----------------------------------------
//例1. 这一段是设置属性的，用||设置了一个{}默认值
(google_async_config = window.google_async_config || {})['ca-pub-1307862221338762'] = {"sra_enabled":false};



//例2. 先使用CDN的jQ，如果加载失败，使用本地jQ文件
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script>
	window.jQuery||document.write('<script src="../assets/js/vendor/jquery-1.11.3.min.js"><\/script>');
</script>

========================================
css类名添加和删除
----------------------------------------
可以参考一下classList，提供了add、remove、toggle以及contains等方法方便操作className
https://segmentfault.com/q/1010000002955089


var classVal = document.getElementById("id").getAttribute("class");

//删除的话
classVal = classVal.replace("someClassName","");
document.getElementById("id").setAttribute("class",classVal );

//添加的话
classVal = classVal.concat(" someClassName");
document.getElementById("id").setAttribute("class",classVal );

//替换的话
classVal = classVal.replace("someClassName","otherClassName");
document.getElementById("id").setAttribute("class",classVal );
只是匹配个class名字，用不着正则应该。




========================================
对于ul.li按照其中的span标签内的值排序
----------------------------------------
### html 微信文章列表。 ul.li中第一个span是日期，第二个span是阅读数。
<ul>
<li><span>2019-06-26 09:16:36</span> <span title='阅读数'>[15]</span> <a target='_blank' href='https://mp.weixin.qq.com/s?__biz=MzI0NDcxNzc5Mg==&mid=2247486638&idx=1&sn=b7189e05a0332ba5a23b5492c15912ac&chksm=e958cd21de2f4437e7b072a55eacb285b6ae430c78e892f2ea96b83bdb9fdb64b30c7368358f#rd'>economist | Child-safe internet: Kids aren't alright</a></li>
<li><span>2019-06-25 06:00:00</span> <span title='阅读数'>[23]</span> <a target='_blank' href='https://mp.weixin.qq.com/s?__biz=MzI0NDcxNzc5Mg==&mid=2247486633&idx=1&sn=59c2b9d629a6b469ab6a727017e2b7b5&chksm=e958cd26de2f4430cf9f351232ee8db890904a15e7b59419bf95a765770b516fc5e45111f97f#rd'>science|What big ideas will shape U.S. science over the next ...</a></li>
</ul>


### js code
function sortByRead(){
	var oUl=document.getElementsByTagName('ul')[0];
	var aList = oUl.getElementsByTagName("li");
	var aSpan;
	
	var arr = [];
	var len = aList.length;

	for(var i=0;i<len;i++){
		aSpan =aList[i].getElementsByTagName("span");
		strs=aSpan[1].innerHTML
		//
		aList[i].id=strs.substr(1,strs.length-2)
		arr.push(aList[i]);
	};

	arr.sort(function(a,b){
		return b.id - a.id;
	});
	//console.log(arr);

	oUl.innerHTML=""
	for(i=0;i<len;i++){
		oUl.append(arr[i])
	}
};

sortByRead();

========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------



========================================
----------------------------------------


========================================
----------------------------------------

