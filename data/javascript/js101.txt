JavaScript教程

========================================
js能干什么？
----------------------------------------
js目前有统一三端的趋势:前端、后端、移动端。

- js可以直接在浏览器中运行，显示、动画、计算等
- 后端处理数据逻辑。
- 移动端结合facebook最新的项目：react native可以做出web/iOS/Android通用的应用。

js是目前唯一能运行于浏览器端的语言，你喜欢或者怨恨，都得学！

由于JavaScript的标准——ECMAScript在不断发展，最新版ECMAScript 6标准（简称ES6）已经在2015年6月正式发布了。
不过，JavaScript的核心语法并没有多大变化。我们的教程会先讲JavaScript最核心的用法，然后，针对ES6讲解新增特性。

========================================
js的运行方式
----------------------------------------
三种：
1.行内<body onload='someFunction()'>

2.script标签中：
 <script>
    alert('Hello, world');
  </script>
3.外部js文件：
<script src="/public/js/abc.js"></script>

========================================
js编辑、运行与调试
----------------------------------------
1.编辑器推荐
Sublime Text
免费，但不注册会不定时弹出提示框。

Notepad++
免费

2.如何运行JavaScript
直接双击html文件即可运行。
但由于浏览器的安全限制，以file://开头的地址无法执行如联网等JavaScript代码，最终，你还是需要架设一个Web服务器，然后以http://开头的地址来正常执行所有JavaScript代码。

3.调试
推荐用chrome浏览器调试。打开含有js的页面后，点击键盘上的F12健即可看到控制台，可以研究一下控制台的输出，以及意义。控制台对学习和调试js代码帮助巨大！

尝试控制台输入：
a=123;
console.log(a);
回车后显示的值就是变量的内容。

========================================
变量命名
----------------------------------------
- 变量前要加var ，否则是全局变量！
var x = 1, y = 2;

- 注释2种
//单行注释
/*这是
多行
注释*/

========================================
数据类型与变量
----------------------------------------
1.数据类型包括
数字	Number
字符串	string
布尔值
对象等

2.运算符
逻辑运算符：或||	且&&	非!

其中有很多例外：//todo
- ==和===的区别?
- 如何判断NaN?
- null和undefined如何判断？


3.数组
推荐使用字面量定义：arr=[1,2,3];
	arr[3]=4;
引用(下标从0开始)：arr[0] //1;



4.对象
JavaScript的对象是一组由键-值组成的无序集合，例如：
var person = {
    name: 'Bob',
    age: 20,
    tags: ['js', 'web', 'mobile'],
    city: 'Beijing',
    hasCar: true,
    zipcode: null
};
获取和设置属性使用对象变量.属性名的方式：
person.name//'Bob'
或者person['name']//'Bob'


5.动态语言变量可以随便赋值

在JavaScript中，使用等号=对变量进行赋值。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，但是要注意只能用var申明一次，例如：

var a = 123; // a的值是整数123
a = 'ABC'; // a变为字符串


6.strict模式
启用strict模式的方法是在JavaScript代码的第一行写上：
'use strict';
这是一个字符串，不支持strict模式的浏览器会把它当做一个字符串语句执行，支持strict模式的浏览器将开启strict模式运行JavaScript。


'use strict';
// 如果浏览器支持strict模式，
// 下面的代码将报ReferenceError错误:
abc = 'Hello, world';
alert(abc);

运行代码，如果浏览器报错，请修复后再运行。如果浏览器不报错，说明你的浏览器太古老了，需要尽快升级。
不用var申明的变量会被视为全局变量，为了避免这一缺陷，所有的JavaScript代码都应该使用strict模式。我们在后面编写的JavaScript代码将全部采用strict模式。




========================================
字符串
----------------------------------------
字符串常用方法：
toUpperCase()把一个字符串全部变为大写：'I am Here'.toUpperCase();// "I AM HERE"
toLowerCase()把一个字符串全部变为小写：'I am Here'.toLowerCase();// "i am here"
indexOf()会搜索指定字符串出现的位置：'I am Here'.indexOf('am');//2
substring()返回指定索引区间的子串：
	'I am Here'.substring(3,5);// 从索引3开始到5（不包括5），返回 "m "
	'I am Here'.substring(5,3);//是一样的 "m "
	'I am Here'.substring(3);//从索引3开始到结束，返回"m Here"
substr(n,m)返回指定索引n开始的m个子串：'I am Here'.substr(3,3);//从索引3开始的3个字符"m H"
'I am Here'.charAt(0); //"I"，注意这个charAt()只能用来访问，不能设置。

========================================
数组
----------------------------------------
数组越界不会报错，设置和访问的时候注意是否越界。

常用方法：
1. indexOf()与字符串方法类似，来搜索一个指定的元素的位置：
	var arr = [10, 20, '30', 'xyz'];
	arr.indexOf(10); // 元素10的索引为0
	arr.indexOf('30'); // 元素'30'的索引为2
	
2. slice()对应String的substring()，截取Array的部分元素，然后返回一个新的Array：
	注意到slice()的起止参数包括开始索引，不包括结束索引。
	
	var arr = ['A', 'B', 'C', 'D', 'E', 'F', 'G'];
	arr.slice(0, 3); // 从索引0开始，到索引3结束，但不包括索引3: ['A', 'B', 'C']
	arr.slice(3); // 从索引3开始到结束: ['D', 'E', 'F', 'G']
	
	如果不给slice()传递任何参数，它就会从头到尾截取所有元素。利用这一点，我们可以很容易地复制一个Array：



========================================
----------------------------------------

